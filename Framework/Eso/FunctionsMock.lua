--[[
This file was generated by 'EsoLuaGenerator' at '2021-09-04 16:42:29' using API version '101031'.
NOTE: This file should only be used as IDE support; it should NOT be distributed with addons!
]]

---@param journalQuestIndex number # esoui type: `luaindex`
function AbandonQuest(journalQuestIndex) end

---@param number number # esoui type: `integer`
---@param precision NumberAbbreviationPrecision
---@param useUppercaseSuffix boolean # esoui type: `bool`
---@return number abbreviatedValue
---@return string suffix
function AbbreviateNumber(number, precision, useUppercaseSuffix) end

function AbortVideoPlayback() end

function AcceptActivityFindReplacementNotification() end

function AcceptAgentChat() end

function AcceptDuel() end

---@param displayName string
function AcceptFriendRequest(displayName) end

function AcceptGroupInvite() end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GuildProcessApplicationResponse acceptedResult
function AcceptGuildApplication(guildId, index) end

---@param guildId number # esoui type: `integer`
function AcceptGuildInvite(guildId) end

function AcceptLFGReadyCheckNotification() end

function AcceptOfferedQuest() end

function AcceptResurrect() end

---@param questId number # esoui type: `integer`
function AcceptSharedQuest(questId) end

---@param eventId number # esoui type: `integer`
function AcceptWorldEventInvite(eventId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ActivateSynergy() end

---@param skillLineId number # esoui type: `integer`
---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@param isPurchased boolean # esoui type: `bool`
function AddActiveChangeToAllocationRequest(skillLineId, progressionId, morphSlot, isPurchased) end

---@param activitySetId number # esoui type: `integer`
function AddActivityFinderSetSearchEntry(activitySetId) end

---@param activityId number # esoui type: `integer`
function AddActivityFinderSpecificSearchEntry(activityId) end

---@param taskId number # esoui type: `integer`
---@param value1 number # esoui type: `integer`
---@param value2 number # esoui type: `integer`
function AddBackgroundListFilterEntry(taskId, value1, value2) end

---@param taskId number # esoui type: `integer`
---@param value number # esoui type: `id64`
function AddBackgroundListFilterEntry64(taskId, value) end

---@param taskId number # esoui type: `integer`
---@param filterType BackgroundListFilterType
function AddBackgroundListFilterType(taskId, filterType) end

function AddChatContainer() end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param name string
---@param isCombatLog boolean # esoui type: `bool`
function AddChatContainerTab(chatContainerIndex, name, isCombatLog) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@param actionType ActionBarSlotType
---@param actionId number # esoui type: `integer`
function AddHotbarSlotChangeToAllocationRequest(actionSlotIndex, hotbarCategory, actionType, actionId) end

---@param slotIndex number # esoui type: `luaindex`
---@param championSkillId number # esoui type: `integer`
function AddHotbarSlotToChampionPurchaseRequest(slotIndex, championSkillId) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param grantAccess boolean # esoui type: `bool`
---@param preset HousePermissionPresetSetting
---@param addToAllHouses boolean # esoui type: `bool`
---@param targetName string
function AddHousingPermission(houseId, permissionCategory, grantAccess, preset, addToAllHouses, targetName) end

---@param charOrDisplayName string
function AddIgnore(charOrDisplayName) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
---@return boolean wasItemAdded # esoui type: `bool`
function AddItemToDeconstructMessage(bagId, slotIndex, quantity) end

function AddMapAntiquityDigSitePins() end

---@param pinType MapDisplayPinType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function AddMapPin(pinType, param1, param2, param3) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param trackingLevel TrackingLevel
function AddMapQuestPins(journalQuestIndex, trackingLevel) end

function AddMapZoneStoryPins() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param outfitSlot OutfitSlot
---@param collectibleDefId number # esoui type: `integer`
---@param itemMaterialIndex? number # esoui type: `luaindex:nilable`
---@param primaryDyeDefId number # esoui type: `integer`
---@param secondaryDyeDefId number # esoui type: `integer`
---@param accentDyeDefId number # esoui type: `integer`
function AddOutfitSlotPreviewElementToPreviewCollection(outfitSlot, collectibleDefId, itemMaterialIndex, primaryDyeDefId, secondaryDyeDefId, accentDyeDefId) end

---@param skillLineId number # esoui type: `integer`
---@param abilityId number # esoui type: `integer`
---@param isRemoval boolean # esoui type: `bool`
function AddPassiveChangeToAllocationRequest(skillLineId, abilityId, isRemoval) end

---@param rankId number # esoui type: `integer`
---@param name string
---@param permissions number # esoui type: `integer`
---@param iconIndex number # esoui type: `luaindex`
function AddPendingGuildRank(rankId, name, permissions, iconIndex) end

---@param SCTCloudId number # esoui type: `integer`
---@param ordering number # esoui type: `integer`
---@param UIOffsetX number
---@param UIOffsetY number
function AddSCTCloudOffset(SCTCloudId, ordering, UIOffsetX, UIOffsetY) end

---@param slotIndex number # esoui type: `luaindex`
---@param sourceType SCTUnitType
function AddSCTSlotAllowedSourceType(slotIndex, sourceType) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
function AddSCTSlotAllowedTargetType(slotIndex, targetType) end

---@param slotIndex number # esoui type: `luaindex`
---@param sourceType SCTUnitType
function AddSCTSlotExcludedSourceType(slotIndex, sourceType) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
function AddSCTSlotExcludedTargetType(slotIndex, targetType) end

---@param championSkillId number # esoui type: `integer`
---@param newPendingPoints number # esoui type: `integer`
function AddSkillToChampionPurchaseRequest(championSkillId, newPendingPoints) end

---@param guildId number # esoui type: `integer`
---@param displayName string
---@param note string
---@return GuildBlacklistResponse result
function AddToGuildBlacklistByDisplayName(guildId, displayName, note) end

---@param eulaType EULAType
function AgreeToEULA(eulaType) end

function ApplyChangesToPreviewCollectionShown() end

---@param restyleMode RestyleMode
function ApplyPendingDyes(restyleMode) end

function ApplyPendingHeraldryChanges() end

function ApplySettings() end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@return boolean isKnown # esoui type: `bool`
function AreAllEnchantingRunesKnown(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex) end

---@return boolean allResultsPurchased # esoui type: `bool`
function AreAllTradingHouseSearchResultsPurchased() end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return boolean isComplete # esoui type: `bool`
function AreAllZoneStoryActivitiesCompleteForZoneCompletionType(zoneId, zoneCompletionType) end

---@return boolean isUnlocked # esoui type: `bool`
function AreAntiquitySkillLinesDiscovered() end

---@param bagId Bag
---@return boolean anyItemsStolen # esoui type: `bool`
function AreAnyItemsStolen(bagId) end

---@return boolean initialized # esoui type: `bool`
function AreCompanionSkillsInitialized() end

---@param actorCategory GameplayActorCategory
---@param outfitSlot OutfitSlot
---@param collectibleId number # esoui type: `integer`
---@return boolean primary # esoui type: `bool`
---@return boolean secondary # esoui type: `bool`
---@return boolean accent # esoui type: `bool`
function AreDyeChannelsDyeableForOutfitSlotData(actorCategory, outfitSlot, collectibleId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean primary # esoui type: `bool`
---@return boolean secondary # esoui type: `bool`
---@return boolean accent # esoui type: `bool`
function AreItemDyeChannelsDyeable(bagId, slotIndex) end

---@return boolean weaponsAreSheathed # esoui type: `bool`
function ArePlayerWeaponsSheathed() end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return boolean primary # esoui type: `bool`
---@return boolean secondary # esoui type: `bool`
---@return boolean accent # esoui type: `bool`
function AreRestyleSlotDyeChannelsDyeable(restyleMode, restyleSetIndex, restyleSlot) end

---@return boolean areInitialized # esoui type: `bool`
function AreSkillsInitialized() end

---@param unitTag1 string
---@param unitTag2 string
---@return boolean allied # esoui type: `bool`
function AreUnitsCurrentlyAllied(unitTag1, unitTag2) end

---@param unitTag string
---@param secondUnitTag string
---@return boolean areEqual # esoui type: `bool`
function AreUnitsEqual(unitTag, secondUnitTag) end

---@return boolean areUserAddOnsSupported # esoui type: `bool`
function AreUserAddOnsSupported() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function AscendStop() end

---@param campaignId number # esoui type: `integer`
---@param reassignOnEnd CampaignReassignmentRequestType
function AssignCampaignToPlayer(campaignId, reassignOnEnd) end

---@param trackedPinType MapDisplayPinType
---@return MapDisplayPinType assistedPinType
function AssistedQuestPinForTracked(trackedPinType) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function AttemptForceLock() end

---@param electionType GroupElectionType
---@param electionDescriptor string
---@param targetUnitTag string
---@return boolean sentSuccessfully # esoui type: `bool`
function BeginGroupElection(electionType, electionDescriptor, targetUnitTag) end

function BeginItemPreviewSpin() end

---@param restyleMode RestyleMode
function BeginRestyling(restyleMode) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function BindItem(bagId, slotIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@param bindingIndex number # esoui type: `luaindex`
---@param key KeyCode
---@param modifier1 KeyCode
---@param modifier2 KeyCode
---@param modifier3 KeyCode
---@param modifier4 KeyCode
function BindKeyToAction(layerIndex, categoryIndex, actionIndex, bindingIndex, key, modifier1, modifier2, modifier3, modifier4) end

---@param valueA number # esoui type: `integer`
---@param valueB number # esoui type: `integer`
---@return number result # esoui type: `integer`
function BitAnd(valueA, valueB) end

---@param value number # esoui type: `integer`
---@param numBits number # esoui type: `integer`
---@return number result # esoui type: `integer`
function BitLShift(value, numBits) end

---@param valueA number # esoui type: `integer`
---@param valueB number # esoui type: `integer`
---@return number result # esoui type: `integer`
function BitOr(valueA, valueB) end

---@param value number # esoui type: `integer`
---@param numBits number # esoui type: `integer`
---@return number result # esoui type: `integer`
function BitRShift(value, numBits) end

---@param shouldBlock boolean # esoui type: `bool`
function BlockAutomaticInputModeChange(shouldBlock) end

---@param isVisible boolean # esoui type: `bool`
function BroadcastHelpOverlayVisibilityChange(isVisible) end

---@param entryIndex number # esoui type: `luaindex`
function BuybackItem(entryIndex) end

function BuyBagSpace() end

function BuyBankSpace() end

---@param slotIndex number # esoui type: `luaindex`
function BuyGuildSpecificItem(slotIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@param quantity number # esoui type: `integer`
function BuyStoreItem(entryIndex, quantity) end

---@param progress number
---@param x1 number
---@param y1 number
---@param x2 number
---@param y2 number
---@return number result
function CalculateCubicBezierEase(progress, x1, y1, x2, y2) end

function CameraZoomIn() end

function CameraZoomOut() end

---@param abilityId number # esoui type: `integer`
---@param hotbarCategory HotBarCategory
---@return boolean canBeUsed # esoui type: `bool`
function CanAbilityBeUsedFromHotbar(abilityId, hotbarCategory) end

---@param bagId Bag
---@return boolean canBeStoredInCraftBag # esoui type: `bool`
function CanAnyItemsBeStoredInCraftBag(bagId) end

---@param guildId number # esoui type: `integer`
---@return boolean canBuy # esoui type: `bool`
function CanBuyFromTradingHouse(guildId) end

---@param campaignId number # esoui type: `integer`
---@return boolean canCampaignBeAllianceLocked # esoui type: `bool`
function CanCampaignBeAllianceLocked(campaignId) end

---@param buffIndex number # esoui type: `integer`
function CancelBuff(buffIndex) end

---@return boolean cancelled # esoui type: `bool`
function CancelCast() end

function CancelCurrentVideoPlayback() end

---@param index number # esoui type: `luaindex`
function CancelFriendRequest(index) end

function CancelGroupSearches() end

function CancelKeepGuildClaimInteraction() end

function CancelKeepGuildReleaseInteraction() end

function CancelLogout() end

---@param taskId number # esoui type: `integer`
function CancelMatchTradingHouseItemNames(taskId) end

---@param taskId number # esoui type: `integer`
function CancelRequestJournalQuestConditionAssistance(taskId) end

---@param tradeskillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
function CancelSmithingTraitResearch(tradeskillType, researchLineIndex, traitIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function CancelSoulGemResurrection() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param reason string
function CancelTaskbarWindowFlash(reason) end

---@param index number # esoui type: `luaindex`
function CancelTradingHouseListing(index) end

---@param itemUniqueId number # esoui type: `id64`
function CancelTradingHouseListingByItemUniqueId(itemUniqueId) end

---@param championSkillType ChampionSkillType
---@return boolean isSlottable # esoui type: `bool`
function CanChampionSkillTypeBeSlotted(championSkillType) end

---@return boolean canChangeBattleLevelPreference # esoui type: `bool`
function CanChangeBattleLevelPreference() end

---@param collectibleId number # esoui type: `integer`
---@return boolean canBeUnlocked # esoui type: `bool`
function CanCombinationFragmentBeUnlocked(collectibleId) end

---@param itemToBagId Bag
---@param itemToSlotIndex number # esoui type: `integer`
---@param newStyle number # esoui type: `integer`
---@return boolean canConvert # esoui type: `bool`
function CanConvertItemStyle(itemToBagId, itemToSlotIndex, newStyle) end

---@param currencyType CurrencyType
---@param currencyLocation CurrencyLocation
---@return boolean canBeStored # esoui type: `bool`
function CanCurrencyBeStoredInLocation(currencyType, currencyLocation) end

---@param rankId number # esoui type: `integer`
---@param permission GuildPermission
---@return boolean hasPermission # esoui type: `bool`
function CanEditGuildRankPermission(rankId, permission) end

---@param actorCategory GameplayActorCategory
---@param equipSlot EquipSlot
---@param outfitSlot OutfitSlot
---@return boolean canShowItem # esoui type: `bool`
function CanEquippedItemBeShownInOutfitSlot(actorCategory, equipSlot, outfitSlot) end

---@return boolean canExitInstanceImmediately # esoui type: `bool`
function CanExitInstanceImmediately() end

---@return boolean canInteractWithCrownCratesSystem # esoui type: `bool`
function CanInteractWithCrownCratesSystem() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canInteract # esoui type: `bool`
function CanInteractWithItem(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canPreview # esoui type: `bool`
function CanInventoryItemBePreviewed(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return boolean canItemBeDeconstructed # esoui type: `bool`
function CanItemBeDeconstructed(bagId, slotIndex, craftingSkillType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canBeMarkedAsJunk # esoui type: `bool`
function CanItemBeMarkedAsJunk(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canBePlayerLocked # esoui type: `bool`
function CanItemBePlayerLocked(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return boolean canItemBeRefined # esoui type: `bool`
function CanItemBeRefined(bagId, slotIndex, craftingSkillType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canBeRetraited # esoui type: `bool`
function CanItemBeRetraited(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return boolean canBeImproved # esoui type: `bool`
function CanItemBeSmithingImproved(bagId, slotIndex, craftingSkillType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return boolean canBeResearched # esoui type: `bool`
function CanItemBeSmithingTraitResearched(bagId, slotIndex, craftingSkillType, researchLineIndex, traitIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canBeVirtualItem # esoui type: `bool`
function CanItemBeVirtual(bagId, slotIndex) end

---@param itemLink string
---@return boolean canPreview # esoui type: `bool`
function CanItemLinkBePreviewed(itemLink) end

---@param itemLink string
---@return boolean canBeResearched # esoui type: `bool`
function CanItemLinkBeTraitResearched(itemLink) end

---@param itemLink string
---@return boolean canBeVirtual # esoui type: `bool`
function CanItemLinkBeVirtual(itemLink) end

---@param itemToEnchantBagId Bag
---@param itemToEnchantSlotIndex number # esoui type: `integer`
---@param enchantmentToUseBagId Bag
---@param enchantmentToUseSlotIndex number # esoui type: `integer`
---@return boolean canEnchant # esoui type: `bool`
function CanItemTakeEnchantment(itemToEnchantBagId, itemToEnchantSlotIndex, enchantmentToUseBagId, enchantmentToUseSlotIndex) end

---@param unitTag string
---@return boolean canJump # esoui type: `bool`
---@return JumpToPlayerResult result
function CanJumpToGroupMember(unitTag) end

---@return boolean canJumpToHouseFromCurrentLocation # esoui type: `bool`
function CanJumpToHouseFromCurrentLocation() end

---@param zoneId number # esoui type: `integer`
---@return boolean canJump # esoui type: `bool`
---@return JumpToPlayerResult result
function CanJumpToPlayerInZone(zoneId) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean canKeepBeFastTravelledTo # esoui type: `bool`
function CanKeepBeFastTravelledTo(keepId, battlegroundContext) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return LeaveCampaignQueueResponseType result
function CanLeaveCampaignQueue(campaignId, queueAsGroup) end

---@return boolean canLeaveCurrentLocationViaTeleport # esoui type: `bool`
function CanLeaveCurrentLocationViaTeleport() end

---@return boolean canChange # esoui type: `bool`
---@return GroupDifficultyChangeReason reason
function CanPlayerChangeGroupDifficulty() end

---@param dyeStampId number # esoui type: `integer`
---@return DyeStampUseResult dyeStampUseResult
function CanPlayerUseCostumeDyeStamp(dyeStampId) end

---@param dyeStampId number # esoui type: `integer`
---@return DyeStampUseResult dyeStampUseResult
function CanPlayerUseItemDyeStamp(dyeStampId) end

---@param marketProductId number # esoui type: `integer`
---@return boolean isPreviewable # esoui type: `bool`
function CanPreviewMarketProduct(marketProductId) end

---@param rewardId number # esoui type: `integer`
---@return boolean canPreview # esoui type: `bool`
function CanPreviewReward(rewardId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param attachmentSlot number # esoui type: `luaindex`
---@return boolean canAttach # esoui type: `bool`
function CanQueueItemAttachment(bagId, slotIndex, attachmentSlot) end

---@param questItemId number # esoui type: `integer`
---@return boolean canQuickslot # esoui type: `bool`
function CanQuickslotQuestItemById(questItemId) end

---@return boolean canRedo # esoui type: `bool`
function CanRedoLastHousingEditorCommand() end

---@param keepId number # esoui type: `integer`
---@return boolean canRespawn # esoui type: `bool`
function CanRespawnAtKeep(keepId) end

---@param antiquityId number # esoui type: `integer`
---@return AntiquityScryingResult scryingResult
function CanScryForAntiquity(antiquityId) end

---@param guildId number # esoui type: `integer`
---@return boolean canSell # esoui type: `bool`
function CanSellOnTradingHouse(guildId) end

---@return boolean canSendLFMRequest # esoui type: `bool`
function CanSendLFMRequest() end

---@return boolean canAim # esoui type: `bool`
function CanSiegeWeaponAim() end

---@return boolean canFire # esoui type: `bool`
function CanSiegeWeaponFire() end

---@return boolean canPackup # esoui type: `bool`
function CanSiegeWeaponPackUp() end

---@return boolean canBeCrafted # esoui type: `bool`
function CanSmithingApparelPatternsBeCraftedHere() end

---@return boolean canBeCrafted # esoui type: `bool`
function CanSmithingJewelryPatternsBeCraftedHere() end

---@return boolean canBeCrafted # esoui type: `bool`
function CanSmithingSetPatternsBeCraftedHere() end

---@param itemStyleId number # esoui type: `integer`
---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@return boolean canBeUsed # esoui type: `bool`
---@return number levelRequirement # esoui type: `integer`
---@return number championPointsRequirement # esoui type: `integer`
function CanSmithingStyleBeUsedOnPattern(itemStyleId, patternIndex, materialIndex, materialQuantity) end

---@return boolean canBeCrafted # esoui type: `bool`
function CanSmithingWeaponPatternsBeCraftedHere() end

---@param itemSetId number # esoui type: `integer`
---@return boolean canBeCrafted # esoui type: `bool`
function CanSpecificSmithingItemSetPatternBeCraftedHere(itemSetId) end

---@return boolean canSpin # esoui type: `bool`
function CanSpinPreviewCharacter() end

---@return boolean canRepair # esoui type: `bool`
function CanStoreRepair() end

---@param trackType TrackedDataType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@return boolean canTrack # esoui type: `bool`
function CanTrack(trackType, param1, param2) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return boolean canBeSeen # esoui type: `bool`
function CanTutorialBeSeen(tutorialIndex) end

---@return boolean canUndo # esoui type: `bool`
function CanUndoLastHousingEditorCommand() end

---@param unitTag string
---@return boolean canGainChampionPoints # esoui type: `bool`
function CanUnitGainChampionPoints(unitTag) end

---@param unitTag string
---@return boolean canTrade # esoui type: `bool`
function CanUnitTrade(unitTag) end

---@return boolean canUpdateSelectedLFGRole # esoui type: `bool`
function CanUpdateSelectedLFGRole() end

---@return boolean collectibleDyeingAllowed # esoui type: `bool`
function CanUseCollectibleDyeing() end

---@return KeepRecallStoneUseResult useResult
function CanUseKeepRecallStone() end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return boolean canUse # esoui type: `bool`
function CanUseQuestItem(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return boolean canUse # esoui type: `bool`
function CanUseQuestTool(journalQuestIndex, toolIndex) end

---@param warn boolean # esoui type: `bool`
---@return boolean canUseStuck # esoui type: `bool`
function CanUseStuck(warn) end

---@param channelId number # esoui type: `integer`
---@return boolean canWrite # esoui type: `bool`
function CanWriteGuildChannel(channelId) end

---@param zoneId number # esoui type: `integer`
---@return boolean canContinueTracking # esoui type: `bool`
function CanZoneStoryContinueTrackingActivities(zoneId) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return boolean canContinueTracking # esoui type: `bool`
function CanZoneStoryContinueTrackingActivitiesForCompletionType(zoneId, zoneCompletionType) end

---@param vote GroupVoteChoice
function CastGroupVote(vote) end

---@param characterOrDisplayName string
function ChallengeTargetToDuel(characterOrDisplayName) end

---@param messageOrigin SceneManagerMessageOrigin
---@param requestType RemoteSceneRequestType
function ChangeRemoteTopLevel(messageOrigin, requestType) end

---@param itemToChargeBagId Bag
---@param itemToChargeSlotIndex number # esoui type: `integer`
---@param soulGemToConsumeBagId Bag
---@param soulGemToConsumeSlotIndex number # esoui type: `integer`
function ChargeItemWithSoulGem(itemToChargeBagId, itemToChargeSlotIndex, soulGemToConsumeBagId, soulGemToConsumeSlotIndex) end

---@param guildId number # esoui type: `integer`
---@param keepId number # esoui type: `integer`
---@return number result # esoui type: `integer`
function CheckGuildKeepClaim(guildId, keepId) end

---@param guildId number # esoui type: `integer`
---@return number result # esoui type: `integer`
function CheckGuildKeepRelease(guildId) end

---@param numItems number # esoui type: `integer`
---@return boolean haveSpace # esoui type: `bool`
function CheckInventorySpaceAndWarn(numItems) end

---@param numItems number # esoui type: `integer`
---@return boolean haveSpace # esoui type: `bool`
function CheckInventorySpaceSilently(numItems) end

---@param combinationId number # esoui type: `integer`
---@return boolean canPerformCombination # esoui type: `bool`
function CheckPlayerCanPerformCombinationAndWarn(combinationId) end

---@param progressionIndex number # esoui type: `luaindex`
---@param morph number # esoui type: `integer`
function ChooseAbilityProgressionMorph(progressionIndex, morph) end

---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
function ChooseSkillProgressionMorphSlot(progressionId, morphSlot) end

---@param deviceType ChromaDeviceType
---@param rowIndex number # esoui type: `luaindex`
---@param columnIndex number # esoui type: `luaindex`
---@param red number
---@param green number
---@param blue number
---@param alpha number
---@param blendMode ChromaBlendMode
function ChromaApplyCustomEffectCellColor(deviceType, rowIndex, columnIndex, red, green, blue, alpha, blendMode) end

---@param deviceType ChromaDeviceType
---@param columnIndex number # esoui type: `luaindex`
---@param red number
---@param green number
---@param blue number
---@param alpha number
---@param blendMode ChromaBlendMode
function ChromaApplyCustomEffectColumnColor(deviceType, columnIndex, red, green, blue, alpha, blendMode) end

---@param deviceType ChromaDeviceType
---@param red number
---@param green number
---@param blue number
---@param alpha number
---@param blendMode ChromaBlendMode
function ChromaApplyCustomEffectFullColor(deviceType, red, green, blue, alpha, blendMode) end

---@param effectId number # esoui type: `integer`
function ChromaApplyCustomEffectId(effectId) end

---@param deviceType ChromaDeviceType
---@param rowIndex number # esoui type: `luaindex`
---@param red number
---@param green number
---@param blue number
---@param alpha number
---@param blendMode ChromaBlendMode
function ChromaApplyCustomEffectRowColor(deviceType, rowIndex, red, green, blue, alpha, blendMode) end

function ChromaClearHeadsetEffect() end

function ChromaClearKeyboardEffect() end

function ChromaClearKeypadEffect() end

function ChromaClearMouseEffect() end

function ChromaClearMousepadEffect() end

---@param red number
---@param green number
---@param blue number
function ChromaCreateHeadsetBreathingEffect(red, green, blue) end

---@param red number
---@param green number
---@param blue number
function ChromaCreateHeadsetStaticEffect(red, green, blue) end

---@param breathingType ChromaKeyboardBreathingEffectType
---@param red1 number
---@param green1 number
---@param blue1 number
---@param red2 number
---@param green2 number
---@param blue2 number
function ChromaCreateKeyboardBreathingEffect(breathingType, red1, green1, blue1, red2, green2, blue2) end

---@param reactionDuration ChromaKeyboardReactiveEffectDuration
---@param red number
---@param green number
---@param blue number
function ChromaCreateKeyboardReactiveEffect(reactionDuration, red, green, blue) end

function ChromaCreateKeyboardSpectrumCyclingEffect() end

---@param red number
---@param green number
---@param blue number
function ChromaCreateKeyboardStaticEffect(red, green, blue) end

---@param waveDirection ChromaKeyboardWaveEffectDirection
function ChromaCreateKeyboardWaveEffect(waveDirection) end

---@param breathingType ChromaKeypadBreathingEffectType
---@param red1 number
---@param green1 number
---@param blue1 number
---@param red2 number
---@param green2 number
---@param blue2 number
function ChromaCreateKeypadBreathingEffect(breathingType, red1, green1, blue1, red2, green2, blue2) end

---@param reactionDuration ChromaKeypadReactiveEffectDuration
---@param red number
---@param green number
---@param blue number
function ChromaCreateKeypadReactiveEffect(reactionDuration, red, green, blue) end

function ChromaCreateKeypadSpectrumCyclingEffect() end

---@param red number
---@param green number
---@param blue number
function ChromaCreateKeypadStaticEffect(red, green, blue) end

---@param waveDirection ChromaKeypadWaveEffectDirection
function ChromaCreateKeypadWaveEffect(waveDirection) end

---@param breathingType ChromaMouseBreathingEffectType
---@param red1 number
---@param green1 number
---@param blue1 number
---@param red2 number
---@param green2 number
---@param blue2 number
function ChromaCreateMouseBreathingEffect(breathingType, red1, green1, blue1, red2, green2, blue2) end

---@param breathingType ChromaMousepadBreathingEffectType
---@param red1 number
---@param green1 number
---@param blue1 number
---@param red2 number
---@param green2 number
---@param blue2 number
function ChromaCreateMousepadBreathingEffect(breathingType, red1, green1, blue1, red2, green2, blue2) end

function ChromaCreateMousepadSpectrumCyclingEffect() end

---@param red number
---@param green number
---@param blue number
function ChromaCreateMousepadStaticEffect(red, green, blue) end

---@param waveDirection ChromaMousepadWaveEffectDirection
function ChromaCreateMousepadWaveEffect(waveDirection) end

---@param reactionDuration ChromaMouseReactiveEffectDuration
---@param red number
---@param green number
---@param blue number
function ChromaCreateMouseReactiveEffect(reactionDuration, red, green, blue) end

function ChromaCreateMouseSpectrumCyclingEffect() end

---@param red number
---@param green number
---@param blue number
function ChromaCreateMouseStaticEffect(red, green, blue) end

---@param waveDirection ChromaMouseWaveEffectDirection
function ChromaCreateMouseWaveEffect(waveDirection) end

function ChromaDeleteAllCustomEffectIds() end

---@param effectId number # esoui type: `integer`
function ChromaDeleteCustomEffectById(effectId) end

---@param deviceType ChromaDeviceType
function ChromaFinalizeCustomEffect(deviceType) end

---@param deviceType ChromaDeviceType
---@param customEffectType ChromaCustomEffectType
---@param gridStyle ChromaCustomEffectGridStyle
---@return number effectId # esoui type: `integer`
function ChromaGenerateCustomEffect(deviceType, customEffectType, gridStyle) end

---@param deviceType ChromaDeviceType
---@param rowIndex number # esoui type: `luaindex`
---@param columnIndex number # esoui type: `luaindex`
---@return number red
---@return number green
---@return number blue
function ChromaGetCustomEffectCellColor(deviceType, rowIndex, columnIndex) end

---@param deviceType ChromaDeviceType
---@return number numRows # esoui type: `integer`
---@return number numColumn # esoui type: `integer`
function ChromaGetCustomEffectDimensions(deviceType) end

---@param deviceType ChromaDeviceType
function ChromaResetCustomEffectObject(deviceType) end

---@param effectId number # esoui type: `integer`
---@param rowIndex number # esoui type: `luaindex`
---@param columnIndex number # esoui type: `luaindex`
---@param isActive boolean # esoui type: `bool`
function ChromaSetCustomEffectCellActive(effectId, rowIndex, columnIndex, isActive) end

---@param effectId number # esoui type: `integer`
---@param blendMode ChromaBlendMode
function ChromaSetCustomEffectSingleColorBlendMode(effectId, blendMode) end

---@param effectId number # esoui type: `integer`
---@param red number
---@param green number
---@param blue number
---@param alpha number
function ChromaSetCustomEffectSingleColorRGBA(effectId, red, green, blue, alpha) end

---@param effectId number # esoui type: `integer`
---@param useAlphaChannel boolean # esoui type: `bool`
function ChromaSetCustomSingleColorFadingEffectUsesAlphaChannel(effectId, useAlphaChannel) end

---@param effectId number # esoui type: `integer`
---@param fadeValue number
function ChromaSetCustomSingleColorFadingEffectValue(effectId, fadeValue) end

function ClaimCurrentDailyLoginReward() end

---@param guildId number # esoui type: `integer`
function ClaimInteractionKeepForGuild(guildId) end

function ClaimPendingLevelUpReward() end

function ClearActiveActionRequiredTutorial() end

function ClearAllOutfitSlotPreviewElementsFromPreviewCollection() end

function ClearAllTradingHouseSearchTerms() end

function ClearAutoMapNavigationTarget() end

---@param categoryIndex number # esoui type: `luaindex`
---@param subcategoryIndex? number # esoui type: `luaindex:nilable`
function ClearCollectibleCategoryNewStatuses(categoryIndex, subcategoryIndex) end

---@param collectibleId number # esoui type: `integer`
function ClearCollectibleNewStatus(collectibleId) end

function ClearCraftBagAutoTransferNotification() end

function ClearCurrentItemPreviewCollection() end

---@return boolean clearedSomething # esoui type: `bool`
function ClearCursor() end

function ClearEsoPlusFreeTrialNotification() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ClearGameCameraPreferredTarget() end

function ClearGiftingGracePeriodStartedNotification() end

function ClearGiftingUnlockedNotification() end

function ClearGroupFinderSearch() end

---@param guildId number # esoui type: `integer`
function ClearGuildHasNewApplicationsNotification(guildId) end

function ClearHealthWarnings() end

---@param itemSetId number # esoui type: `integer`
---@param slot number # esoui type: `id64`
---@param sendUpdate boolean # esoui type: `bool`
function ClearItemSetCollectionSlotNew(itemSetId, slot, sendUpdate) end

function ClearLastSlottedItem() end

function ClearMarketProductUnlockNotifications() end

---@param outfitSlot OutfitSlot
function ClearOutfitSlotPreviewElementFromPreviewCollection(outfitSlot) end

function ClearPendingItemPurchase() end

---@param index number # esoui type: `luaindex`
function ClearPlayerApplicationNotification(index) end

function ClearPreviewingOutfitIndexInPreviewCollection() end

function ClearQueuedMail() end

---@param SCTCloudId number # esoui type: `integer`
function ClearSCTCloudOffsets(SCTCloudId) end

---@param slotIndex number # esoui type: `luaindex`
function ClearSCTSlotAllowedSourceTypes(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
function ClearSCTSlotAllowedTargetTypes(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
function ClearSCTSlotExcludedSourceTypes(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
function ClearSCTSlotExcludedTargetTypes(slotIndex) end

function ClearSessionIgnores() end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param actionSlotIndex number # esoui type: `luaindex`
function ClearSlot(actionSlotIndex) end

function ClearTrackedZoneStory() end

function CloseMailbox() end

function CloseStore() end

---NOTE! Uses variable returns...
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param equipSlot EquipSlot
---@return DerivedStats derivedStat
---@return number statDelta # esoui type: `integer`
function CompareBagItemToCurrentlyEquipped(bagId, slotIndex, equipSlot) end

---@param firstId number # esoui type: `id64`
---@param secondId number # esoui type: `id64`
---@return number result # esoui type: `integer`
function CompareId64s(firstId, secondId) end

---@param id number # esoui type: `id64`
---@param number number # esoui type: `integer`
---@return number result # esoui type: `integer`
function CompareId64ToNumber(id, number) end

---NOTE! Uses variable returns...
---@param itemLink string
---@param equipSlot EquipSlot
---@return DerivedStats derivedStat
---@return number statDelta # esoui type: `integer`
function CompareItemLinkToCurrentlyEquipped(itemLink, equipSlot) end

function CompleteQuest() end

---@param permissions number # esoui type: `integer`
---@param permission number # esoui type: `integer`
---@param enabled boolean # esoui type: `bool`
---@return number newPermissions # esoui type: `integer`
function ComposeGuildRankPermissions(permissions, permission, enabled) end

---@param worldHeight number
---@param UIHeight number
---@return number depth
function ComputeDepthAtWhichWorldHeightRendersAsUIHeight(worldHeight, UIHeight) end

---@param worldWidth number
---@param UIWidth number
---@return number depth
function ComputeDepthAtWhichWorldWidthRendersAsUIWidth(worldWidth, UIWidth) end

---@param source string
---@param target string
---@param maxDistance number # esoui type: `integer`
---@return number distance # esoui type: `integer`
function ComputeStringDistance(source, target, maxDistance) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@param accept boolean # esoui type: `bool`
function ConfirmCampaignEntry(campaignId, queueAsGroup, accept) end

---@param quitGame boolean # esoui type: `bool`
---@param option LogoutType
---@param initialResult LogoutResult
function ConfirmLogout(quitGame, option, initialResult) end

function ConfirmPendingItemPurchase() end

---@param holdKey KeyCode
---@return KeyCode key
function ConvertHoldKeyPressToNonHold(holdKey) end

---@param isChampionRank boolean # esoui type: `bool`
---@param minTierLevel? number # esoui type: `integer:nilable`
---@param maxTierLevel? number # esoui type: `integer:nilable`
---@return number minRequiredLevel # esoui type: `integer`
---@return number maxRequiredLevel # esoui type: `integer`
function ConvertItemGlyphTierRangeToRequiredLevelRange(isChampionRank, minTierLevel, maxTierLevel) end

---@param key KeyCode
---@return KeyCode holdKey
function ConvertKeyPressToHold(key) end

---@param mouseButton MouseButtonIndex
---@return KeyCode key
function ConvertMouseButtonToKeyCode(mouseButton) end

---@param sourceHouseId number # esoui type: `integer`
---@param destinationHouseId number # esoui type: `integer`
function CopyHousePermissions(sourceHouseId, destinationHouseId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return MarketPurchasableResult expectedPurchaseResult
function CouldAcquireMarketProduct(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return MarketPurchasableResult expectedGiftResult
function CouldGiftMarketProduct(marketProductId, presentationIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return MarketPurchasableResult expectedPurchaseResult
function CouldPurchaseMarketProduct(marketProductId, presentationIndex) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@param numIterations number # esoui type: `integer`
function CraftAlchemyItem(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex, numIterations) end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@param numIterations number # esoui type: `integer`
function CraftEnchantingItem(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex, numIterations) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param numIterations number # esoui type: `integer`
function CraftProvisionerItem(recipeListIndex, recipeIndex, numIterations) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param itemStyleId number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@param useUniversalStyleItem boolean # esoui type: `bool`
---@param numIterations number # esoui type: `integer`
function CraftSmithingItem(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, useUniversalStyleItem, numIterations) end

---@param target BackgroundListFilterTarget
---@param searchText string
---@return number taskId # esoui type: `integer`
function CreateBackgroundListFilter(target, searchText) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param crownCrateId number # esoui type: `integer`
---@param crownCrateParticleEffects CrownCrateParticleEffects
---@param worldX number
---@param worldY number
---@param worldZ number
---@return number? particleEffectId # esoui type: `integer:nilable`
function CreateCrownCrateSpecificParticleEffect(crownCrateId, crownCrateParticleEffects, worldX, worldY, worldZ) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param crownCrateTierId number # esoui type: `integer`
---@param crownCrateTierParticleEffects CrownCrateTierParticleEffects
---@param worldX number
---@param worldY number
---@param worldZ number
---@return number? particleEffectId # esoui type: `integer:nilable`
function CreateCrownCrateTierSpecificParticleEffect(crownCrateTierId, crownCrateTierParticleEffects, worldX, worldY, worldZ) end

---@param actionName string
---@param key KeyCode
---@param modifier1 KeyCode
---@param modifier2 KeyCode
---@param modifier3 KeyCode
---@param modifier4 KeyCode
function CreateDefaultActionBind(actionName, key, modifier1, modifier2, modifier3, modifier4) end

---@return number SCTCloudId # esoui type: `integer`
function CreateNewSCTCloud() end

---@return number SCTEventVisualInfoId # esoui type: `integer`
function CreateNewSCTEventVisualInfo() end

---@return number slotIndex # esoui type: `luaindex`
function CreateNewSCTSlot() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function CycleGameCameraPreferredEnemyTarget() end

function DeclineActivityFindReplacementNotification() end

function DeclineAgentChat() end

function DeclineDuel() end

function DeclineGroupInvite() end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@param declineMessage string
---@param blacklistApplicant boolean # esoui type: `bool`
---@param blacklistMessage string
---@return GuildProcessApplicationResponse declinedResult
---@return GuildBlacklistResponse blacklistResult
function DeclineGuildApplication(guildId, index, declineMessage, blacklistApplicant, blacklistMessage) end

function DeclineLFGReadyCheckNotification() end

function DeclineResurrect() end

---@param questId number # esoui type: `integer`
function DeclineSharedQuest(questId) end

---@param eventId number # esoui type: `integer`
function DeclineWorldEventInvite(eventId) end

---@param displayName string
---@return string decoratedDisplayName
function DecorateDisplayName(displayName) end

---@param giftId number # esoui type: `id64`
function DeleteGift(giftId) end

---@param mailId number # esoui type: `id64`
---@param forceDelete boolean # esoui type: `bool`
function DeleteMail(mailId, forceDelete) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
function DeleteWorldParticleEffect(particleEffectId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function DescendStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function DescendStop() end

function DestroyAllJunk() end

---@param taskId number # esoui type: `integer`
function DestroyBackgroundListFilter(taskId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function DestroyItem(bagId, slotIndex) end

---@return boolean causedDurabilityDamage # esoui type: `bool`
function DidDeathCauseDurabilityDamage() end

function DisablePreviewMode() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function DisableShareFeatures() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function Disconnect() end

function DisplayBankUpgrade() end

---@return boolean allSelectionsMade # esoui type: `bool`
function DoAllValidLevelUpRewardChoicesHaveSelections() end

---@param context1 number # esoui type: `integer`
---@param context2 number # esoui type: `integer`
---@return boolean intersects # esoui type: `bool`
function DoBattlegroundContextsIntersect(context1, context2) end

---@param abilityId number # esoui type: `integer`
---@return boolean exists # esoui type: `bool`
function DoesAbilityExist(abilityId) end

---@param activitySetId number # esoui type: `integer`
---@return boolean hasRewardData # esoui type: `bool`
function DoesActivitySetHaveRewardData(activitySetId) end

---@param reagentBagId Bag
---@param reagentSlotIndex number # esoui type: `integer`
---@param encodedTraits number # esoui type: `integer`
---@return boolean isKnown # esoui type: `bool`
function DoesAlchemyItemHaveKnownEncodedTrait(reagentBagId, reagentSlotIndex, encodedTraits) end

---@param reagentBagId Bag
---@param reagentSlotIndex number # esoui type: `integer`
---@param traitId number # esoui type: `integer`
---@return boolean isKnown # esoui type: `bool`
function DoesAlchemyItemHaveKnownTrait(reagentBagId, reagentSlotIndex, traitId) end

---@param antiquityId number # esoui type: `integer`
---@return boolean hasLead # esoui type: `bool`
function DoesAntiquityHaveLead(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return boolean needsCombination # esoui type: `bool`
function DoesAntiquityNeedCombination(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return boolean isVisible # esoui type: `bool`
---@return number errorStringId # esoui type: `integer`
function DoesAntiquityPassVisibilityRequirements(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return boolean requiresLead # esoui type: `bool`
function DoesAntiquityRequireLead(antiquityId) end

---@param destinationBagId Bag
---@param sourceBagId Bag
---@param sourceSlotIndex number # esoui type: `integer`
---@return boolean hasSpace # esoui type: `bool`
function DoesBagHaveSpaceFor(destinationBagId, sourceBagId, sourceSlotIndex) end

---@param destinationBagId Bag
---@param itemLink string
---@return boolean hasSpace # esoui type: `bool`
function DoesBagHaveSpaceForItemLink(destinationBagId, itemLink) end

---@param bagId Bag
---@return boolean doesBankHoldCurrency # esoui type: `bool`
function DoesBankHoldCurrency(bagId) end

---@param campaignId number # esoui type: `integer`
---@return boolean hasEmperor # esoui type: `bool`
function DoesCampaignHaveEmperor(campaignId) end

---@param championSkillId number # esoui type: `integer`
---@return boolean hasJumpPoints # esoui type: `bool`
function DoesChampionSkillHaveJumpPoints(championSkillId) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@return boolean containsSlottableCollectibles # esoui type: `bool`
function DoesCollectibleCategoryContainSlottableCollectibles(topLevelIndex, categoryIndex) end

---@param collectibleCategoryType CollectibleCategoryType
---@param actorCategory GameplayActorCategory
---@return boolean hasDefault # esoui type: `bool`
function DoesCollectibleCategoryTypeHaveDefault(collectibleCategoryType, actorCategory) end

---@param collectibleId number # esoui type: `integer`
---@return boolean hasVisibleAppearance # esoui type: `bool`
function DoesCollectibleHaveVisibleAppearance(collectibleId) end

---@param currencyType CurrencyType
---@param currencyQuantity number # esoui type: `integer`
---@return boolean showConfirmation # esoui type: `bool`
function DoesCurrencyAmountMeetConfirmationThreshold(currencyType, currencyQuantity) end

---@return boolean isNoChampionPointsCampaign # esoui type: `bool`
function DoesCurrentCampaignRulesetAllowChampionPoints() end

---@return boolean requiresIME # esoui type: `bool`
function DoesCurrentLanguageRequireIME() end

---@return boolean matches # esoui type: `bool`
function DoesCurrentMapMatchMapForPlayerLocation() end

---@return boolean isInMap # esoui type: `bool`
function DoesCurrentMapShowPlayerWorld() end

---@return boolean allowsBattleLevelScaling # esoui type: `bool`
function DoesCurrentZoneAllowBattleLevelScaling() end

---@return boolean allowsScaling # esoui type: `bool`
function DoesCurrentZoneAllowScalingByLevel() end

---@return boolean telvarBehaviorEnabled # esoui type: `bool`
function DoesCurrentZoneHaveTelvarStoneBehavior() end

---@param collectibleId number # esoui type: `integer`
---@return boolean unlockedViaSubscription # esoui type: `bool`
function DoesESOPlusUnlockCollectible(collectibleId) end

---@param furnitureTheme FurnitureThemeType
---@return boolean showInBrowser # esoui type: `bool`
function DoesFurnitureThemeShowInBrowser(furnitureTheme) end

---@return boolean hasFocus # esoui type: `bool`
function DoesGameHaveFocus() end

---@param activityId number # esoui type: `integer`
---@return boolean meetsLevelRequirements # esoui type: `bool`
function DoesGroupMeetActivityLevelRequirements(activityId) end

---@return boolean doesRequireVote # esoui type: `bool`
function DoesGroupModificationRequireVote() end

---@param guildId number # esoui type: `integer`
---@param attribute GuildMetaDataAttribute
---@return boolean hasAllData # esoui type: `bool`
function DoesGuildDataHaveInitializedAttributes(guildId, attribute) end

---@param guildId number # esoui type: `integer`
---@param activity GuildActivityAttributeValue
---@return boolean hasActivity # esoui type: `bool`
function DoesGuildHaveActivityAttribute(guildId, activity) end

---@param guildId number # esoui type: `integer`
---@return boolean hasClaimedKeep # esoui type: `bool`
function DoesGuildHaveClaimedKeep(guildId) end

---@param guildId number # esoui type: `integer`
---@return boolean doesHaveNotification # esoui type: `bool`
function DoesGuildHaveNewApplicationsNotification(guildId) end

---@param guildId number # esoui type: `integer`
---@param privilege GuildPrivilege
---@return boolean hasPrivilege # esoui type: `bool`
function DoesGuildHavePrivilege(guildId, privilege) end

---@param guildId number # esoui type: `integer`
---@param role LFGRole
---@return boolean hasRole # esoui type: `bool`
function DoesGuildHaveRoleAttribute(guildId, role) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@return boolean hasMoreEvents # esoui type: `bool`
function DoesGuildHistoryCategoryHaveMoreEvents(guildId, category) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@return boolean hasOutstandingRequest # esoui type: `bool`
function DoesGuildHistoryCategoryHaveOutstandingRequest(guildId, category) end

---@param guildId number # esoui type: `integer`
---@param rankIndex number # esoui type: `luaindex`
---@param permission GuildPermission
---@return boolean hasPermission # esoui type: `bool`
function DoesGuildRankHavePermission(guildId, rankIndex, permission) end

---@param battlegroundContext BattlegroundQueryContextType
---@param oldHistoryPercent number
---@param newHistoryPercent number
---@return boolean needsRebuild # esoui type: `bool`
function DoesHistoryRequireMapRebuild(battlegroundContext, oldHistoryPercent, newHistoryPercent) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@return boolean hasAccess # esoui type: `bool`
function DoesHousingUserGroupHaveAccess(houseId, permissionCategory, index) end

---@return boolean hasEmptyGem # esoui type: `bool`
function DoesInventoryContainEmptySoulGem() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return boolean fulfillsCondition # esoui type: `bool`
function DoesItemFulfillJournalQuestCondition(bagId, slotIndex, journalQuestIndex, stepIndex, conditionIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean hasDurability # esoui type: `bool`
function DoesItemHaveDurability(bagId, slotIndex) end

---@param itemLink string
---@return boolean finishesQuest # esoui type: `bool`
function DoesItemLinkFinishQuest(itemLink) end

---@param link string
---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param isSelfCrafted? boolean # esoui type: `bool:nilable`
---@return boolean fulfillsCondition # esoui type: `bool`
function DoesItemLinkFulfillJournalQuestCondition(link, journalQuestIndex, stepIndex, conditionIndex, isSelfCrafted) end

---@param itemLink string
---@return boolean hasArmorDecay # esoui type: `bool`
function DoesItemLinkHaveArmorDecay(itemLink) end

---@param itemLink string
---@return boolean hasCharges # esoui type: `bool`
function DoesItemLinkHaveEnchantCharges(itemLink) end

---@param itemLink string
---@return boolean startsQuest # esoui type: `bool`
function DoesItemLinkStartQuest(itemLink) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param itemTraitType ItemTraitType
---@param itemStyleId number # esoui type: `integer`
---@return boolean isMatchingItem # esoui type: `bool`
function DoesItemMatchSmithingMaterialTraitAndStyle(bagId, slotIndex, materialItemId, itemTraitType, itemStyleId) end

---@return boolean hasNewPieces # esoui type: `bool`
function DoesItemSetCollectionsHaveAnyNewPieces() end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return boolean hasPosition # esoui type: `bool`
function DoesJournalQuestConditionHavePosition(journalQuestIndex, stepIndex, conditionIndex) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean doesPassVisibilityCheck # esoui type: `bool`
function DoesKeepPassCompassVisibilitySubzoneCheck(keepId, battlegroundContext) end

---@param keepType KeepType
---@return boolean hasSiegeLimit # esoui type: `bool`
function DoesKeepTypeHaveSiegeLimit(keepType) end

---@param index number # esoui type: `luaindex`
---@return boolean hasAttacker # esoui type: `bool`
function DoesKillingAttackHaveAttacker(index) end

---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param filterTypes number # esoui type: `integer`
---@return boolean containsProducts # esoui type: `bool`
function DoesMarketProductCategoryContainFilteredProducts(displayGroup, topLevelIndex, categoryIndex, filterTypes) end

---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param filterTypes number # esoui type: `integer`
---@return boolean containsProducts # esoui type: `bool`
function DoesMarketProductCategoryOrSubcategoriesContainFilteredProducts(displayGroup, topLevelIndex, categoryIndex, filterTypes) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean hasDLC # esoui type: `bool`
function DoesMarketProductContainDLC(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@param filterTypes number # esoui type: `integer`
---@return boolean matchesFilter # esoui type: `bool`
function DoesMarketProductMatchFilter(marketProductId, presentationIndex, filterTypes) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean passesPurchaseReq # esoui type: `bool`
---@return number errorStringId # esoui type: `integer`
function DoesMarketProductPassPurchasableReqList(marketProductId) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean exists # esoui type: `bool`
function DoesObjectiveExist(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean doesPassVisiblityCheck # esoui type: `bool`
function DoesObjectivePassCompassVisibilitySubzoneCheck(keepId, objectiveId, battlegroundContext) end

---@return boolean doesPlatformAllowConfiguringAutomaticInputChanging # esoui type: `bool`
function DoesPlatformAllowConfiguringAutomaticInputChanging() end

---@return boolean usesExternalLinks # esoui type: `bool`
function DoesPlatformStoreUseExternalLinks() end

---@return boolean supportsCodeRedemption # esoui type: `bool`
function DoesPlatformSupportCodeRedemption() end

---@return boolean canDisableShareFeatures # esoui type: `bool`
function DoesPlatformSupportDisablingShareFeatures() end

---@param settingId number # esoui type: `integer`
---@return boolean isSettingSupported # esoui type: `bool`
function DoesPlatformSupportGraphicSetting(settingId) end

---@param guildId number # esoui type: `integer`
---@param permission GuildPermission
---@return boolean hasPermission # esoui type: `bool`
function DoesPlayerHaveGuildPermission(guildId, permission) end

---@param aspectItemId number # esoui type: `integer`
---@param essenceItemId number # esoui type: `integer`
---@param potencyItemId number # esoui type: `integer`
---@return boolean hasRunes # esoui type: `bool`
function DoesPlayerHaveRunesForEnchanting(aspectItemId, essenceItemId, potencyItemId) end

---@param activityId number # esoui type: `integer`
---@return boolean meetsLevelRequirements # esoui type: `bool`
function DoesPlayerMeetActivityLevelRequirements(activityId) end

---@param campaignId number # esoui type: `integer`
---@return boolean meetsJoiningRequirements # esoui type: `bool`
function DoesPlayerMeetCampaignRequirements(campaignId) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
---@return boolean allowed # esoui type: `bool`
function DoesSCTSlotAllowSourceType(slotIndex, targetType) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
---@return boolean allowed # esoui type: `bool`
function DoesSCTSlotAllowTargetType(slotIndex, targetType) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
---@return boolean allowed # esoui type: `bool`
function DoesSCTSlotExcludeSourceType(slotIndex, targetType) end

---@param slotIndex number # esoui type: `luaindex`
---@param targetType SCTUnitType
---@return boolean allowed # esoui type: `bool`
function DoesSCTSlotExcludeTargetType(slotIndex, targetType) end

---@param tradeskillType TradeskillType
---@return boolean ignoresStyleItems # esoui type: `bool`
function DoesSmithingTypeIgnoreStyleItems(tradeskillType) end

---@param consoleEnhancedRenderQuality ConsoleEnhancedRenderQuality
---@return boolean hasSupport # esoui type: `bool`
function DoesSystemSupportConsoleEnhancedRenderQuality(consoleEnhancedRenderQuality) end

---@return boolean supportsHDR # esoui type: `bool`
function DoesSystemSupportHDR() end

---@param unitTag string
---@return boolean exists # esoui type: `bool`
function DoesUnitExist(unitTag) end

---@param unitTag string
---@return boolean hasResurrectPending # esoui type: `bool`
function DoesUnitHaveResurrectPending(unitTag) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return boolean hasBranchesWithDifferentLengths # esoui type: `bool`
function DoesZoneCompletionTypeInZoneHaveBranchesWithDifferentLengths(zoneId, zoneCompletionType) end

---@param forceDismount boolean # esoui type: `bool`
function EnablePreviewMode(forceDismount) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function EnableShareFeatures() end

---@param itemToEnchantBagId Bag
---@param itemToEnchantSlotIndex number # esoui type: `integer`
---@param enchantmentToUseBagId Bag
---@param enchantmentToUseSlotIndex number # esoui type: `integer`
function EnchantItem(itemToEnchantBagId, itemToEnchantSlotIndex, enchantmentToUseBagId, enchantmentToUseSlotIndex) end

function EndCurrentItemPreview() end

function EndHeraldryCustomization() end

---@param interactionType number # esoui type: `integer`
function EndInteraction(interactionType) end

function EndItemPreviewSpin() end

function EndLooting() end

function EndPendingInteraction() end

function EndRestyling() end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
function EquipOutfit(actorCategory, outfitIndex) end

---@param text string
function ExecuteChatCommand(text) end

---@param page number # esoui type: `integer`
---@param sortField TradingHouseSortField
---@param sortAscending boolean # esoui type: `bool`
---@param useLastExecutedSearchFilters boolean # esoui type: `bool`
function ExecuteTradingHouseSearch(page, sortField, sortAscending, useLastExecutedSearchFilters) end

function ExitInstanceImmediately() end

---@param nodeIndex number # esoui type: `luaindex`
function FastTravelToNode(nodeIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number? currentSlot # esoui type: `luaindex:nilable`
function FindActionSlotMatchingItem(bagId, slotIndex) end

---@param actionType ActionBarSlotType
---@param actionId number # esoui type: `integer`
---@return number? currentActionSlotIndex # esoui type: `luaindex:nilable`
function FindActionSlotMatchingSimpleAction(actionType, actionId) end

---@param bagId Bag
---@return number? slotIndex # esoui type: `integer:nilable`
function FindFirstEmptySlotInBag(bagId) end

---@param tutorialIndex number # esoui type: `luaindex`
function FireTutorialHiddenEvent(tutorialIndex) end

function FlagMarketAnnouncementSeen() end

---@param stage HealthWarningStage
---@param flashTimeMs number # esoui type: `integer`
function FlashHealthWarningStage(stage, flashTimeMs) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param reason string
---@param flashCount number # esoui type: `integer`
---@param flashRateMs number # esoui type: `integer`
function FlashTaskbarWindow(reason, flashCount, flashRateMs) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ForceCancelMounted() end

---@param timestamp string
---@return string date
---@return string time
function FormatAchievementLinkTimestamp(timestamp) end

---@param num number
---@return string formattedString
function FormatFloatRelevantFraction(num) end

---@param number number # esoui type: `integer`
---@param delimiter string
---@param digitGroupSize number # esoui type: `integer`
---@return string formattedNumber
function FormatIntegerWithDigitGrouping(number, delimiter, digitGroupSize) end

---@param timeValueInMilliseconds number # esoui type: `integer`
---@param formatType TimeFormatStyleCode
---@param precisionType TimeFormatPrecisionCode
---@param direction TimeFormatDirectionCode
---@return string formattedTimeString
---@return number nextUpdateTimeInMilliseconds # esoui type: `integer`
function FormatTimeMilliseconds(timeValueInMilliseconds, formatType, precisionType, direction) end

---@param timeValueInSeconds number
---@param formatType TimeFormatStyleCode
---@param precisionType TimeFormatPrecisionCode
---@param direction TimeFormatDirectionCode
---@return string formattedTimeString
---@return number nextUpdateTimeInSec
function FormatTimeSeconds(timeValueInSeconds, formatType, precisionType, direction) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function GameCameraGamepadZoomDown() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function GameCameraGamepadZoomUp() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function GameCameraInteractStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function GameCameraMouseFreeLookStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function GameCameraMouseFreeLookStop() end

---@param itemId number # esoui type: `integer`
---@param howMany number # esoui type: `integer`
function GemifyItem(itemId, howMany) end

---@param bgQueryType BattlegroundQueryContextType
---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param objectivePinTier ObjectivePinTier
---@return string text
---@return InterfaceColorType interfaceColorType
---@return number color # esoui type: `integer`
function GenerateAvAObjectiveConditionTooltipLine(bgQueryType, keepId, objectiveId, objectivePinTier) end

---@param mapPingType MapDisplayPinType
---@param unitTag string
---@return string text
---@return InterfaceColorType interfaceColorType
---@return number color # esoui type: `integer`
function GenerateMapPingTooltipLine(mapPingType, unitTag) end

---@param itemLink string
---@return string description
function GenerateMasterWritBaseText(itemLink) end

---@param itemLink string
---@return string description
function GenerateMasterWritRewardText(itemLink) end

---@param questIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param useShortDescription boolean # esoui type: `bool`
---@return string text
---@return InterfaceColorType interfaceColorType
---@return number color # esoui type: `integer`
function GenerateQuestConditionTooltipLine(questIndex, stepIndex, conditionIndex, useShortDescription) end

---@param questIndex number # esoui type: `luaindex`
---@return string text
---@return InterfaceColorType interfaceColorType
---@return number color # esoui type: `integer`
function GenerateQuestEndingTooltipLine(questIndex) end

---@param unitTag string
---@return string text
---@return InterfaceColorType interfaceColorType
---@return number color # esoui type: `integer`
function GenerateUnitNameTooltipLine(unitTag) end

---@param abilityId number # esoui type: `integer`
---@return number angleDistance # esoui type: `integer`
function GetAbilityAngleDistance(abilityId) end

---@param abilityId number # esoui type: `integer`
---@return BuffType buffType
function GetAbilityBuffType(abilityId) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return boolean channeled # esoui type: `bool`
---@return number castTime # esoui type: `integer`
---@return number channelTime # esoui type: `integer`
function GetAbilityCastInfo(abilityId, overrideRank, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@param casterUnitTag string
---@return number durationMs # esoui type: `integer`
function GetAbilityCooldown(abilityId, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@return number cost # esoui type: `integer`
---@return CombatMechanicType mechanic
function GetAbilityCost(abilityId, overrideRank) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@return number cost # esoui type: `integer`
---@return CombatMechanicType mechanicType
---@return number chargeFrequencyMS # esoui type: `integer`
function GetAbilityCostOverTime(abilityId, overrideRank) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return string description
function GetAbilityDescription(abilityId, overrideRank, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@param casterUnitTag string
---@return string header
function GetAbilityDescriptionHeader(abilityId, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return number durationMs # esoui type: `integer`
function GetAbilityDuration(abilityId, overrideRank, casterUnitTag) end

---@param effectSlotId number # esoui type: `integer`
---@return string description
function GetAbilityEffectDescription(effectSlotId) end

---@param abilityId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetAbilityIcon(abilityId) end

---@param abilityIndex number # esoui type: `luaindex`
---@return number abilityId # esoui type: `integer`
function GetAbilityIdByIndex(abilityIndex) end

---@param abilityIndex number # esoui type: `luaindex`
---@return string name
---@return string texture
---@return number rank # esoui type: `integer`
---@return number actionSlotType # esoui type: `integer`
---@return boolean passive # esoui type: `bool`
---@return boolean showInSpellbook # esoui type: `bool`
function GetAbilityInfoByIndex(abilityIndex) end

---@param abilityId number # esoui type: `integer`
---@return string abilityName
function GetAbilityName(abilityId) end

---NOTE! Uses variable returns...
---@param abilityId number # esoui type: `integer`
---@return string newEffect
function GetAbilityNewEffectLines(abilityId) end

---@param progressionIndex number # esoui type: `luaindex`
---@param morph number # esoui type: `integer`
---@param rank number # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
function GetAbilityProgressionAbilityId(progressionIndex, morph, rank) end

---@param progressionIndex number # esoui type: `luaindex`
---@param morph number # esoui type: `integer`
---@param rank number # esoui type: `integer`
---@return string name
---@return string texture
---@return number abilityIndex # esoui type: `luaindex`
function GetAbilityProgressionAbilityInfo(progressionIndex, morph, rank) end

---@param progressionIndex number # esoui type: `luaindex`
---@return string name
---@return number morph # esoui type: `integer`
---@return number rank # esoui type: `integer`
function GetAbilityProgressionInfo(progressionIndex) end

---@param abilityId number # esoui type: `integer`
---@return number? rank # esoui type: `integer:nilable`
function GetAbilityProgressionRankFromAbilityId(abilityId) end

---@param progressionIndex number # esoui type: `luaindex`
---@return number lastRankXp # esoui type: `integer`
---@return number nextRankXP # esoui type: `integer`
---@return number currentXP # esoui type: `integer`
---@return boolean atMorph # esoui type: `bool`
function GetAbilityProgressionXPInfo(progressionIndex) end

---@param abilityId number # esoui type: `integer`
---@return boolean hasProgression # esoui type: `bool`
---@return number progressionIndex # esoui type: `luaindex`
---@return number lastRankXp # esoui type: `integer`
---@return number nextRankXP # esoui type: `integer`
---@return number currentXP # esoui type: `integer`
---@return boolean atMorph # esoui type: `bool`
function GetAbilityProgressionXPInfoFromAbilityId(abilityId) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return number radius # esoui type: `integer`
function GetAbilityRadius(abilityId, overrideRank, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return number minRangeCM # esoui type: `integer`
---@return number maxRangeCM # esoui type: `integer`
function GetAbilityRange(abilityId, overrideRank, casterUnitTag) end

---@param abilityId number # esoui type: `integer`
---@return boolean isTankRoleAbility # esoui type: `bool`
---@return boolean isHealerRoleAbility # esoui type: `bool`
---@return boolean isDamageRoleAbility # esoui type: `bool`
function GetAbilityRoles(abilityId) end

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return string? targetDescription # esoui type: `string:nilable`
function GetAbilityTargetDescription(abilityId, overrideRank, casterUnitTag) end

---NOTE! Uses variable returns...
---@param abilityId number # esoui type: `integer`
---@return string label
---@return string oldValue
---@return string newValue
function GetAbilityUpgradeLines(abilityId) end

---@param categoryIndex number # esoui type: `luaindex`
---@return string gamepadIcon # esoui type: `textureName`
function GetAchievementCategoryGamepadIcon(categoryIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@return string name
---@return number numSubCatgories # esoui type: `integer`
---@return number numAchievements # esoui type: `integer`
---@return number earnedPoints # esoui type: `integer`
---@return number totalPoints # esoui type: `integer`
---@return boolean hidesPoints # esoui type: `bool`
function GetAchievementCategoryInfo(topLevelIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@return string normalIcon # esoui type: `textureName`
---@return string pressedIcon # esoui type: `textureName`
---@return string mouseoverIcon # esoui type: `textureName`
function GetAchievementCategoryKeyboardIcons(categoryIndex) end

---@param achievementId number # esoui type: `integer`
---@param criterionIndex number # esoui type: `luaindex`
---@return string description
---@return number numCompleted # esoui type: `integer`
---@return number numRequired # esoui type: `integer`
function GetAchievementCriterion(achievementId, criterionIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param achievementIndex number # esoui type: `luaindex`
---@return number achievementId # esoui type: `integer`
function GetAchievementId(topLevelIndex, categoryIndex, achievementIndex) end

---@param link string
---@return number achievementId # esoui type: `integer`
function GetAchievementIdFromLink(link) end

---@param achievementId number # esoui type: `integer`
---@return string name
---@return string description
---@return number points # esoui type: `integer`
---@return string icon # esoui type: `textureName`
---@return boolean completed # esoui type: `bool`
---@return string date
---@return string time
function GetAchievementInfo(achievementId) end

---@param achievementId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetAchievementItemLink(achievementId, linkStyle) end

---@param achievementId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetAchievementLink(achievementId, linkStyle) end

---@param achievementId number # esoui type: `integer`
---@return string name
function GetAchievementName(achievementId) end

---@param link string
---@return string name
function GetAchievementNameFromLink(link) end

---@param achievementId number # esoui type: `integer`
---@return number numCriteria # esoui type: `integer`
function GetAchievementNumCriteria(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetAchievementNumRewards(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return number progress # esoui type: `id64`
function GetAchievementProgress(achievementId) end

---NOTE! Uses variable returns...
---@param achievementId number # esoui type: `integer`
---@param progress string
---@return number numCompleted # esoui type: `integer`
function GetAchievementProgressFromLinkData(achievementId, progress) end

---@param achievementId number # esoui type: `integer`
---@return boolean hasRewardOfType # esoui type: `bool`
---@return number collectibleId # esoui type: `integer`
function GetAchievementRewardCollectible(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return boolean hasRewardOfType # esoui type: `bool`
---@return number dyeId # esoui type: `integer`
function GetAchievementRewardDye(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return boolean hasRewardOfType # esoui type: `bool`
---@return string itemName
---@return string iconTextureName
---@return ItemDisplayQuality displayQuality
function GetAchievementRewardItem(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return number points # esoui type: `integer`
function GetAchievementRewardPoints(achievementId) end

---@param achievementId number # esoui type: `integer`
---@return boolean hasRewardOfType # esoui type: `bool`
---@return string titleName
function GetAchievementRewardTitle(achievementId) end

---@param searchResultIndex number # esoui type: `luaindex`
---@return number categoryIndex # esoui type: `luaindex`
---@return number? subcategoryIndex # esoui type: `luaindex:nilable`
---@return number achievementIndex # esoui type: `luaindex`
function GetAchievementsSearchResult(searchResultIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex number # esoui type: `luaindex`
---@return string name
---@return number numAchievements # esoui type: `integer`
---@return number earnedPoints # esoui type: `integer`
---@return number totalPoints # esoui type: `integer`
---@return boolean hidesPoints # esoui type: `bool`
function GetAchievementSubCategoryInfo(topLevelIndex, subCategoryIndex) end

---@param achievementId number # esoui type: `integer`
---@return number timestamp # esoui type: `id64`
function GetAchievementTimestamp(achievementId) end

---@return ActionBarLockedReason actionBarLockedReason
function GetActionBarLockedReason() end

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@param bindingIndex number # esoui type: `luaindex`
---@return KeyCode keyCode
---@return KeyCode mod1
---@return KeyCode mod2
---@return KeyCode mod3
---@return KeyCode mod4
function GetActionBindingInfo(layerIndex, categoryIndex, actionIndex, bindingIndex) end

---@param actionName string
---@return number? layerIndex # esoui type: `luaindex:nilable`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? actionIndex # esoui type: `luaindex:nilable`
function GetActionIndicesFromName(actionName) end

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@return string actionName
---@return boolean isRebindable # esoui type: `bool`
---@return boolean isHidden # esoui type: `bool`
function GetActionInfo(layerIndex, categoryIndex, actionIndex) end

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@return string categoryName
---@return number numActions # esoui type: `integer`
function GetActionLayerCategoryInfo(layerIndex, categoryIndex) end

---@param layerIndex number # esoui type: `luaindex`
---@return string layerName
---@return number numLayerCategories # esoui type: `integer`
function GetActionLayerInfo(layerIndex) end

---@param layerIndex number # esoui type: `luaindex`
---@return string layerName
function GetActionLayerNameByIndex(layerIndex) end

---@param layerName string
---@param keyCode KeyCode
---@return string actionName
function GetActionNameFromKey(layerName, keyCode) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number durationMilliseconds # esoui type: `integer`
function GetActionSlotEffectDuration(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number stackCount # esoui type: `integer`
function GetActionSlotEffectStackCount(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number timeRemainingMilliseconds # esoui type: `integer`
function GetActionSlotEffectTimeRemaining(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return string slotUnlockText
function GetActionSlotUnlockText(actionSlotIndex, hotbarCategory) end

---@param activeActionLayerIndex number # esoui type: `luaindex`
---@return number? layerIndex # esoui type: `luaindex:nilable`
function GetActiveActionLayerIndex(activeActionLayerIndex) end

---NOTE! Uses variable returns...
---@param houseTemplateId number # esoui type: `integer`
---@return number marketProductId # esoui type: `integer`
---@return number presentationIndex # esoui type: `luaindex`
function GetActiveAnnouncementMarketProductListingsForHouseTemplate(houseTemplateId) end

---NOTE! Uses variable returns...
---@param displayGroup MarketDisplayGroup
---@return number marketProductId # esoui type: `integer`
function GetActiveChapterUpgradeMarketProductListings(displayGroup) end

---@param categoryType CollectibleCategoryType
---@param actorCategory GameplayActorCategory
---@return number collectibleId # esoui type: `integer`
function GetActiveCollectibleByType(categoryType, actorCategory) end

---@param activeCombatTipId number # esoui type: `integer`
---@return string name
---@return string tipText
---@return string iconPath
function GetActiveCombatTipInfo(activeCombatTipId) end

---@return number activeCompanionDefId # esoui type: `integer`
function GetActiveCompanionDefId() end

---@param numXP number # esoui type: `integer`
---@param startingLevel? number # esoui type: `integer:nilable`
---@return number level # esoui type: `integer`
function GetActiveCompanionLevelForExperiencePoints(numXP, startingLevel) end

---@return number level # esoui type: `integer`
---@return number currentExperience # esoui type: `integer`
function GetActiveCompanionLevelInfo() end

---@return number rapport # esoui type: `integer`
function GetActiveCompanionRapport() end

---@return CompanionRapportLevel rapportLevel
function GetActiveCompanionRapportLevel() end

---@param rapportLevel CompanionRapportLevel
---@return string rapportLevelDescription
function GetActiveCompanionRapportLevelDescription(rapportLevel) end

---@return number videoDataId # esoui type: `integer`
function GetActiveCutsceneVideoDataId() end

---@return string videoPath
function GetActiveCutsceneVideoPath() end

---@return HotBarCategory hotbarCategory
function GetActiveHotbarCategory() end

---NOTE! Uses variable returns...
---@param houseTemplateId number # esoui type: `integer`
---@param displayGroup MarketDisplayGroup
---@return number marketProductId # esoui type: `integer`
---@return number presentationIndex # esoui type: `luaindex`
function GetActiveMarketProductListingsForHouseTemplate(houseTemplateId, displayGroup) end

---@return ActiveWeaponPair activeWeaponPair
---@return boolean locked # esoui type: `bool`
function GetActiveWeaponPairInfo() end

---@param activityId number # esoui type: `integer`
---@param role LFGRole
---@return boolean hasData # esoui type: `bool`
---@return number timeSeconds # esoui type: `integer`
function GetActivityAverageRoleTime(activityId, role) end

---@param activityId number # esoui type: `integer`
---@return number battlegroundId # esoui type: `integer`
function GetActivityBattlegroundId(activityId) end

---@return ActivityFinderStatus status
function GetActivityFinderStatus() end

---@return number? activityId # esoui type: `integer:nilable`
function GetActivityFindReplacementNotificationInfo() end

---@param activityId number # esoui type: `integer`
---@return string descriptionTextureGamepad # esoui type: `textureName`
function GetActivityGamepadDescriptionTexture(activityId) end

---@param activityId number # esoui type: `integer`
---@return LFGGroupType groupTypeAllowed
function GetActivityGroupType(activityId) end

---@param activity LFGActivity
---@param index number # esoui type: `luaindex`
---@return number activityId # esoui type: `integer`
function GetActivityIdByTypeAndIndex(activity, index) end

---@param activityId number # esoui type: `integer`
---@return string name
---@return number levelMin # esoui type: `integer`
---@return number levelMax # esoui type: `integer`
---@return number championPointsMin # esoui type: `integer`
---@return number championPointsMax # esoui type: `integer`
---@return LFGGroupType groupType
---@return number minGroupSize # esoui type: `integer`
---@return string description
---@return number sortOrder # esoui type: `integer`
function GetActivityInfo(activityId) end

---@param activityId number # esoui type: `integer`
---@return string descriptionTextureSmallKeyboard # esoui type: `textureName`
---@return string descriptionTextureLargeKeyboard # esoui type: `textureName`
function GetActivityKeyboardDescriptionTextures(activityId) end

---@param activityId number # esoui type: `integer`
---@return string name
function GetActivityName(activityId) end

---@param requestIndex number # esoui type: `luaindex`
---@return number activityId # esoui type: `integer`
---@return number activitySetId # esoui type: `integer`
function GetActivityRequestIds(requestIndex) end

---@param activitySetId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number activityId # esoui type: `integer`
function GetActivitySetActivityIdByIndex(activitySetId, index) end

---@param activitySetId number # esoui type: `integer`
---@return string descriptionTextureGamepad # esoui type: `textureName`
function GetActivitySetGamepadDescriptionTexture(activitySetId) end

---@param activitySetId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetActivitySetIcon(activitySetId) end

---@param activity LFGActivity
---@param index number # esoui type: `luaindex`
---@return number activitySetId # esoui type: `integer`
function GetActivitySetIdByTypeAndIndex(activity, index) end

---@param activitySetId number # esoui type: `integer`
---@return string name
---@return string description
---@return number sortOrder # esoui type: `integer`
function GetActivitySetInfo(activitySetId) end

---@param activitySetId number # esoui type: `integer`
---@return string descriptionTextureSmallKeyboard # esoui type: `textureName`
---@return string descriptionTextureLargeKeyboard # esoui type: `textureName`
function GetActivitySetKeyboardDescriptionTextures(activitySetId) end

---@param activitySetId number # esoui type: `integer`
---@return number rewardUIDataId # esoui type: `integer`
---@return number xpReward # esoui type: `integer`
function GetActivitySetRewardData(activitySetId) end

---@param activityId number # esoui type: `integer`
---@return LFGActivity activity
function GetActivityType(activityId) end

---@param activityId number # esoui type: `integer`
---@return LFGActivity activity
---@return number index # esoui type: `luaindex`
function GetActivityTypeAndIndex(activityId) end

---@param activityId number # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
function GetActivityZoneId(activityId) end

---@param rewardId number # esoui type: `integer`
---@return CurrencyType currencyType
function GetAddCurrencyRewardInfo(rewardId) end

---@param level number # esoui type: `integer`
---@param unlockIndex number # esoui type: `luaindex`
---@return string description
function GetAdditionalLevelUpUnlockDescription(level, unlockIndex) end

---@param level number # esoui type: `integer`
---@param unlockIndex number # esoui type: `luaindex`
---@return string displayName
function GetAdditionalLevelUpUnlockDisplayName(level, unlockIndex) end

---@param level number # esoui type: `integer`
---@param unlockIndex number # esoui type: `luaindex`
---@return string gamepadIcon # esoui type: `textureName`
function GetAdditionalLevelUpUnlockGamepadIcon(level, unlockIndex) end

---@param level number # esoui type: `integer`
---@param unlockIndex number # esoui type: `luaindex`
---@return string keyboardIcon # esoui type: `textureName`
function GetAdditionalLevelUpUnlockKeyboardIcon(level, unlockIndex) end

---@param categoryId number # esoui type: `integer`
---@return string displayName
---@return number numStats # esoui type: `integer`
function GetAdvancedStatCategoryInfo(categoryId) end

---@param categoryId number # esoui type: `integer`
---@param statIndex number # esoui type: `luaindex`
---@return AdvancedStatDisplayType statType
---@return string displayName
---@return string description
---@return string flatDescription
---@return string percentDescription
function GetAdvancedStatInfo(categoryId, statIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@return number categoryId # esoui type: `integer`
function GetAdvancedStatsCategoryId(categoryIndex) end

---@param statType AdvancedStatDisplayType
---@return AdvancedStatDisplayFormat displayFormat
---@return number? flatValue # esoui type: `integer:nilable`
---@return number? percentValue # esoui type: `number:nilable`
function GetAdvancedStatValue(statType) end

---@return boolean isChatRequested # esoui type: `bool`
---@return number millisecondsSinceRequest # esoui type: `integer`
function GetAgentChatRequestInfo() end

---NOTE! Uses variable returns...
---@param reagentBagId Bag
---@param reagentSlotIndex number # esoui type: `integer`
---@return string? trait # esoui type: `string:nilable`
---@return string? icon # esoui type: `textureName:nilable`
---@return string? matchIcon # esoui type: `textureName:nilable`
---@return string? cancellingTrait # esoui type: `string:nilable`
---@return string? conflictIcon # esoui type: `textureName:nilable`
function GetAlchemyItemTraits(reagentBagId, reagentSlotIndex) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@param desiredEncodedTraits? number # esoui type: `integer:nilable`
---@return number? resultingItemId # esoui type: `integer:nilable`
function GetAlchemyResultingItemIdIfKnown(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex, desiredEncodedTraits) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
---@return ProspectiveAlchemyResult prospectiveAlchemyResult
function GetAlchemyResultingItemInfo(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@param linkStyle LinkStyle
---@return string link
---@return ProspectiveAlchemyResult prospectiveAlchemyResult
function GetAlchemyResultingItemLink(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex, linkStyle) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@return number inspiration # esoui type: `integer`
function GetAlchemyResultInspiration(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param numIterations number # esoui type: `integer`
---@return number resultQuantity # esoui type: `integer`
function GetAlchemyResultQuantity(solventBagId, solventSlotIndex, numIterations) end

---@return number? campaignId # esoui type: `integer:nilable`
---@return Alliance alliance
---@return number? timeLeftS # esoui type: `integer:nilable`
function GetAllianceLockPendingNotificationInfo() end

---@param alliance Alliance
---@return string name
function GetAllianceName(alliance) end

---NOTE! Uses variable returns...
---@param unitTag string
---@return UnitAttributeVisual unitAttributeVisual
---@return DerivedStats statType
---@return Attributes attributeType
---@return CombatMechanicType powerType
---@return number value
---@return number maxValue
function GetAllUnitAttributeVisualizerEffectInfo(unitTag) end

---@param itemToRepairBagId Bag
---@param itemToRepairSlotIndex number # esoui type: `integer`
---@param repairKitToConsumeBagId Bag
---@param repairKitToConsumeSlotIndex number # esoui type: `integer`
---@return number amountRepaired # esoui type: `integer`
function GetAmountRepairKitWouldRepairItem(itemToRepairBagId, itemToRepairSlotIndex, repairKitToConsumeBagId, repairKitToConsumeSlotIndex) end

---@param itemToChargeBagId Bag
---@param itemToChargeSlotIndex number # esoui type: `integer`
---@param soulGemToConsumeBagId Bag
---@param soulGemToConsumeSlotIndex number # esoui type: `integer`
---@return number chargeAmount # esoui type: `integer`
function GetAmountSoulGemWouldChargeItem(itemToChargeBagId, itemToChargeSlotIndex, soulGemToConsumeBagId, soulGemToConsumeSlotIndex) end

---@param antiquityCategoryId number # esoui type: `integer`
---@return string gamepadIcon # esoui type: `textureName`
function GetAntiquityCategoryGamepadIcon(antiquityCategoryId) end

---@param antiquityId number # esoui type: `integer`
---@return number categoryId # esoui type: `integer`
function GetAntiquityCategoryId(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return number categoryId # esoui type: `integer`
function GetAntiquityCategoryId(antiquityId) end

---@param antiquityCategoryId number # esoui type: `integer`
---@return string unpressedButtonIcon # esoui type: `textureName`
---@return string pressedButtonIcon # esoui type: `textureName`
---@return string mouseoverButtonIcon # esoui type: `textureName`
function GetAntiquityCategoryKeyboardIcons(antiquityCategoryId) end

---@param antiquityCategoryId number # esoui type: `integer`
---@return string name
function GetAntiquityCategoryName(antiquityCategoryId) end

---@param antiquityCategoryId number # esoui type: `integer`
---@return number order # esoui type: `integer`
function GetAntiquityCategoryOrder(antiquityCategoryId) end

---@param antiquityCategoryId number # esoui type: `integer`
---@return number setId # esoui type: `integer`
function GetAntiquityCategoryParentId(antiquityCategoryId) end

---@param antiquityId number # esoui type: `integer`
---@return AntiquityDifficulty difficulty
function GetAntiquityDifficulty(antiquityId) end

---@return number diggingSkillLineId # esoui type: `integer`
function GetAntiquityDiggingSkillLineId() end

---@param antiquityId number # esoui type: `integer`
---@return string iconFileIndex # esoui type: `textureName`
function GetAntiquityIcon(antiquityId) end

---@return string leadIcon # esoui type: `textureName`
function GetAntiquityLeadIcon() end

---@param antiquityId number # esoui type: `integer`
---@return number leadTimeRemainingSeconds # esoui type: `integer`
function GetAntiquityLeadTimeRemainingSeconds(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@param loreEntryIndex number # esoui type: `luaindex`
---@return string displayName
---@return string description
function GetAntiquityLoreEntry(antiquityId, loreEntryIndex) end

---@param antiquityId number # esoui type: `integer`
---@return string name
function GetAntiquityName(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return AntiquityQuality antiquityQuality
function GetAntiquityQuality(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return number rewardId # esoui type: `integer`
function GetAntiquityRewardId(antiquityId) end

---@return number scryingSkillLineId # esoui type: `integer`
function GetAntiquityScryingSkillLineId() end

---@return number collectibleId # esoui type: `integer`
function GetAntiquityScryingToolCollectibleId() end

---@param aIndex number # esoui type: `luaindex`
---@return number aAntiquityId # esoui type: `integer`
function GetAntiquitySearchResult(aIndex) end

---@param antiquitySetId number # esoui type: `integer`
---@param antiquityIndex number # esoui type: `luaindex`
---@return number antiquityId # esoui type: `integer`
function GetAntiquitySetAntiquityId(antiquitySetId, antiquityIndex) end

---@param antiquitySetId number # esoui type: `integer`
---@return string iconFileIndex # esoui type: `textureName`
function GetAntiquitySetIcon(antiquitySetId) end

---@param antiquityId number # esoui type: `integer`
---@return number setId # esoui type: `integer`
function GetAntiquitySetId(antiquityId) end

---@param antiquitySetId number # esoui type: `integer`
---@return string name
function GetAntiquitySetName(antiquitySetId) end

---@param antiquitySetId number # esoui type: `integer`
---@return AntiquityQuality antiquityQuality
function GetAntiquitySetQuality(antiquitySetId) end

---@param antiquitySetId number # esoui type: `integer`
---@return number rewardId # esoui type: `integer`
function GetAntiquitySetRewardId(antiquitySetId) end

---@param antiquityId number # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
function GetAntiquityZoneId(antiquityId) end

---@return number version # esoui type: `integer`
function GetAPIVersion() end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param outfitSlot OutfitSlot
---@param collectibleId number # esoui type: `integer`
---@param changedDyeCount number # esoui type: `integer`
---@return number applyCostGold # esoui type: `integer`
function GetApplyCostForIndividualOutfitSlot(actorCategory, outfitIndex, outfitSlot, collectibleId, changedDyeCount) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance ownerAlliance
function GetArtifactReturnObjectiveOwner(keepId, objectiveId, battlegroundContext) end

---@param alliance Alliance
---@param artifactType ObjectiveType
---@param index number # esoui type: `luaindex`
---@return number abilityId # esoui type: `integer`
function GetArtifactScoreBonusAbilityId(alliance, artifactType, index) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance originalOwningAlliance
function GetArtifactScrollObjectiveOriginalOwningAlliance(keepId, objectiveId, battlegroundContext) end

---@param artificialEffectId number # esoui type: `integer`
---@return string displayName
---@return string icon # esoui type: `textureName`
---@return BuffEffectType effectType
---@return number sortOrder # esoui type: `integer`
---@return number timeStartedS
---@return number timeEndingS
function GetArtificialEffectInfo(artificialEffectId) end

---@param artificialEffectId number # esoui type: `integer`
---@return string tooltipText
function GetArtificialEffectTooltipText(artificialEffectId) end

---@return number startActionSlotIndex # esoui type: `luaindex`
---@return number endActionSlotIndex # esoui type: `luaindex`
function GetAssignableAbilityBarStartAndEndSlots() end

---@return number startActionSlotIndex # esoui type: `luaindex`
---@return number endActionSlotIndex # esoui type: `luaindex`
function GetAssignableChampionBarStartAndEndSlots() end

---@return number assignedCampaignId # esoui type: `integer`
function GetAssignedCampaignId() end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number? actionSlotIndex # esoui type: `luaindex:nilable`
function GetAssignedSlotFromSkillAbility(skillType, skillLineIndex, skillIndex) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param associatedAchievementIndex number # esoui type: `luaindex`
---@return number associatedAchievementId # esoui type: `integer`
function GetAssociatedAchievementIdForZoneCompletionType(zoneId, zoneCompletionType, associatedAchievementIndex) end

---@param mailId number # esoui type: `id64`
---@param attachIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return string creatorName
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return number equipType # esoui type: `integer`
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetAttachedItemInfo(mailId, attachIndex) end

---@param mailId number # esoui type: `id64`
---@param attachIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetAttachedItemLink(mailId, attachIndex, linkStyle) end

---@param attribute number # esoui type: `integer`
---@param stat number # esoui type: `integer`
---@return number amountPerPoint
function GetAttributeDerivedStatPerPointValue(attribute, stat) end

---@param level number # esoui type: `integer`
---@return number numAttributePoints # esoui type: `integer`
function GetAttributePointsAwardedForLevel(level) end

---@param attributeType number # esoui type: `integer`
---@return number points # esoui type: `integer`
function GetAttributeSpentPoints(attributeType) end

---@return number points # esoui type: `integer`
function GetAttributeUnspentPoints() end

---@return number? commonMapIndex # esoui type: `luaindex:nilable`
function GetAutoMapNavigationCommonZoomOutMapIndex() end

---@return number normalizedX
---@return number normalizedY
function GetAutoMapNavigationNormalizedPositionForCurrentMap() end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@param artifactType ObjectiveType
---@return boolean allOwnHeld # esoui type: `bool`
---@return number enemyHeld # esoui type: `integer`
function GetAvAArtifactScore(campaignId, alliance, artifactType) end

---@param skillBuildIndex number # esoui type: `luaindex`
---@return number skillBuildId # esoui type: `integer`
function GetAvailableSkillBuildIdByIndex(skillBuildIndex) end

---@return number numPoints # esoui type: `integer`
function GetAvailableSkillPoints() end

---@param campaignId number # esoui type: `integer`
---@param alliance number # esoui type: `integer`
---@return boolean isAllianceHoldingAllNativeKeeps # esoui type: `bool`
---@return number numEnemyKeepsThisAllianceHolds # esoui type: `integer`
---@return number numNativeKeepsThisAllianceHolds # esoui type: `integer`
---@return number totalNativeKeepsInThisAlliancesArea # esoui type: `integer`
---@return number numEdgeKeepBonusesActive # esoui type: `integer`
function GetAvAKeepScore(campaignId, alliance) end

---@param campaignId number # esoui type: `integer`
---@param alliance number # esoui type: `integer`
---@return number keepsHeld # esoui type: `integer`
function GetAvAKeepsHeld(campaignId, alliance) end

---@param rank number # esoui type: `integer`
---@return string rankIcon # esoui type: `textureName`
function GetAvARankIcon(rank) end

---@param gender Gender
---@param rank number # esoui type: `integer`
---@return string rankName
function GetAvARankName(gender, rank) end

---@param currentRankPoints number # esoui type: `integer`
---@return number subRankStartsAt # esoui type: `integer`
---@return number nextSubRankAt # esoui type: `integer`
---@return number rankStartsAt # esoui type: `integer`
---@return number nextRankAt # esoui type: `integer`
function GetAvARankProgress(currentRankPoints) end

---@param taskId number # esoui type: `integer`
---@param resultIndex number # esoui type: `luaindex`
---@return number value1 # esoui type: `integer`
---@return number value2 # esoui type: `integer`
function GetBackgroundListFilterResult(taskId, resultIndex) end

---@param taskId number # esoui type: `integer`
---@param resultIndex number # esoui type: `luaindex`
---@return number value # esoui type: `id64`
function GetBackgroundListFilterResult64(taskId, resultIndex) end

---@param bagId Bag
---@return number bagSlots # esoui type: `integer`
function GetBagSize(bagId) end

---@param bagId Bag
---@return number bagSlots # esoui type: `integer`
function GetBagUseableSize(bagId) end

---@return Bag bagId
function GetBankingBag() end

---@param battlegroundAlliance BattlegroundAlliance
---@return string name
function GetBattlegroundAllianceName(battlegroundAlliance) end

---@param battlegroundId number # esoui type: `integer`
---@return string description
function GetBattlegroundDescription(battlegroundId) end

---@param battlegroundId number # esoui type: `integer`
---@return BattlegroundGameType gameType
function GetBattlegroundGameType(battlegroundId) end

---@param battlegroundId number # esoui type: `integer`
---@return string path # esoui type: `textureName`
function GetBattlegroundInfoTexture(battlegroundId) end

---@param battlegroundLeaderboardType BattlegroundLeaderboardType
---@param entryIndex number # esoui type: `luaindex`
---@return number rank # esoui type: `integer`
---@return string displayName
---@return string characterName
---@return number score # esoui type: `integer`
function GetBattlegroundLeaderboardEntryInfo(battlegroundLeaderboardType, entryIndex) end

---@param lastBattlegroundLeaderboardType BattlegroundLeaderboardType
---@return number currentRank # esoui type: `integer`
---@return number currentScore # esoui type: `integer`
function GetBattlegroundLeaderboardLocalPlayerInfo(lastBattlegroundLeaderboardType) end

---@return number secondsUntilEnd # esoui type: `integer`
---@return number secondsUntilNextStart # esoui type: `integer`
function GetBattlegroundLeaderboardsSchedule() end

---@param battlegroundId number # esoui type: `integer`
---@return number maxActiveSequencedObjectives # esoui type: `integer`
function GetBattlegroundMaxActiveSequencedObjectives(battlegroundId) end

---@param battlegroundId number # esoui type: `integer`
---@param medalIndex number # esoui type: `luaindex`
---@return number medalId # esoui type: `integer`
function GetBattlegroundMedalIdByIndex(battlegroundId, medalIndex) end

---@param battlegroundId number # esoui type: `integer`
---@return string name
function GetBattlegroundName(battlegroundId) end

---@param battlegroundId number # esoui type: `integer`
---@return number nearingVictoryPercent
function GetBattlegroundNearingVictoryPercent(battlegroundId) end

---@param battlegroundId number # esoui type: `integer`
---@return number numMedals # esoui type: `integer`
function GetBattlegroundNumUsedMedals(battlegroundId) end

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return string guildName
function GetBattleStandardGuildName(battlegroundContext, index) end

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return number pinType # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetBattleStandardPinInfo(battlegroundContext, index) end

---@param layerIndex number # esoui type: `luaindex`
---@param keyCode KeyCode
---@param mod1 KeyCode
---@param mod2 KeyCode
---@param mod3 KeyCode
---@param mod4 KeyCode
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? actionIndex # esoui type: `luaindex:nilable`
---@return number? bindingIndex # esoui type: `luaindex:nilable`
function GetBindingIndicesFromKeys(layerIndex, keyCode, mod1, mod2, mod3, mod4) end

---@return number bounty # esoui type: `integer`
function GetBounty() end

---@return number amountPerInterval # esoui type: `integer`
---@return number intervalDurationS # esoui type: `integer`
---@return number progressThroughIntervalS # esoui type: `integer`
function GetBountyDecayInfo() end

---@param entryIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string name
---@return number stack # esoui type: `integer`
---@return number price # esoui type: `integer`
---@return ItemQuality functionalQuality
---@return boolean meetsRequirementsToEquip # esoui type: `bool`
---@return ItemDisplayQuality displayQuality
function GetBuybackItemInfo(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetBuybackItemLink(entryIndex, linkStyle) end

---@return CadwellProgressionLevel cadwellProgressionLevel
function GetCadwellProgressionLevel() end

---@param cadwellProgressionLevel CadwellProgressionLevel
---@param zoneIndex number # esoui type: `luaindex`
---@return string zoneName
---@return string zoneDescription
---@return number zoneOrder # esoui type: `luaindex`
function GetCadwellZoneInfo(cadwellProgressionLevel, zoneIndex) end

---@param cadwellProgressionLevel CadwellProgressionLevel
---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return string poiName
---@return string poiOpeningText
---@return string poiClosingText
---@return number poiOrder # esoui type: `luaindex`
---@return boolean discovered # esoui type: `bool`
---@return boolean completed # esoui type: `bool`
function GetCadwellZonePOIInfo(cadwellProgressionLevel, zoneIndex, poiIndex) end

---@param campaignId number # esoui type: `integer`
---@return Alliance abdicatedAlliance
---@return string abdicatedCharacterName
---@return string abdicatedDisplayName
function GetCampaignAbdicationStatus(campaignId) end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@param entryIndex number # esoui type: `luaindex`
---@return boolean isPlayer # esoui type: `bool`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number alliancePoints # esoui type: `integer`
---@return number classId # esoui type: `integer`
---@return string displayName
---@return Alliance achievedEmperorAlliance
function GetCampaignAllianceLeaderboardEntryInfo(campaignId, alliance, entryIndex) end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@return number potentialScore # esoui type: `integer`
function GetCampaignAlliancePotentialScore(campaignId, alliance) end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@return number score # esoui type: `integer`
function GetCampaignAllianceScore(campaignId, alliance) end

---@param campaignId number # esoui type: `integer`
---@return Alliance emperorAlliance
---@return string emperorCharacterName
---@return string emperorDisplayName
function GetCampaignEmperorInfo(campaignId) end

---@param campaignId number # esoui type: `integer`
---@return number durationInSeconds # esoui type: `integer`
function GetCampaignEmperorReignDuration(campaignId) end

---@param battlegroundContext BattlegroundQueryContextType
---@return number windowStartSecsAgo # esoui type: `integer`
---@return number windowEndSecsAgo # esoui type: `integer`
function GetCampaignHistoryWindow(battlegroundContext) end

---@param campaignId number # esoui type: `integer`
---@param holdingType CampaignHoldingType
---@param alliance Alliance
---@param targetAlliance Alliance
---@return number holdingsControlled # esoui type: `integer`
function GetCampaignHoldings(campaignId, holdingType, alliance, targetAlliance) end

---@param campaignId number # esoui type: `integer`
---@return number keepValue # esoui type: `integer`
---@return number resourceValue # esoui type: `integer`
---@return number outpostValue # esoui type: `integer`
---@return number defensiveArtifactValue # esoui type: `integer`
---@return number offensiveArtifactValue # esoui type: `integer`
function GetCampaignHoldingScoreValues(campaignId) end

---@param campaignId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return boolean isPlayer # esoui type: `bool`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number alliancePoints # esoui type: `integer`
---@return number classId # esoui type: `integer`
---@return Alliance alliance
---@return string displayName
function GetCampaignLeaderboardEntryInfo(campaignId, entryIndex) end

---@param campaignId number # esoui type: `integer`
---@return number maxRank # esoui type: `integer`
function GetCampaignLeaderboardMaxRank(campaignId) end

---@param campaignId number # esoui type: `integer`
---@return string campaignName
function GetCampaignName(campaignId) end

---@return number numSeconds # esoui type: `integer`
function GetCampaignQueueConfirmationDuration() end

---@param entryIndex number # esoui type: `luaindex`
---@return number campaignId # esoui type: `integer`
---@return boolean queueAsGroup # esoui type: `bool`
function GetCampaignQueueEntry(entryIndex) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return number queuePosition # esoui type: `integer`
function GetCampaignQueuePosition(campaignId, queueAsGroup) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return number confirmationTimeRemainingInSeconds # esoui type: `integer`
function GetCampaignQueueRemainingConfirmationSeconds(campaignId, queueAsGroup) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return CampaignQueueRequestStateType currentState
function GetCampaignQueueState(campaignId, queueAsGroup) end

---@return number cooldownSeconds # esoui type: `integer`
function GetCampaignReassignCooldown() end

---@param reassignType CampaignReassignmentRequestType
---@return number cost # esoui type: `integer`
function GetCampaignReassignCost(reassignType) end

---@return number cooldownSeconds # esoui type: `integer`
function GetCampaignReassignInitialCooldown() end

---@param rulesetId number # esoui type: `integer`
---@return string description
function GetCampaignRulesetDescription(rulesetId) end

---@param rulesetId number # esoui type: `integer`
---@return number duration # esoui type: `integer`
function GetCampaignRulesetDurationInSeconds(rulesetId) end

---@param campaignId number # esoui type: `integer`
---@return number rulesetId # esoui type: `integer`
function GetCampaignRulesetId(campaignId) end

---@param rulesetId number # esoui type: `integer`
---@param alliance Alliance
---@param index number # esoui type: `luaindex`
---@return number keepId # esoui type: `integer`
function GetCampaignRulesetImperialKeepId(rulesetId, alliance, index) end

---@param campaignId number # esoui type: `integer`
---@return string name
function GetCampaignRulesetName(campaignId) end

---@param rulesetId number # esoui type: `integer`
---@param alliance Alliance
---@return number numKeeps # esoui type: `integer`
function GetCampaignRulesetNumImperialKeeps(rulesetId, alliance) end

---@param rulesetId number # esoui type: `integer`
---@return CampaignRulesetType rulesetType
function GetCampaignRulesetType(rulesetId) end

---@param rulesetId number # esoui type: `integer`
---@param alliance Alliance
---@return number minPoints # esoui type: `integer`
function GetCampaignRulsetMinEmperorAlliancePoints(rulesetId, alliance) end

---@param campaignId number # esoui type: `integer`
---@return number sequenceId # esoui type: `integer`
function GetCampaignSequenceId(campaignId) end

---@return number cooldownSeconds # esoui type: `integer`
function GetCampaignUnassignCooldown() end

---@param campaignUnassignType CampaignUnassignRequestType
---@return number cost # esoui type: `integer`
function GetCampaignUnassignCost(campaignUnassignType) end

---@return number cooldownSeconds # esoui type: `integer`
function GetCampaignUnassignInitialCooldown() end

---@param campaignId number # esoui type: `integer`
---@return Alliance alliance
function GetCampaignUnderdogLeaderAlliance(campaignId) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance alliance
---@return boolean wereInfluenceSourcesInRangeOfCaptureArea # esoui type: `bool`
function GetCaptureAreaObjectiveLastInfluenceState(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance ownerAlliance
function GetCaptureAreaObjectiveOwner(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance originalOwningAlliance
function GetCaptureFlagObjectiveOriginalOwningAlliance(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance holdingAlliance
---@return Alliance lastHoldingAlliance
function GetCarryableObjectiveHoldingAllianceInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return string rawCharacterName
---@return string displayName
---@return number classId # esoui type: `integer`
function GetCarryableObjectiveHoldingCharacterInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return string rawCharacterName
---@return string displayName
---@return number classId # esoui type: `integer`
function GetCarryableObjectiveLastHoldingCharacterInfo(keepId, objectiveId, battlegroundContext) end

---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return number? topLevelIndex # esoui type: `luaindex:nilable`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
function GetCategoryIndicesFromMarketProductPresentation(marketProductId, presentationIndex) end

---@param achievementId number # esoui type: `integer`
---@return number? topLevelIndex # esoui type: `luaindex:nilable`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? achievementIndex # esoui type: `luaindex:nilable`
function GetCategoryInfoFromAchievementId(achievementId) end

---@param collectibleCategoryId number # esoui type: `integer`
---@return number? topLevelIndex # esoui type: `luaindex:nilable`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
function GetCategoryInfoFromCollectibleCategoryId(collectibleCategoryId) end

---@param collectibleId number # esoui type: `integer`
---@return number? topLevelIndex # esoui type: `luaindex:nilable`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? collectibleIndex # esoui type: `luaindex:nilable`
function GetCategoryInfoFromCollectibleId(collectibleId) end

---@param raidIndex number # esoui type: `luaindex`
---@param classId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number time # esoui type: `integer`
---@return number retClassId # esoui type: `integer`
---@return number allianceId # esoui type: `integer`
---@return string displayName
function GetChallengeLeaderboardEntryInfo(raidIndex, classId, entryIndex) end

---@param classId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number time # esoui type: `integer`
---@return number retClassId # esoui type: `integer`
---@return number allianceId # esoui type: `integer`
---@return string displayName
function GetChallengeOfTheWeekLeaderboardEntryInfo(classId, entryIndex) end

---@param chamberIndex number # esoui type: `luaindex`
---@return number chamberState # esoui type: `integer`
---@return number chamberProgress
function GetChamberState(chamberIndex) end

---@param championSkillId number # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
function GetChampionAbilityId(championSkillId) end

---@param rootChampionSkillId number # esoui type: `integer`
---@return string texture # esoui type: `textureName`
function GetChampionClusterBackgroundTexture(rootChampionSkillId) end

---@param rootChampionSkillId number # esoui type: `integer`
---@return string clusterName
function GetChampionClusterName(rootChampionSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return number normalizedOffsetX
---@return number normalizedOffsetY
function GetChampionClusterRootOffset(championSkillId) end

---NOTE! Uses variable returns...
---@param rootChampionSkillId number # esoui type: `integer`
---@return number championSkillIds # esoui type: `integer`
function GetChampionClusterSkillIds(rootChampionSkillId) end

---@param disciplineIndex number # esoui type: `luaindex`
---@return number disciplineId # esoui type: `integer`
function GetChampionDisciplineId(disciplineIndex) end

---@param disciplineId number # esoui type: `integer`
---@return string name
function GetChampionDisciplineName(disciplineId) end

---@param disciplineId number # esoui type: `integer`
---@return string texture # esoui type: `textureName`
function GetChampionDisciplineSelectedZoomedOutOverlay(disciplineId) end

---@param disciplineId number # esoui type: `integer`
---@return ChampionDisciplineType disciplineType
function GetChampionDisciplineType(disciplineId) end

---@param disciplineId number # esoui type: `integer`
---@return string texture # esoui type: `textureName`
function GetChampionDisciplineZoomedInBackground(disciplineId) end

---@param disciplineId number # esoui type: `integer`
---@return string texture # esoui type: `textureName`
function GetChampionDisciplineZoomedOutBackground(disciplineId) end

---@param rank number # esoui type: `integer`
---@return ChampionDisciplineType disciplineType
function GetChampionPointPoolForRank(rank) end

---@return number maxRank # esoui type: `integer`
function GetChampionPointsPlayerProgressionCap() end

---@return ChampionPurchaseResult result
function GetChampionPurchaseAvailability() end

---@return number cost # esoui type: `integer`
function GetChampionRespecCost() end

---@param championSkillId number # esoui type: `integer`
---@param numPendingPoints number # esoui type: `integer`
---@return string currentBonus
function GetChampionSkillCurrentBonusText(championSkillId, numPendingPoints) end

---@param championSkillId number # esoui type: `integer`
---@param numPendingPoints number # esoui type: `integer`
---@return string description
function GetChampionSkillDescription(championSkillId, numPendingPoints) end

---@param disciplineIndex number # esoui type: `luaindex`
---@param championSkillIndex number # esoui type: `luaindex`
---@return number championSkillId # esoui type: `integer`
function GetChampionSkillId(disciplineIndex, championSkillIndex) end

---NOTE! Uses variable returns...
---@param championSkillId number # esoui type: `integer`
---@return number jumpPoint # esoui type: `integer`
function GetChampionSkillJumpPoints(championSkillId) end

---NOTE! Uses variable returns...
---@param championSkillId number # esoui type: `integer`
---@return number linkedSkillId # esoui type: `integer`
function GetChampionSkillLinkIds(championSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return number maxPoints # esoui type: `integer`
function GetChampionSkillMaxPoints(championSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return string skillName
function GetChampionSkillName(championSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetChampionSkillPosition(championSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return ChampionSkillType championSkillType
function GetChampionSkillType(championSkillId) end

---@return number chance # esoui type: `integer`
function GetChanceToForceLock() end

---@param channel MsgChannelType
---@return ChatChannelCategories category
function GetChannelCategoryFromChannel(channel) end

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number marketProductId # esoui type: `integer`
---@return boolean isStandardReward # esoui type: `bool`
---@return boolean isCollectorsReward # esoui type: `bool`
function GetChapterBasicRewardInfo(chapterUpgradeId, index) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetChapterCollectibleId(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return Chapter chapterEnum
function GetChapterEnumFromUpgradeId(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return string marketBackgroundFileIndex # esoui type: `textureName`
function GetChapterMarketBackgroundFileImage(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number marketProductId # esoui type: `integer`
---@return boolean isStandardReward # esoui type: `bool`
---@return boolean isCollectorsReward # esoui type: `bool`
function GetChapterPreOrdereRewardInfo(chapterUpgradeId, index) end

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number marketProductId # esoui type: `integer`
---@return boolean isStandardReward # esoui type: `bool`
---@return boolean isCollectorsReward # esoui type: `bool`
function GetChapterPrePurchaseRewardInfo(chapterUpgradeId, index) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return string releaseDateString
function GetChapterReleaseDateString(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return string chapterSummary
function GetChapterSummary(chapterUpgradeId) end

---@param index number # esoui type: `luaindex`
---@return string name
---@return Gender gender
---@return number level # esoui type: `integer`
---@return number classId # esoui type: `integer`
---@return number raceId # esoui type: `integer`
---@return Alliance alliance
---@return string id
---@return number locationId # esoui type: `integer`
function GetCharacterInfo(index) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number charges # esoui type: `integer`
---@return number maxCharges # esoui type: `integer`
function GetChargeInfoForItem(bagId, slotIndex) end

---@param category ChatChannelCategories
---@return number red
---@return number green
---@return number blue
function GetChatCategoryColor(category) end

---@param name string
---@return number channelId # esoui type: `integer`
function GetChatChannelId(name) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@return number bgRed
---@return number bgGreen
---@return number bgBlue
---@return number bgMinAlpha
---@return number bgMaxAlpha
function GetChatContainerColors(chatContainerIndex) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
---@return string name
---@return boolean isLocked # esoui type: `bool`
---@return boolean isInteractable # esoui type: `bool`
---@return boolean isCombatLog # esoui type: `bool`
---@return boolean areTimestampsEnabled # esoui type: `bool`
function GetChatContainerTabInfo(chatContainerIndex, tabIndex) end

---@return number fontSize # esoui type: `integer`
function GetChatFontSize() end

---@return string text
---@return number numOptions # esoui type: `integer`
---@return boolean atGreeting # esoui type: `bool`
function GetChatterData() end

---@return string backToTOCString
---@return string farewellString
---@return boolean isImportant # esoui type: `bool`
function GetChatterFarewell() end

---@return string optionString
function GetChatterGreeting() end

---@param optionIndex number # esoui type: `luaindex`
---@return string optionString
---@return number optionType # esoui type: `integer`
---@return number optionalArgument # esoui type: `integer`
---@return boolean isImportant # esoui type: `bool`
---@return boolean chosenBefore # esoui type: `bool`
function GetChatterOption(optionIndex) end

---@return number optionCount # esoui type: `integer`
function GetChatterOptionCount() end

---@param rewardId number # esoui type: `integer`
---@return string displayName
function GetChoiceRewardDisplayName(rewardId) end

---@param rewardId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetChoiceRewardIcon(rewardId) end

---@param rewardId number # esoui type: `integer`
---@return number rewardListId # esoui type: `integer`
function GetChoiceRewardListId(rewardId) end

---@param chromaKeyboardKey ChromaKeyboardKey
---@return number rowIndex # esoui type: `luaindex`
---@return number columnIndex # esoui type: `luaindex`
function GetChromaKeyboardCellByChromaKeyboardKey(chromaKeyboardKey) end

---@param zoGuiKeyCode KeyCode
---@return ChromaKeyboardKey chromaKeyboardKey
function GetChromaKeyboardKeyByZoGuiKey(zoGuiKeyCode) end

---@param ledId ChromaMouseLED2
---@return number rowIndex # esoui type: `luaindex`
---@return number columnIndex # esoui type: `luaindex`
function GetChromaMouseCellByLED(ledId) end

---@param ledId ChromaMousepadLED
---@return number rowIndex # esoui type: `luaindex`
---@return number columnIndex # esoui type: `luaindex`
function GetChromaMousepadCellByLED(ledId) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return string guildName
function GetClaimedKeepGuildName(keepId, battlegroundContext) end

---@param classId number # esoui type: `integer`
---@return number? index # esoui type: `luaindex:nilable`
function GetClassIndexById(classId) end

---@param index number # esoui type: `luaindex`
---@return number classId # esoui type: `integer`
---@return string lore
---@return string normalIconKeyboard # esoui type: `textureName`
---@return string pressedIconKeyboard # esoui type: `textureName`
---@return string mouseoverIconKeyboard # esoui type: `textureName`
---@return boolean isSelectable # esoui type: `bool`
---@return string ingameIconKeyboard # esoui type: `textureName`
---@return string ingameIconGamepad # esoui type: `textureName`
---@return string normalIconGamepad # esoui type: `textureName`
---@return string pressedIconGamepad # esoui type: `textureName`
function GetClassInfo(index) end

---@param gender Gender
---@param classId number # esoui type: `integer`
---@return string className
function GetClassName(gender, classId) end

---@param collectibleDefId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetCollectibleAsFurniturePreviewVariationDisplayName(collectibleDefId, variation) end

---@param collectibleId number # esoui type: `integer`
---@return CollectibleAssociatedQuestState questState
function GetCollectibleAssociatedQuestState(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return Bag houseBankBagId
function GetCollectibleBankAccessBag(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return CollectibleUsageBlockReason usageBlockReason
function GetCollectibleBlockReason(collectibleId) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex? number # esoui type: `luaindex:nilable`
---@return string gamepadIcon # esoui type: `textureName`
function GetCollectibleCategoryGamepadIcon(topLevelIndex, subCategoryIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex? number # esoui type: `luaindex:nilable`
---@return number categoryId # esoui type: `integer`
function GetCollectibleCategoryId(topLevelIndex, subCategoryIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@return string name
---@return number numSubCatgories # esoui type: `integer`
---@return number numCollectibles # esoui type: `integer`
---@return number unlockedCollectibles # esoui type: `integer`
---@return number totalCollectibles # esoui type: `integer`
---@return boolean hidesLocked # esoui type: `bool`
function GetCollectibleCategoryInfo(topLevelIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex? number # esoui type: `luaindex:nilable`
---@return string normalIcon # esoui type: `textureName`
---@return string pressedIcon # esoui type: `textureName`
---@return string mouseoverIcon # esoui type: `textureName`
---@return string disabledIcon # esoui type: `textureName`
function GetCollectibleCategoryKeyboardIcons(topLevelIndex, subCategoryIndex) end

---@param categoryId number # esoui type: `integer`
---@return string categoryName
function GetCollectibleCategoryNameByCategoryId(categoryId) end

---@param collectibleId number # esoui type: `integer`
---@return string categoryName
function GetCollectibleCategoryNameByCollectibleId(collectibleId) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@return number sortOrder # esoui type: `integer`
function GetCollectibleCategorySortOrder(topLevelIndex, categoryIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@return CollectibleCategorySpecialization specialization
function GetCollectibleCategorySpecialization(topLevelIndex) end

---@param collectibleId number # esoui type: `integer`
---@return CollectibleCategoryType categoryType
function GetCollectibleCategoryType(collectibleId) end

---@param link string
---@return CollectibleCategoryType categoryType
function GetCollectibleCategoryTypeFromLink(link) end

---@param collectibleId number # esoui type: `integer`
---@return number cooldownRemaining # esoui type: `integer`
---@return number cooldownDuration # esoui type: `integer`
function GetCollectibleCooldownAndDuration(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string description
function GetCollectibleDescription(collectibleId) end

---@param houseBankBagId Bag
---@return number collectibleId # esoui type: `integer`
function GetCollectibleForHouseBankBag(houseBankBagId) end

---@param collectibleId number # esoui type: `integer`
---@return HousingFurnishingLimitType furnishingLimitType
function GetCollectibleFurnishingLimitType(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return number furnitureDataId # esoui type: `integer`
function GetCollectibleFurnitureDataId(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string backgroundImage # esoui type: `textureName`
function GetCollectibleGamepadBackgroundImage(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetCollectibleHelpIndices(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return CollectibleHideMode hideMode
function GetCollectibleHideMode(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string hint
function GetCollectibleHint(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetCollectibleIcon(collectibleId) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param collectibleIndex number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleId(topLevelIndex, categoryIndex, collectibleIndex) end

---@param houseId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleIdForHouse(houseId) end

---@param zoneIndex number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleIdForZone(zoneIndex) end

---@param furnitureId number # esoui type: `id64`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleIdFromFurnitureId(furnitureId) end

---@param link string
---@return number? collectibleId # esoui type: `integer:nilable`
function GetCollectibleIdFromLink(link) end

---@param collectibleCategoryType CollectibleCategoryType
---@param index number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleIdFromType(collectibleCategoryType, index) end

---@param collectibleId number # esoui type: `integer`
---@return string name
---@return string description
---@return string icon # esoui type: `textureName`
---@return string deprecatedLockedIcon # esoui type: `textureName`
---@return boolean unlocked # esoui type: `bool`
---@return boolean purchasable # esoui type: `bool`
---@return boolean isActive # esoui type: `bool`
---@return CollectibleCategoryType categoryType
---@return string hint
function GetCollectibleInfo(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string backgroundImage # esoui type: `textureName`
function GetCollectibleKeyboardBackgroundImage(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetCollectibleLink(collectibleId, linkStyle) end

---@param collectibleId number # esoui type: `integer`
---@return string name
function GetCollectibleName(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return string name
function GetCollectibleNickname(collectibleId) end

---@param notificationIndex number # esoui type: `luaindex`
---@return number notificationId # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleNotificationInfo(notificationIndex) end

---NOTE! Uses variable returns...
---@param collectibleId number # esoui type: `integer`
---@return string overriddenEmoteDisplayName
function GetCollectiblePersonalityOverridenEmoteDisplayNames(collectibleId) end

---NOTE! Uses variable returns...
---@param collectibleId number # esoui type: `integer`
---@return string overriddenEmoteSlashCommandName
function GetCollectiblePersonalityOverridenEmoteSlashCommandNames(collectibleId) end

---@param collectibleDefId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetCollectiblePreviewVariationDisplayName(collectibleDefId, variation) end

---@param collectibleId number # esoui type: `integer`
---@return string questName
---@return string backgroundText
function GetCollectibleQuestPreviewInfo(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return number referenceId # esoui type: `integer`
function GetCollectibleReferenceId(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@param restrictionType CollectibleRestrictionType
---@return boolean hasRestrictions # esoui type: `bool`
---@return boolean passesRestrictions # esoui type: `bool`
---@return string allowedNamesString
function GetCollectibleRestrictionsByType(collectibleId, restrictionType) end

---@param rewardId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetCollectibleRewardCollectibleId(rewardId) end

---@param collectibleId number # esoui type: `integer`
---@return number sortOrder # esoui type: `integer`
function GetCollectibleSortOrder(collectibleId) end

---@param searchResultIndex number # esoui type: `luaindex`
---@return number categoryIndex # esoui type: `luaindex`
---@return number? subcategoryIndex # esoui type: `luaindex:nilable`
---@return number collectibleIndex # esoui type: `luaindex`
function GetCollectiblesSearchResult(searchResultIndex) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex number # esoui type: `luaindex`
---@return string name
---@return number numCollectibles # esoui type: `integer`
---@return number unlockedCollectibles # esoui type: `integer`
---@return number totalCollectibles # esoui type: `integer`
function GetCollectibleSubCategoryInfo(topLevelIndex, subCategoryIndex) end

---@param collectibleId number # esoui type: `integer`
---@param tagIndex number # esoui type: `luaindex`
---@return string tagDescription
---@return ItemTagCategory tagCategory
function GetCollectibleTagInfo(collectibleId, tagIndex) end

---@param collectibleId number # esoui type: `integer`
---@return CollectibleUnlockState unlockState
function GetCollectibleUnlockStateById(collectibleId) end

---@param combinationId number # esoui type: `integer`
---@param componentIndex number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
function GetCombinationCollectibleComponentId(combinationId, componentIndex) end

---@param combinationId number # esoui type: `integer`
---@return string combinationDescription
function GetCombinationDescription(combinationId) end

---@param combinationId number # esoui type: `integer`
---@return number firstNonFragmentCollectibleId # esoui type: `integer`
function GetCombinationFirstNonFragmentCollectibleComponentId(combinationId) end

---@param combinationId number # esoui type: `integer`
---@return number numCollectibleComponents # esoui type: `integer`
function GetCombinationNumCollectibleComponents(combinationId) end

---@param combinationId number # esoui type: `integer`
---@return number unlockedCollectibleId # esoui type: `integer`
function GetCombinationUnlockedCollectible(combinationId) end

---@param skillLineId number # esoui type: `integer`
---@param abilityIndex number # esoui type: `luaindex`
---@return number abilityId # esoui type: `integer`
function GetCompanionAbilityId(skillLineId, abilityIndex) end

---@param abilityId number # esoui type: `integer`
---@return number rankRequired # esoui type: `luaindex`
function GetCompanionAbilityRankRequired(abilityId) end

---@param companionId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetCompanionCollectibleId(companionId) end

---@param companionId number # esoui type: `integer`
---@return number questId # esoui type: `integer`
function GetCompanionIntroQuestId(companionId) end

---@param companionId number # esoui type: `integer`
---@return string name
function GetCompanionName(companionId) end

---@param companionLevel number # esoui type: `integer`
---@return number numSlots # esoui type: `integer`
function GetCompanionNumSlotsUnlockedForLevel(companionLevel) end

---@param companionId number # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
function GetCompanionPassivePerkAbilityId(companionId) end

---@param skillLineId number # esoui type: `integer`
---@return number rank # esoui type: `luaindex`
---@return boolean active # esoui type: `bool`
---@return boolean discovered # esoui type: `bool`
function GetCompanionSkillLineDynamicInfo(skillLineId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number skillLineId # esoui type: `integer`
function GetCompanionSkillLineId(skillType, skillLineIndex) end

---@param skillLineId number # esoui type: `integer`
---@return string name
function GetCompanionSkillLineNameById(skillLineId) end

---@param skillLineId number # esoui type: `integer`
---@return number lastRankXP # esoui type: `integer`
---@return number nextRankXP # esoui type: `integer`
---@return number currentXP # esoui type: `integer`
function GetCompanionSkillLineXPInfo(skillLineId) end

---@param groupUnitTag string
---@return string? companionUnitTag # esoui type: `string:nilable`
function GetCompanionUnitTagByGroupUnitTag(groupUnitTag) end

---@param questId number # esoui type: `integer`
---@return string name
---@return QuestType questType
function GetCompletedQuestInfo(questId) end

---@param questId number # esoui type: `integer`
---@return string zoneName
---@return string objectiveName
---@return number zoneIndex # esoui type: `luaindex`
---@return number poiIndex # esoui type: `luaindex`
function GetCompletedQuestLocationInfo(questId) end

---@param otherLevel number # esoui type: `integer`
---@param playerLevel? number # esoui type: `integer:nilable`
---@return DifficultyCon con
function GetCon(otherLevel, playerLevel) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param numIterations number # esoui type: `integer`
---@return number cost # esoui type: `integer`
function GetCostToCraftAlchemyItem(solventBagId, solventSlotIndex, numIterations) end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@param numIterations number # esoui type: `integer`
---@return number cost # esoui type: `integer`
function GetCostToCraftEnchantingItem(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex, numIterations) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param numIterations number # esoui type: `integer`
---@return number cost # esoui type: `integer`
function GetCostToCraftProvisionerItem(recipeListIndex, recipeIndex, numIterations) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param itemStyleId number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@param useUniversalStyleItem boolean # esoui type: `bool`
---@param numIterations number # esoui type: `integer`
---@return number cost # esoui type: `integer`
function GetCostToCraftSmithingItem(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, useUniversalStyleItem, numIterations) end

---@return TradeskillType currentCraftingInteraction
function GetCraftingInteractionType() end

---@param craftingSkillType TradeskillType
---@return string name
function GetCraftingSkillName(craftingSkillType) end

---@param statValue number
---@return number chance
function GetCriticalStrikeChance(statValue) end

---@param crateId number # esoui type: `integer`
---@return string cardBackImage # esoui type: `textureName`
---@return string cardBackGlowImage # esoui type: `textureName`
---@return string cardFaceImage # esoui type: `textureName`
---@return string cardFaceGlowImage # esoui type: `textureName`
function GetCrownCrateCardTextures(crateId) end

---@param crateId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetCrownCrateCount(crateId) end

---@param crateId number # esoui type: `integer`
---@return string crateDescription
function GetCrownCrateDescription(crateId) end

---@param crateId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetCrownCrateIcon(crateId) end

---@param crateId number # esoui type: `integer`
---@return string crateName
function GetCrownCrateName(crateId) end

---@param boneName string
---@return boolean success # esoui type: `bool`
---@return number positionX
---@return number positionY
---@return number positionZ
function GetCrownCrateNPCBoneWorldPosition(boneName) end

---@return string boneName
function GetCrownCrateNPCCardThrowingBoneName() end

---@param crateId number # esoui type: `integer`
---@return string normalImage # esoui type: `textureName`
function GetCrownCratePackNormalTexture(crateId) end

---@param rewardId number # esoui type: `integer`
---@return number crateId # esoui type: `integer`
function GetCrownCrateRewardCrateId(rewardId) end

---@param rewardIndex number # esoui type: `luaindex`
---@return string rewardName
---@return string rewardTypeText
---@return string cardFaceImage # esoui type: `textureName`
---@return string cardFaceFrameAccentImage # esoui type: `textureName`
---@return number gemsExchanged # esoui type: `integer`
---@return boolean isBonus # esoui type: `bool`
---@return number crownCrateTierId # esoui type: `integer`
---@return number stackCount # esoui type: `integer`
function GetCrownCrateRewardInfo(rewardIndex) end

---@param rewardIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetCrownCrateRewardItemLink(rewardIndex, linkStyle) end

---@param rewardIndex number # esoui type: `luaindex`
---@return MarketProductType rewardProductType
---@return number referenceDataId # esoui type: `integer`
function GetCrownCrateRewardProductReferenceData(rewardIndex) end

---@param rewardIndex number # esoui type: `luaindex`
---@return number stackCount # esoui type: `integer`
function GetCrownCrateRewardStackCount(rewardIndex) end

---@return LootCratesSystemState crownCratesSystemState
function GetCrownCratesSystemState() end

---@param tierId number # esoui type: `integer`
---@return number tierOrdering # esoui type: `integer`
function GetCrownCrateTierOrdering(tierId) end

---@param crownCrateTierId number # esoui type: `integer`
---@return number r
---@return number g
---@return number b
function GetCrownCrateTierQualityColor(crownCrateTierId) end

---@param crownCrateTierId number # esoui type: `integer`
---@return CrownCrateEvent reactionEvent
function GetCrownCrateTierReactionNPCAnimation(crownCrateTierId) end

---@param currencyType CurrencyType
---@param currencyLocation CurrencyLocation
---@return number amount # esoui type: `integer`
function GetCurrencyAmount(currencyType, currencyLocation) end

---@param currencyType CurrencyType
---@return string description
function GetCurrencyDescription(currencyType) end

---@param currencyType CurrencyType
---@return number red
---@return number green
---@return number blue
function GetCurrencyGamepadColor(currencyType) end

---@param currencyType CurrencyType
---@return string iconPath # esoui type: `textureName`
---@return number percentOfLineSize # esoui type: `integer`
function GetCurrencyGamepadIcon(currencyType) end

---@param currencyType CurrencyType
---@return number red
---@return number green
---@return number blue
function GetCurrencyKeyboardColor(currencyType) end

---@param currencyType CurrencyType
---@return string iconPath # esoui type: `textureName`
---@return number percentOfLineSize # esoui type: `integer`
function GetCurrencyKeyboardIcon(currencyType) end

---@param currencyType CurrencyType
---@return string iconPath # esoui type: `textureName`
function GetCurrencyLootGamepadIcon(currencyType) end

---@param currencyType CurrencyType
---@return string iconPath # esoui type: `textureName`
function GetCurrencyLootKeyboardIcon(currencyType) end

---@param currencyType CurrencyType
---@param isSingular boolean # esoui type: `bool`
---@param isLower boolean # esoui type: `bool`
---@return string name
function GetCurrencyName(currencyType, isSingular, isLower) end

---@param currencyType CurrencyType
---@return CurrencyLocation currencyLocation
function GetCurrencyPlayerStoredLocation(currencyType) end

---@param marketCurrencyType MarketCurrencyType
---@return CurrencyType currencyType
function GetCurrencyTypeFromMarketCurrencyType(marketCurrencyType) end

---@return number currentBackpackUpgrade # esoui type: `integer`
function GetCurrentBackpackUpgrade() end

---@return number currentBankUpgrade # esoui type: `integer`
function GetCurrentBankUpgrade() end

---@return number battlegroundId # esoui type: `integer`
function GetCurrentBattlegroundId() end

---@param alliance BattlegroundAlliance
---@return number score # esoui type: `integer`
function GetCurrentBattlegroundScore(alliance) end

---@return number? timeLeftMS # esoui type: `integer:nilable`
function GetCurrentBattlegroundShutdownTimer() end

---@return BattlegroundState result
function GetCurrentBattlegroundState() end

---@return number timeRemaining # esoui type: `integer`
function GetCurrentBattlegroundStateTimeRemaining() end

---@return number currentCampaignId # esoui type: `integer`
function GetCurrentCampaignId() end

---@return number currentLoyaltyStreak # esoui type: `integer`
function GetCurrentCampaignLoyaltyStreak() end

---@return number chapterUpgradeId # esoui type: `integer`
function GetCurrentChapterUpgradeId() end

---@return string id
function GetCurrentCharacterId() end

---@return number currentCharacterSlotsUpgrade # esoui type: `integer`
function GetCurrentCharacterSlotsUpgrade() end

---@param restyleMode RestyleMode
---@param collectibleId number # esoui type: `integer`
---@return number primaryDyeIndex # esoui type: `integer`
---@return number secondaryDyeIndex # esoui type: `integer`
---@return number accentDyeIndex # esoui type: `integer`
function GetCurrentCollectibleDyes(restyleMode, collectibleId) end

---@return number crateId # esoui type: `integer`
function GetCurrentCrownCrateId() end

---@return GregorianCalendarMonths month
function GetCurrentDailyLoginMonth() end

---@return string displayName
function GetCurrentHouseOwner() end

---@return number population # esoui type: `integer`
function GetCurrentHousePopulation() end

---@return number popCap # esoui type: `integer`
function GetCurrentHousePopulationCap() end

---@return number houseTemplateId # esoui type: `integer`
function GetCurrentHousePreviewTemplateId() end

---@return number index # esoui type: `integer`
function GetCurrentHousingEditorHistoryCommandIndex() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number primaryDyeIndex # esoui type: `integer`
---@return number secondaryDyeIndex # esoui type: `integer`
---@return number accentDyeIndex # esoui type: `integer`
function GetCurrentItemDyes(bagId, slotIndex) end

---@return number activityId # esoui type: `integer`
function GetCurrentLFGActivityId() end

---@return number mapId # esoui type: `integer`
function GetCurrentMapId() end

---@return number? index # esoui type: `luaindex:nilable`
function GetCurrentMapIndex() end

---@return number zoneIndex # esoui type: `luaindex`
function GetCurrentMapZoneIndex() end

---@return number currentRaidId # esoui type: `integer`
function GetCurrentParticipatingRaidId() end

---@return number actionSlotIndex # esoui type: `luaindex`
function GetCurrentQuickslot() end

---@return number? deaths # esoui type: `integer:nilable`
function GetCurrentRaidDeaths() end

---@return number? currentLifeScoreBonus # esoui type: `integer:nilable`
function GetCurrentRaidLifeScoreBonus() end

---@return number score # esoui type: `integer`
function GetCurrentRaidScore() end

---@return number? startingReviveCounters # esoui type: `integer:nilable`
function GetCurrentRaidStartingReviveCounters() end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param ingredientIndex number # esoui type: `luaindex`
---@return number count # esoui type: `integer`
function GetCurrentRecipeIngredientCount(recipeListIndex, recipeIndex, ingredientIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@return number count # esoui type: `integer`
function GetCurrentSmithingMaterialItemCount(patternIndex, materialIndex) end

---@param itemStyleId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetCurrentSmithingStyleItemCount(itemStyleId) end

---@param traitItemIndex number # esoui type: `luaindex`
---@return number count # esoui type: `integer`
function GetCurrentSmithingTraitItemCount(traitItemIndex) end

---@return number? zoneIndex # esoui type: `luaindex:nilable`
---@return number? poiIndex # esoui type: `luaindex:nilable`
function GetCurrentSubZonePOIIndices() end

---@return number? titleIndex # esoui type: `luaindex:nilable`
function GetCurrentTitleIndex() end

---@return number guildId # esoui type: `integer`
---@return string guildName
---@return Alliance guildAlliance
function GetCurrentTradingHouseGuildDetails() end

---@return DungeonDifficulty isVeteranDifficulty
function GetCurrentZoneDungeonDifficulty() end

---@return number houseId # esoui type: `integer`
function GetCurrentZoneHouseId() end

---@return ScaleLevelConstraintType scaleLevelContraintType
---@return number minScaleLevel # esoui type: `integer`
---@return number maxScaleLevel # esoui type: `integer`
function GetCurrentZoneLevelScalingConstraints() end

---@return number? abilityId # esoui type: `integer:nilable`
function GetCursorAbilityId() end

---@return Bag originatingBagId
function GetCursorBagId() end

---@return number? championSkillId # esoui type: `integer:nilable`
function GetCursorChampionSkillId() end

---@return number? collectibleId # esoui type: `integer:nilable`
function GetCursorCollectibleId() end

---@return number cursorType # esoui type: `integer`
function GetCursorContentType() end

---@return number? slotIndex # esoui type: `integer:nilable`
function GetCursorSlotIndex() end

---@param CVarName string
---@return string value
function GetCVar(CVarName) end

---@return number? index # esoui type: `luaindex:nilable`
function GetCyrodiilMapIndex() end

---@param daedricArtifactId number # esoui type: `integer`
---@return string artifactDisplayName
function GetDaedricArtifactDisplayName(daedricArtifactId) end

---@param daedricArtifactId number # esoui type: `integer`
---@return DaedricArtifactVisualType artifactVisualType
function GetDaedricArtifactVisualType(daedricArtifactId) end

---@return number? rewardIndex # esoui type: `luaindex:nilable`
function GetDailyLoginClaimableRewardIndex() end

---@return number numRewardsClaimed # esoui type: `integer`
function GetDailyLoginNumRewardsClaimedInMonth() end

---@param rewardIndex number # esoui type: `luaindex`
---@return number rewardId # esoui type: `integer`
---@return number quantity # esoui type: `integer`
---@return boolean isMilestone # esoui type: `bool`
function GetDailyLoginRewardInfoForCurrentMonth(rewardIndex) end

---@return number currentTime # esoui type: `integer`
function GetDate() end

---@param timestamp number # esoui type: `id64`
---@return number year # esoui type: `integer`
---@return number month # esoui type: `integer`
---@return number day # esoui type: `integer`
function GetDateElementsFromTimestamp(timestamp) end

---@param timestamp number # esoui type: `integer`
---@return string dateString
function GetDateStringFromTimestamp(timestamp) end

---@param timestamp number # esoui type: `id64`
---@return number weekdayIndex # esoui type: `integer`
function GetDayOfTheWeekIndex(timestamp) end

---@return number timeUntilRevive # esoui type: `integer`
---@return number timeUntilAutoRelease # esoui type: `integer`
---@return number corpseSummonTime # esoui type: `integer`
---@return boolean isPenaltyTooHighToRevive # esoui type: `bool`
---@return boolean encounterIsInProgress # esoui type: `bool`
---@return boolean isAVADeath # esoui type: `bool`
---@return boolean isBattleGroundDeath # esoui type: `bool`
---@return boolean isReleaseOnly # esoui type: `bool`
---@return boolean soulGemAvailable # esoui type: `bool`
---@return boolean freeRevive # esoui type: `bool`
---@return boolean isRaidDeath # esoui type: `bool`
---@return boolean deprecatedParam # esoui type: `bool`
---@return number cyclicRespawnQueueDuration # esoui type: `integer`
---@return number cyclicRespawnQueueTimeLeft # esoui type: `integer`
function GetDeathInfo() end

---@param index number # esoui type: `luaindex`
---@return string text
---@return DeathRecapHintImportance importance
function GetDeathRecapHintInfo(index) end

---@param houseId number # esoui type: `integer`
---@return number houseTemplateId # esoui type: `integer`
function GetDefaultHouseTemplateIdForHouse(houseId) end

---@param index number # esoui type: `luaindex`
---@return string message
function GetDefaultQuickChatMessage(index) end

---@param index number # esoui type: `luaindex`
---@return string name
function GetDefaultQuickChatName(index) end

---NOTE! Uses variable returns...
---@return GuildLanguageAttributeValue language
function GetDefaultsForGuildLanguageAttributeFilter() end

---@return number skillBuildId # esoui type: `integer`
function GetDefaultSkillBuildId() end

---@param laterTime number # esoui type: `id64`
---@param earlierTime number # esoui type: `id64`
---@return number difference
function GetDiffBetweenTimeStamps(laterTime, earlierTime) end

---@param diggingActiveSkill DiggingActiveSkills
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
---@return number skillIndex # esoui type: `luaindex`
function GetDiggingActiveSkillIndices(diggingActiveSkill) end

---@return boolean hasNewLoreEntryToShow # esoui type: `bool`
function GetDiggingAntiquityHasNewLoreEntryToShow() end

---@return number digitGroupingSize # esoui type: `integer`
function GetDigitGroupingSize() end

---@return number x
---@return number y
function GetDigPowerBarUIPosition() end

---NOTE! Uses variable returns...
---@param digSiteId number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedZ
function GetDigSiteNormalizedBorderPoints(digSiteId) end

---@param digSiteId number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedZ
---@return boolean isShownInCurrentMap # esoui type: `bool`
function GetDigSiteNormalizedCenterPosition(digSiteId) end

---@return number antiquityId # esoui type: `integer`
function GetDigSpotAntiquityId() end

---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
function GetDigSpotDigPower() end

---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
function GetDigSpotDurability() end

---@return number minPower # esoui type: `integer`
function GetDigSpotMinPowerPerSpender() end

---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
function GetDigSpotNumRadars() end

---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
function GetDigSpotStability() end

---@return number timeRemainingS # esoui type: `integer`
function GetDigSpotStabilityTimeRemainingSeconds() end

---@param diggingActiveSkill DiggingActiveSkills
---@return number x
---@return number y
function GetDigToolUIKeybindPosition(diggingActiveSkill) end

---NOTE! Uses variable returns...
---@param displayIndex number # esoui type: `luaindex`
---@return number width # esoui type: `integer`
---@return number height # esoui type: `integer`
function GetDisplayModes(displayIndex) end

---@return string displayName
function GetDisplayName() end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number districtOwnershipTelVarBonusPercent # esoui type: `integer`
function GetDistrictOwnershipTelVarBonusPercent(keepId, battlegroundContext) end

---@return DuelState duelState
---@return string partnerCharacterName
---@return string partnerDisplayName
function GetDuelInfo() end

---@param dyeId number # esoui type: `integer`
---@return number r
---@return number g
---@return number b
function GetDyeColorsById(dyeId) end

---@param dyeIndex number # esoui type: `luaindex`
---@return string dyeName
---@return boolean known # esoui type: `bool`
---@return DyeRarity rarity
---@return DyeHueCategory hueCategory
---@return number achievementId # esoui type: `integer`
---@return number r
---@return number g
---@return number b
---@return number sortKey # esoui type: `integer`
---@return number dyeId # esoui type: `integer`
function GetDyeInfo(dyeIndex) end

---@param dyeId number # esoui type: `integer`
---@return string dyeName
---@return boolean known # esoui type: `bool`
---@return DyeRarity rarity
---@return DyeHueCategory hueCategory
---@return number achievementId # esoui type: `integer`
---@return number r
---@return number g
---@return number b
---@return number sortKey # esoui type: `integer`
function GetDyeInfoById(dyeId) end

---@param searchResultIndex number # esoui type: `luaindex`
---@return number dyeIndex # esoui type: `luaindex`
function GetDyesSearchResult(searchResultIndex) end

---@param channelId number # esoui type: `integer`
---@return string name
function GetDynamicChatChannelName(channelId) end

---@return number points # esoui type: `integer`
function GetEarnedAchievementPoints() end

---@param index number # esoui type: `luaindex`
---@return number abilityId # esoui type: `integer`
function GetEdgeKeepBonusAbilityId(index) end

---@param abilityId number # esoui type: `integer`
---@param hotbarCategory HotBarCategory
---@return number effectiveAbilityId # esoui type: `integer`
function GetEffectiveAbilityIdForAbilityOnHotbar(abilityId, hotbarCategory) end

---NOTE! Uses variable returns...
---@param collectibleId number # esoui type: `integer`
---@return OutfitSlot outfitSlot
function GetEligibleOutfitSlotsForCollectible(collectibleId) end

---@param emoteIndex number # esoui type: `luaindex`
---@return number? collectibleId # esoui type: `integer:nilable`
function GetEmoteCollectibleId(emoteIndex) end

---@param emoteId number # esoui type: `integer`
---@return number? emoteIndex # esoui type: `luaindex:nilable`
function GetEmoteIndex(emoteId) end

---@param emoteIndex number # esoui type: `luaindex`
---@return string slashName
---@return EmoteCategory category
---@return number emoteId # esoui type: `integer`
---@return string displayName
---@return boolean showInGamepadUI # esoui type: `bool`
function GetEmoteInfo(emoteIndex) end

---@param emoteIndex number # esoui type: `luaindex`
---@return string slashName
function GetEmoteSlashNameByIndex(emoteIndex) end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@return number abilityId # esoui type: `integer`
function GetEmperorAllianceBonusAbilityId(campaignId, alliance) end

---@param itemBagId Bag
---@param itemSlotIndex number # esoui type: `integer`
---@param enchantmentBagId Bag
---@param enchantmentSlotIndex number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetEnchantedItemResultingItemLink(itemBagId, itemSlotIndex, enchantmentBagId, enchantmentSlotIndex, linkStyle) end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return ItemDisplayQuality displayQuality
function GetEnchantingResultingItemInfo(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex) end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetEnchantingResultingItemLink(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex, linkStyle) end

---NOTE! Uses variable returns...
---@param itemType ItemType
---@return number category # esoui type: `integer`
function GetEnchantmentSearchCategories(itemType) end

---@param enchantId number # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
function GetEnchantProcAbilityId(enchantId) end

---@param enchantId number # esoui type: `integer`
---@return EnchantmentSearchCategoryType searchCategory
function GetEnchantSearchCategoryType(enchantId) end

---@return number version # esoui type: `integer`
function GetEncounterLogVersion() end

---@return number multiplier
function GetEnlightenedMultiplier() end

---@return number poolAmount # esoui type: `integer`
function GetEnlightenedPool() end

---@param bagId Bag
---@param equipSlot EquipSlot
---@return number equipmentBonusRating
function GetEquipmentBonusRating(bagId, equipSlot) end

---@param unitLevel number # esoui type: `integer`
---@param unitChampionPoints number # esoui type: `integer`
---@param index number # esoui type: `integer`
---@return number thresholdValue
function GetEquipmentBonusThreshold(unitLevel, unitChampionPoints, index) end

---@param slot number # esoui type: `id64`
---@return EquipmentFilterType equipmentFilterType
function GetEquipmentFilterTypeForItemSetCollectionSlot(slot) end

---@param equipSlot EquipSlot
---@return string icon
---@return boolean slotHasItem # esoui type: `bool`
---@return number sellPrice # esoui type: `integer`
---@return boolean isHeldSlot # esoui type: `bool`
---@return boolean isHeldNow # esoui type: `bool`
---@return boolean locked # esoui type: `bool`
function GetEquippedItemInfo(equipSlot) end

---@param actorCategory GameplayActorCategory
---@return number? outfitIndex # esoui type: `luaindex:nilable`
function GetEquippedOutfitIndex(actorCategory) end

---@param outfitSlot OutfitSlot
---@return EquipSlot equipSlot
function GetEquipSlotForOutfitSlot(outfitSlot) end

---@param errorStringId number # esoui type: `integer`
---@return string stringValue
function GetErrorString(errorStringId) end

---@param errorStringId number # esoui type: `integer`
---@return number lockedByCollectibleId # esoui type: `integer`
function GetErrorStringLockedByCollectibleId(errorStringId) end

---@return string versionString
function GetESOFullVersionString() end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetEsoPlusSubscriptionBenefitsInfoHelpIndices() end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndices() end

---@return string versionString
function GetESOVersionString() end

---@param eulaType EULAType
---@return string message
---@return string agreeText
---@return string disagreeText
---@return boolean hasAgreed # esoui type: `bool`
---@return string dialogText
---@return string readCheckText
function GetEULADetails(eulaType) end

---@param electionType GroupElectionType
---@param targetUnitTag string
---@return GroupElectionFailure failureReason
function GetExpectedGroupElectionResult(electionType, targetUnitTag) end

---@return QueueForCampaignResponseType queueForCampaignResult
function GetExpectedGroupQueueResult() end

---@return ChampionPurchaseResult result
function GetExpectedResultForChampionPurchaseRequest() end

---@param nodeIndex number # esoui type: `luaindex`
---@return number drawLevelOffset # esoui type: `integer`
function GetFastTravelNodeDrawLevelOffset(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return number houseId # esoui type: `integer`
function GetFastTravelNodeHouseId(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return boolean known # esoui type: `bool`
---@return string name
---@return number normalizedX
---@return number normalizedY
---@return string icon # esoui type: `textureName`
---@return string? glowIcon # esoui type: `textureName:nilable`
---@return PointOfInterestType poiType
---@return boolean isShownInCurrentMap # esoui type: `bool`
---@return boolean linkedCollectibleIsLocked # esoui type: `bool`
function GetFastTravelNodeInfo(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
function GetFastTravelNodeLinkedCollectibleId(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return boolean isOutboundOnly # esoui type: `bool`
---@return number errorStringId # esoui type: `integer`
function GetFastTravelNodeOutboundOnlyInfo(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return number zoneIndex # esoui type: `luaindex`
---@return number poiIndex # esoui type: `luaindex`
function GetFastTravelNodePOIIndicies(nodeIndex) end

---@param feedbackIndex number # esoui type: `luaindex`
---@return number? feedbackId # esoui type: `integer:nilable`
function GetFeedbackIdByIndex(feedbackIndex) end

---@param feedbackId number # esoui type: `integer`
---@return number feedbackType # esoui type: `integer`
function GetFeedbackType(feedbackId) end

---@return number totalLaunders # esoui type: `integer`
---@return number laundersUsed # esoui type: `integer`
---@return number resetTimeSeconds # esoui type: `integer`
function GetFenceLaunderTransactionInfo() end

---@return number totalSells # esoui type: `integer`
---@return number sellsUsed # esoui type: `integer`
---@return number resetTimeSeconds # esoui type: `integer`
function GetFenceSellTransactionInfo() end

---@param achievementId number # esoui type: `integer`
---@return number firstAchievementId # esoui type: `integer`
function GetFirstAchievementInLine(achievementId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number? freeSlot # esoui type: `luaindex:nilable`
function GetFirstFreeValidSlotForItem(bagId, slotIndex) end

---@param actionType ActionBarSlotType
---@param actionId number # esoui type: `integer`
---@return number? emptyActionSlotIndex # esoui type: `luaindex:nilable`
function GetFirstFreeValidSlotForSimpleAction(actionType, actionId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number? freeSlotIndex # esoui type: `luaindex:nilable`
function GetFirstFreeValidSlotForSkillAbility(skillType, skillLineIndex, skillIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@return number? itemStyleId # esoui type: `integer:nilable`
function GetFirstKnownItemStyleId(patternIndex) end

---@return number? lureIndex # esoui type: `luaindex:nilable`
function GetFishingLure() end

---@param lureIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return ItemQuality quality
function GetFishingLureInfo(lureIndex) end

---@return number formattedTime # esoui type: `integer`
function GetFormattedTime() end

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return string guildName
function GetForwardCampOwnerName(battlegroundContext, index) end

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return number pinType # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
---@return number normalizedRadius
---@return boolean useable # esoui type: `bool`
function GetForwardCampPinInfo(battlegroundContext, index) end

---@return number deltaMilliseconds # esoui type: `integer`
function GetFrameDeltaMilliseconds() end

---@param targetFramesPerSecond number
---@return number frameDeltaNormalizedForTargetFramerate
function GetFrameDeltaNormalizedForTargetFramerate(targetFramesPerSecond) end

---@return number deltaSeconds
function GetFrameDeltaSeconds() end

---@return number frameDeltaTimeInMilliseconds # esoui type: `integer`
function GetFrameDeltaTimeMilliseconds() end

---@return number frameDeltaTimeInSeconds
function GetFrameDeltaTimeSeconds() end

---@return number currentFramerate
function GetFramerate() end

---@return number frameTimeInMilliseconds # esoui type: `integer`
function GetFrameTimeMilliseconds() end

---@return number frameTimeInSeconds
function GetFrameTimeSeconds() end

---@param friendIndex number # esoui type: `luaindex`
---@return boolean hasCharacter # esoui type: `bool`
---@return string characterName
---@return string zoneName
---@return number classType # esoui type: `integer`
---@return Alliance alliance
---@return number level # esoui type: `integer`
---@return number championRank # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
---@return number consoleId # esoui type: `id64`
function GetFriendCharacterInfo(friendIndex) end

---@param friendIndex number # esoui type: `luaindex`
---@return string? heronName # esoui type: `string:nilable`
function GetFriendHeronName(friendIndex) end

---@param friendIndex number # esoui type: `luaindex`
---@return string displayName
---@return string note
---@return PlayerStatus playerStatus
---@return number secsSinceLogoff # esoui type: `integer`
function GetFriendInfo(friendIndex) end

---@return number payoffAmount # esoui type: `integer`
function GetFullBountyPayoffAmount() end

---@param furnitureCategoryId number # esoui type: `integer`
---@return string gamepadIcon # esoui type: `textureName`
function GetFurnitureCategoryGamepadIcon(furnitureCategoryId) end

---@param categoryIndex number # esoui type: `luaindex`
---@return number categoryId # esoui type: `integer`
function GetFurnitureCategoryId(categoryIndex) end

---@param furnitureCategoryId number # esoui type: `integer`
---@return string displayName
---@return number? parentCategoryId # esoui type: `integer:nilable`
---@return boolean availableInTradingHouse # esoui type: `bool`
---@return number categoryOrder # esoui type: `integer`
function GetFurnitureCategoryInfo(furnitureCategoryId) end

---@param furnitureCategoryId number # esoui type: `integer`
---@return string normalIcon # esoui type: `textureName`
---@return string pressedIcon # esoui type: `textureName`
---@return string mouseoverIcon # esoui type: `textureName`
function GetFurnitureCategoryKeyboardIcons(furnitureCategoryId) end

---@param furnitureCategoryId number # esoui type: `integer`
---@return string displayName
function GetFurnitureCategoryName(furnitureCategoryId) end

---@param furnitureDataId number # esoui type: `integer`
---@return number? categoryId # esoui type: `integer:nilable`
---@return number? subcategoryId # esoui type: `integer:nilable`
function GetFurnitureDataCategoryInfo(furnitureDataId) end

---@param furnitureDataId number # esoui type: `integer`
---@return number? categoryId # esoui type: `integer:nilable`
---@return number? subcategoryId # esoui type: `integer:nilable`
---@return FurnitureThemeType furnitureTheme
---@return HousingFurnishingLimitType placementLimitType
function GetFurnitureDataInfo(furnitureDataId) end

---@param collectibleId number # esoui type: `integer`
---@return number furnitureId # esoui type: `id64`
function GetFurnitureIdFromCollectibleId(collectibleId) end

---@param itemUniqueId number # esoui type: `id64`
---@return number furnitureId # esoui type: `id64`
function GetFurnitureIdFromItemUniqueId(itemUniqueId) end

---@param categoryIndex number # esoui type: `luaindex`
---@param subcategoryIndex number # esoui type: `luaindex`
---@return number subcategoryId # esoui type: `integer`
function GetFurnitureSubcategoryId(categoryIndex, subcategoryIndex) end

---@return string? action # esoui type: `string:nilable`
---@return string? name # esoui type: `string:nilable`
---@return boolean interactBlocked # esoui type: `bool`
---@return boolean isOwned # esoui type: `bool`
---@return number additionalInfo # esoui type: `integer`
---@return number? contextualInfo # esoui type: `integer:nilable`
---@return string? contextualLink # esoui type: `string:nilable`
---@return boolean isCriminalInteract # esoui type: `bool`
function GetGameCameraInteractableActionInfo() end

---@return boolean interactionExists # esoui type: `bool`
---@return boolean interactionAvailableNow # esoui type: `bool`
---@return boolean questInteraction # esoui type: `bool`
---@return boolean questTargetBased # esoui type: `bool`
---@return number questJournalIndex # esoui type: `luaindex`
---@return number questToolIndex # esoui type: `luaindex`
---@return boolean questToolOnCooldown # esoui type: `bool`
function GetGameCameraInteractableInfo() end

---@return number audioModelType # esoui type: `integer`
---@return number audioModelMaterial # esoui type: `integer`
---@return number audioModelSize # esoui type: `integer`
function GetGameCameraInteractableUnitAudioInfo() end

---@return string? name # esoui type: `string:nilable`
function GetGameCameraNonInteractableName() end

---@return boolean inBonus # esoui type: `bool`
---@return boolean isHostile # esoui type: `bool`
---@return number percentChance # esoui type: `integer`
---@return PickpocketDifficultyType difficulty
---@return boolean isEmpty # esoui type: `bool`
---@return ProspectivePickpocketResult prospectiveResult
---@return string monsterSocialClassString
---@return MonsterSocialClass monsterSocialClass
function GetGameCameraPickpocketingBonusInfo() end

---@return TutorialTrigger tutorialType
function GetGameCameraTargetHoverTutorial() end

---@return string icon
function GetGamepadBothDpadDownAndRightStickScrollIcon() end

---@return number gamepadFontSize # esoui type: `integer`
function GetGamepadChatFontSize() end

---@param key KeyCode
---@param disabled boolean # esoui type: `bool`
---@return string? gamepadIcon # esoui type: `string:nilable`
---@return number? width # esoui type: `integer:nilable`
---@return number? height # esoui type: `integer:nilable`
function GetGamepadIconPathForKeyCode(key, disabled) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number deltaX
function GetGamepadLeftStickDeltaX(includeDeadzone) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number deltaY
function GetGamepadLeftStickDeltaY(includeDeadzone) end

---@return string icon
function GetGamepadLeftStickSlideAndScrollIcon() end

---@return string icon
function GetGamepadLeftStickSlideIcon() end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number x
function GetGamepadLeftStickX(includeDeadzone) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number y
function GetGamepadLeftStickY(includeDeadzone) end

---@return number magnitude
function GetGamepadLeftTriggerMagnitude() end

---@param level number # esoui type: `integer`
---@return string tipOverview
function GetGamepadLevelUpTipDescription(level) end

---@param level number # esoui type: `integer`
---@return string tipOverview
function GetGamepadLevelUpTipOverview(level) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number deltaX
function GetGamepadRightStickDeltaX(includeDeadzone) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number deltaY
function GetGamepadRightStickDeltaY(includeDeadzone) end

---@return string icon
function GetGamepadRightStickScrollIcon() end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number x
function GetGamepadRightStickX(includeDeadzone) end

---@param includeDeadzone boolean # esoui type: `bool`
---@return number y
function GetGamepadRightStickY(includeDeadzone) end

---@return number magnitude
function GetGamepadRightTriggerMagnitude() end

---@return GamepadTemplate gamepadTemplate
function GetGamepadTemplate() end

---@return number gamepadTouchpadX
function GetGamepadTouchpadX() end

---@return number gamepadTouchpadY
function GetGamepadTouchpadY() end

---@return GamepadType gamepadType
function GetGamepadType() end

---@return string referenceArt
function GetGamepadVisualReferenceArt() end

---@return number gameTimeInMilliseconds # esoui type: `integer`
function GetGameTimeMilliseconds() end

---@return number gameTimeInSeconds
function GetGameTimeSeconds() end

---@param nameDescriptor string
---@return Gender gender
function GetGenderFromNameDescriptor(nameDescriptor) end

---@param giftId number # esoui type: `id64`
---@return ClientGiftState state
---@return boolean seen # esoui type: `bool`
---@return number marketProductId # esoui type: `integer`
---@return string senderDisplayName
---@return string recipientDisplayName
---@return number expirationTimestampS # esoui type: `integer`
---@return string note
function GetGiftInfo(giftId) end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetGiftingAccountLockedHelpIndices() end

---@return number gracePeriodTime # esoui type: `integer`
function GetGiftingGracePeriodTime() end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetGiftingGraceStartedHelpIndices() end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetGiftingUnlockedHelpIndices() end

---@param giftId number # esoui type: `id64`
---@return number marketProductId # esoui type: `integer`
function GetGiftMarketProductId(giftId) end

---@return number hours # esoui type: `integer`
---@return number minutes # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetGlobalTimeOfDay() end

---@return number? error # esoui type: `integer:nilable`
function GetGroundTargetingError() end

---@return GroupElectionType electionType
---@return number timeRemainingSeconds # esoui type: `integer`
---@return string electionDescriptor
---@return string? targetUnitTag # esoui type: `string:nilable`
function GetGroupElectionInfo() end

---@param unitTag string
---@return number sortIndex # esoui type: `luaindex`
function GetGroupIndexByUnitTag(unitTag) end

---@return string characterName
---@return number millisecondsSinceRequest # esoui type: `integer`
---@return string displayName
function GetGroupInviteInfo() end

---@return string leaderUnitTag
function GetGroupLeaderUnitTag() end

---@param unitTag string
---@return LFGRole role
function GetGroupMemberSelectedRole(unitTag) end

---@return number groupSize # esoui type: `integer`
function GetGroupSize() end

---@param groupType LFGGroupType
---@return number size # esoui type: `integer`
function GetGroupSizeFromLFGGroupType(groupType) end

---@param companionUnitTag string
---@return string? groupUnitTag # esoui type: `string:nilable`
function GetGroupUnitTagByCompanionUnitTag(companionUnitTag) end

---@param sortIndex number # esoui type: `luaindex`
---@return string? unitTag # esoui type: `string:nilable`
function GetGroupUnitTagByIndex(sortIndex) end

---@param guiName string
---@return boolean hidden # esoui type: `bool`
function GetGuiHidden(guiName) end

---@param guildId number # esoui type: `integer`
---@return Alliance alliance
function GetGuildAlliance(guildId) end

---@param guildId number # esoui type: `integer`
---@return Alliance guildAlliance
function GetGuildAllianceAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return string accountName
---@return string note
function GetGuildBlacklistInfoAt(guildId, index) end

---@param guildId number # esoui type: `integer`
---@return number claimedKeepId # esoui type: `integer`
---@return number claimedKeepCampaignId # esoui type: `integer`
function GetGuildClaimedKeep(guildId) end

---@return number keepId # esoui type: `integer`
function GetGuildClaimInteractionKeepId() end

---@param guildId number # esoui type: `integer`
---@return string description
function GetGuildDescription(guildId) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@param eventIndex number # esoui type: `luaindex`
---@return number guildEventId # esoui type: `id64`
function GetGuildEventId(guildId, category, eventIndex) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@param eventIndex number # esoui type: `luaindex`
---@return GuildEventType eventType
---@return number secsSinceEvent # esoui type: `integer`
---@return userdata param1 # esoui type: `variant`
---@return userdata param2 # esoui type: `variant`
---@return userdata param3 # esoui type: `variant`
---@return userdata param4 # esoui type: `variant`
---@return userdata param5 # esoui type: `variant`
---@return userdata param6 # esoui type: `variant`
---@return number eventId # esoui type: `integer`
function GetGuildEventInfo(guildId, category, eventIndex) end

---@param index number # esoui type: `luaindex`
---@return number timeRemainingS # esoui type: `integer`
function GetGuildFinderAccountApplicationDuration(index) end

---@param index number # esoui type: `luaindex`
---@return number guildId # esoui type: `integer`
---@return number level # esoui type: `integer`
---@return number championPoints # esoui type: `integer`
---@return Alliance alliance
---@return number classId # esoui type: `integer`
---@return string guildName
---@return Alliance guildAlliance
---@return string accountName
---@return string characterName
---@return number achievementPoints # esoui type: `integer`
---@return string applicationMessage
function GetGuildFinderAccountApplicationInfo(index) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number timeRemainingS # esoui type: `integer`
function GetGuildFinderGuildApplicationDuration(guildId, index) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number level # esoui type: `integer`
---@return number championPoints # esoui type: `integer`
---@return Alliance alliance
---@return number classId # esoui type: `integer`
---@return string accountName
---@return string characterName
---@return number achievementPoints # esoui type: `integer`
---@return string applicationMessage
function GetGuildFinderGuildApplicationInfoAt(guildId, index) end

---@return number numApplications # esoui type: `integer`
function GetGuildFinderNumAccountApplications() end

---@param guildId number # esoui type: `integer`
---@return number numApplications # esoui type: `integer`
function GetGuildFinderNumGuildApplications(guildId) end

---@param guildId number # esoui type: `integer`
---@return string foundedDate
function GetGuildFoundedDate(guildId) end

---@param guildId number # esoui type: `integer`
---@return string foundedDate
function GetGuildFoundedDateAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return string headerMessage
function GetGuildHeaderMessageAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return number backgroundCategoryIndex # esoui type: `luaindex`
---@return number backgroundStyleIndex # esoui type: `luaindex`
---@return number backgroundPrimaryColorIndex # esoui type: `luaindex`
---@return number backgroundSecondaryColorIndex # esoui type: `luaindex`
---@return number crestCategoryIndex # esoui type: `luaindex`
---@return number crestStyleIndex # esoui type: `luaindex`
---@return number crestColorIndex # esoui type: `luaindex`
function GetGuildHeraldryAttribute(guildId) end

---@param guildIndex number # esoui type: `luaindex`
---@return number guildId # esoui type: `integer`
function GetGuildId(guildIndex) end

---@param guildId number # esoui type: `integer`
---@return number numMembers # esoui type: `integer`
---@return number numOnline # esoui type: `integer`
---@return string leaderName
---@return number numInvitees # esoui type: `integer`
function GetGuildInfo(guildId) end

---@param guildId number # esoui type: `integer`
---@param inviteeIndex number # esoui type: `luaindex`
---@return string name
---@return number rankIndex # esoui type: `luaindex`
function GetGuildInviteeInfo(guildId, inviteeIndex) end

---@param index number # esoui type: `luaindex`
---@return number guildId # esoui type: `integer`
---@return string guildName
---@return Alliance guildAlliance
---@return string inviterDisplayName
---@return string note
function GetGuildInviteInfo(index) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number timeSinceBidS # esoui type: `integer`
---@return number bidAmount # esoui type: `integer`
---@return string kioskName
---@return string bidderDisplayName
function GetGuildKioskActiveBidInfo(guildId, index) end

---@param guildId number # esoui type: `integer`
---@return string? ownedKioskName # esoui type: `string:nilable`
function GetGuildKioskAttribute(guildId) end

---@return number despawnTimestampS # esoui type: `integer`
---@return number bidEndTimestampS # esoui type: `integer`
---@return number respawnTimestampS # esoui type: `integer`
function GetGuildKioskCycleTimes() end

---@param guildId number # esoui type: `integer`
---@return GuildLanguageAttributeValue language
function GetGuildLanguageAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return number localEndTimeHour # esoui type: `integer`
function GetGuildLocalEndTimeAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return number localStartTimeHour # esoui type: `integer`
function GetGuildLocalStartTimeAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return boolean hasCharacter # esoui type: `bool`
---@return string characterName
---@return string zoneName
---@return number classType # esoui type: `integer`
---@return Alliance alliance
---@return number level # esoui type: `integer`
---@return number championRank # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
---@return number consoleId # esoui type: `id64`
function GetGuildMemberCharacterInfo(guildId, memberIndex) end

---@param guildId number # esoui type: `integer`
---@param displayName string
---@return number? memberIndex # esoui type: `luaindex:nilable`
function GetGuildMemberIndexFromDisplayName(guildId, displayName) end

---@param guildId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return string name
---@return string note
---@return number rankIndex # esoui type: `luaindex`
---@return PlayerStatus playerStatus
---@return number secsSinceLogoff # esoui type: `integer`
function GetGuildMemberInfo(guildId, memberIndex) end

---@param guildId number # esoui type: `integer`
---@return number minimumCP # esoui type: `integer`
function GetGuildMinimumCPAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return string motd
function GetGuildMotD(guildId) end

---@param guildId number # esoui type: `integer`
---@return string name
function GetGuildName(guildId) end

---@param guildId number # esoui type: `integer`
---@return string guildName
function GetGuildNameAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return string? ownedKioskName # esoui type: `string:nilable`
function GetGuildOwnedKioskInfo(guildId) end

---@param permission GuildPermission
---@param index number # esoui type: `luaindex`
---@return GuildPermission dependentPermission
function GetGuildPermissionDependency(permission, index) end

---@param permission GuildPermission
---@param index number # esoui type: `luaindex`
---@return GuildPermission requisitePermission
function GetGuildPermissionRequisite(permission, index) end

---@param guildId number # esoui type: `integer`
---@return GuildPersonalityAttributeValue personality
function GetGuildPersonalityAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return GuildFocusAttributeValue primaryFocus
function GetGuildPrimaryFocusAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@param rankIndex number # esoui type: `luaindex`
---@return string rankName
function GetGuildRankCustomName(guildId, rankIndex) end

---@param guildId number # esoui type: `integer`
---@param rankIndex number # esoui type: `luaindex`
---@return number iconIndex # esoui type: `luaindex`
function GetGuildRankIconIndex(guildId, rankIndex) end

---@param guildId number # esoui type: `integer`
---@param rankIndex number # esoui type: `luaindex`
---@return number rankId # esoui type: `integer`
function GetGuildRankId(guildId, rankIndex) end

---@param iconIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetGuildRankLargeIcon(iconIndex) end

---@param iconIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetGuildRankListDownIcon(iconIndex) end

---@param iconIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetGuildRankListHighlightIcon(iconIndex) end

---@param iconIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetGuildRankListUpIcon(iconIndex) end

---@param iconIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetGuildRankSmallIcon(iconIndex) end

---@param guildId number # esoui type: `integer`
---@param activity GuildActivityAttributeValue
---@return boolean selected # esoui type: `bool`
function GetGuildRecruitmentActivityValue(guildId, activity) end

---@param guildId number # esoui type: `integer`
---@return number localEndTimeHours # esoui type: `integer`
function GetGuildRecruitmentEndTime(guildId) end

---@param guildId number # esoui type: `integer`
---@return string recruitmentMessage
---@return string headerMessage
---@return GuildRecruitmentStatusAttributeValue recruitmentStatus
---@return GuildFocusAttributeValue primaryFocus
---@return GuildFocusAttributeValue secondaryFocus
---@return GuildPersonalityAttributeValue personality
---@return GuildLanguageAttributeValue language
---@return number minimumCP # esoui type: `integer`
function GetGuildRecruitmentInfo(guildId) end

---@param guildId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetGuildRecruitmentLink(guildId, linkStyle) end

---@param guildId number # esoui type: `integer`
---@return string recruitmentMessage
function GetGuildRecruitmentMessageAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@param role LFGRole
---@return boolean selected # esoui type: `bool`
function GetGuildRecruitmentRoleValue(guildId, role) end

---@param guildId number # esoui type: `integer`
---@return number localStartTimeHours # esoui type: `integer`
function GetGuildRecruitmentStartTime(guildId) end

---@param guildId number # esoui type: `integer`
---@return GuildRecruitmentStatusAttributeValue recruitmentStatus
function GetGuildRecruitmentStatus(guildId) end

---@param guildId number # esoui type: `integer`
---@return GuildRecruitmentStatusAttributeValue recruitmentStatus
function GetGuildRecruitmentStatusAttribute(guildId) end

---@return number keepId # esoui type: `integer`
function GetGuildReleaseInteractionKeepId() end

---@param guildId number # esoui type: `integer`
---@return GuildFocusAttributeValue secondaryFocus
function GetGuildSecondaryFocusAttribute(guildId) end

---@param guildId number # esoui type: `integer`
---@return number guildSize # esoui type: `integer`
function GetGuildSizeAttribute(guildId) end

---@param size GuildSizeAttributeValue
---@return number minSize # esoui type: `integer`
---@return number maxSize # esoui type: `integer`
function GetGuildSizeAttributeRangeValues(size) end

---@param index number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string itemName
---@return number quality # esoui type: `integer`
---@return number stackCount # esoui type: `integer`
---@return number requiredLevel # esoui type: `integer`
---@return number requiredChampionRank # esoui type: `integer`
---@return number purchasePrice # esoui type: `integer`
---@return CurrencyType currencyType
function GetGuildSpecificItemInfo(index) end

---@param index number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetGuildSpecificItemLink(index, linkStyle) end

---@return number amountPerInterval # esoui type: `integer`
---@return number intervalDurationS # esoui type: `integer`
---@return number progressThroughIntervalS # esoui type: `integer`
function GetHeatDecayInfo() end

---@return number heldMain # esoui type: `integer`
---@return number heldOff # esoui type: `integer`
---@return number lastHeldMain # esoui type: `integer`
---@return number lastHeldOff # esoui type: `integer`
function GetHeldSlots() end

---@return ActiveWeaponPair heldWeaponPair
function GetHeldWeaponPair() end

---@param helpCategoryIndex number # esoui type: `luaindex`
---@return string name
---@return string description
---@return string upIcon # esoui type: `textureName`
---@return string downIcon # esoui type: `textureName`
---@return string overIcon # esoui type: `textureName`
---@return string gamepadIcon # esoui type: `textureName`
---@return string gamepadName
function GetHelpCategoryInfo(helpCategoryIndex) end

---@param helpLink string
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetHelpIndicesFromHelpLink(helpLink) end

---@param helpCategoryIndex number # esoui type: `luaindex`
---@param helpIndex number # esoui type: `luaindex`
---@return string name
---@return string description
---@return string description2
---@return string? image # esoui type: `textureName:nilable`
---@return string descriptionGamepad
---@return string descriptionGamepad2
---@return HelpShowOptions showOptions
function GetHelpInfo(helpCategoryIndex, helpIndex) end

---@param helpCategoryIndex number # esoui type: `luaindex`
---@param helpIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetHelpLink(helpCategoryIndex, helpIndex, linkStyle) end

---@return string paragraph
function GetHelpOverviewIntroParagraph() end

---@param index number # esoui type: `luaindex`
---@return string question
---@return string answer
function GetHelpOverviewQuestionAnswerPair(index) end

---NOTE! Uses variable returns...
---@return number helpCategoryIndex # esoui type: `luaindex`
---@return number helpIndex # esoui type: `luaindex`
function GetHelpSearchResults() end

---@param categoryIndex number # esoui type: `luaindex`
---@return string categoryName
---@return string icon # esoui type: `textureName`
function GetHeraldryBackgroundCategoryInfo(categoryIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return string styleName
---@return string icon # esoui type: `textureName`
function GetHeraldryBackgroundStyleInfo(categoryIndex, styleIndex) end

---@param colorIndex number # esoui type: `luaindex`
---@return string colorName
---@return DyeHueCategory hueCategory
---@return number r
---@return number g
---@return number b
---@return number sortKey # esoui type: `integer`
function GetHeraldryColorInfo(colorIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@return string categoryName
---@return string icon # esoui type: `textureName`
function GetHeraldryCrestCategoryInfo(categoryIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return string styleName
---@return string icon # esoui type: `textureName`
function GetHeraldryCrestStyleInfo(categoryIndex, styleIndex) end

---@return number backgroundStyleCost # esoui type: `integer`
---@return number backgroundPrimaryColorCost # esoui type: `integer`
---@return number backgroundSecondaryColorCost # esoui type: `integer`
---@return number crestStyleCost # esoui type: `integer`
---@return number crestColorCost # esoui type: `integer`
function GetHeraldryCustomizationCosts() end

---@return number? money # esoui type: `integer:nilable`
function GetHeraldryGuildBankedMoney() end

---@param categoryIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetHeraldryGuildFinderBackgroundCategoryIcon(categoryIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetHeraldryGuildFinderBackgroundStyleIcon(categoryIndex, styleIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
function GetHeraldryGuildFinderCrestStyleIcon(categoryIndex, styleIndex) end

---@param visualLayer VisualLayer
---@return string hiddenByString
function GetHiddenByStringForVisualLayer(visualLayer) end

---@return number highestClaimedLevel # esoui type: `integer`
function GetHighestClaimedLevelUpReward() end

---@return number highestItemStyleDefId # esoui type: `integer`
function GetHighestItemStyleId() end

---@param actionName string
---@param preferGamepad boolean # esoui type: `bool`
---@return KeyCode keyCode
---@return KeyCode mod1
---@return KeyCode mod2
---@return KeyCode mod3
---@return KeyCode mod4
function GetHighestPriorityActionBindingInfoFromName(actionName, preferGamepad) end

---@return AntiquityDifficulty highestScryableDifficulty
function GetHighestScryableDifficulty() end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return MapDisplayPinType pinType
---@return number currentNormalizedX
---@return number currentNormalizedY
---@return boolean continuousUpdate # esoui type: `bool`
function GetHistoricalAvAObjectivePinInfo(keepId, objectiveId, battlegroundContext, historyPercent) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return number alliance # esoui type: `integer`
function GetHistoricalKeepAlliance(keepId, battlegroundContext, historyPercent) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return number pinType # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetHistoricalKeepPinInfo(keepId, battlegroundContext, historyPercent) end

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@param historyPercent number
---@return number linkType # esoui type: `integer`
---@return number linkOwner # esoui type: `integer`
---@return number restricedToAlliance # esoui type: `integer`
---@return number startX
---@return number startY
---@return number endX
---@return number endY
function GetHistoricalKeepTravelNetworkLinkInfo(linkIndex, bgContext, historyPercent) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return boolean underAttack # esoui type: `bool`
function GetHistoricalKeepUnderAttack(keepId, battlegroundContext, historyPercent) end

---@param voteCategory number # esoui type: `integer`
---@param houseCategory HouseCategoryType
---@param entryIndex number # esoui type: `luaindex`
---@return number rank # esoui type: `integer`
---@return string playerDisplayname
---@return number houseCollectibleId # esoui type: `integer`
---@return number score # esoui type: `integer`
function GetHomeShowLeaderboardEntryInfo(voteCategory, houseCategory, entryIndex) end

---@param voteCategory number # esoui type: `integer`
---@param houseCategory HouseCategoryType
---@return number personalBestRank # esoui type: `integer`
---@return number personalBestScore # esoui type: `integer`
function GetHomeShowLeaderboardLocalPlayerInfo(voteCategory, houseCategory) end

---@return number secondsUntilNextUpdate # esoui type: `integer`
function GetHomeShowLeaderboardTimeInfo() end

---@param voteCategory number # esoui type: `integer`
---@return string homeShowEventName
function GetHomeShowLeaderboardVoteCategoryName(voteCategory) end

---@param houseId number # esoui type: `integer`
---@return HouseCategoryType houseType
function GetHouseCategoryType(houseId) end

---@param houseId number # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
function GetHouseFoundInZoneId(houseId) end

---@param houseId number # esoui type: `integer`
---@param limitType HousingFurnishingLimitType
---@return number furnishingPlacementLimit # esoui type: `integer`
function GetHouseFurnishingPlacementLimit(houseId, limitType) end

---@param houseId number # esoui type: `integer`
---@return string previewBackgroundFileIndex # esoui type: `textureName`
function GetHousePreviewBackgroundImage(houseId) end

---@param houseTemplateId number # esoui type: `integer`
---@param furnishingType HousingFurnishingLimitType
---@return number initialFurnishingCount # esoui type: `integer`
---@return number furnishingLimit # esoui type: `integer`
function GetHouseTemplateBaseFurnishingCountInfo(houseTemplateId, furnishingType) end

---@param houseId number # esoui type: `integer`
---@param houseTemplateIndex number # esoui type: `luaindex`
---@return number houseTemplateId # esoui type: `integer`
function GetHouseTemplateIdByIndexForHouse(houseId, houseTemplateIndex) end

---@param houseId number # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
function GetHouseZoneId(houseId) end

---@return number pushSpeedPerSecond
---@return number rotationStepSizeRadians
---@return number numTicksPerSecondForRotationChange # esoui type: `integer`
function GetHousingEditorConstants() end

---@param index number # esoui type: `integer`
---@return HousingEditorCommandType commandType
---@return string itemName
---@return string icon # esoui type: `textureName`
function GetHousingEditorHistoryCommandInfo(index) end

---@return HousingEditorMode mode
function GetHousingEditorMode() end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@return HousePermissionPresetSetting preset
function GetHousingPermissionPresetType(houseId, permissionCategory, index) end

---@return number houseId # esoui type: `integer`
function GetHousingPrimaryHouse() end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@return string displayName
function GetHousingUserGroupDisplayName(houseId, permissionCategory, index) end

---@return HousingVisitorRole role
function GetHousingVisitorRole() end

---@param index number # esoui type: `luaindex`
---@return string displayName
---@return string note
function GetIgnoredInfo(index) end

---@return number collectibleId # esoui type: `integer`
function GetImperialCityCollectibleId() end

---@return number? index # esoui type: `luaindex:nilable`
function GetImperialCityMapIndex() end

---@return number imperialStyleId # esoui type: `integer`
function GetImperialStyleId() end

---@param index number # esoui type: `luaindex`
---@return string displayName
---@return number secsSinceRequest # esoui type: `integer`
---@return string message
function GetIncomingFriendRequestInfo(index) end

---@return number infamy # esoui type: `integer`
function GetInfamy() end

---@param infamyAmount number # esoui type: `integer`
---@return InfamyThresholdsType infamyLevel
function GetInfamyLevel(infamyAmount) end

---@return number meterSize # esoui type: `integer`
function GetInfamyMeterSize() end

---NOTE! Uses variable returns...
---@param digSiteId number # esoui type: `integer`
---@return number antiquityId # esoui type: `integer`
function GetInProgressAntiquitiesForDigSite(digSiteId) end

---@param inProgressAntiquityIndex number # esoui type: `luaindex`
---@param digSiteIndex number # esoui type: `luaindex`
---@return number digSiteId # esoui type: `integer`
function GetInProgressAntiquityDigSiteId(inProgressAntiquityIndex, digSiteIndex) end

---@param inProgressAntiquityIndex number # esoui type: `luaindex`
---@return number antiquityId # esoui type: `integer`
function GetInProgressAntiquityId(inProgressAntiquityIndex) end

---@return number? remainingTimeMs # esoui type: `integer:nilable`
---@return number? totalTimeMs # esoui type: `integer:nilable`
function GetInstanceKickTime() end

---@param instantUnlockId number # esoui type: `integer`
---@return InstantUnlockRewardCategory instantUnlockCategory
function GetInstantUnlockRewardCategory(instantUnlockId) end

---@param instantUnlockId number # esoui type: `integer`
---@return string description
function GetInstantUnlockRewardDescription(instantUnlockId) end

---@param instantUnlockId number # esoui type: `integer`
---@return string displayName
function GetInstantUnlockRewardDisplayName(instantUnlockId) end

---@param instantUnlockId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetInstantUnlockRewardIcon(instantUnlockId) end

---@param rewardId number # esoui type: `integer`
---@return number instantUnlockId # esoui type: `integer`
function GetInstantUnlockRewardInstantUnlockId(rewardId) end

---@param instantUnlockId number # esoui type: `integer`
---@return InstantUnlockRewardType instantUnlockType
function GetInstantUnlockRewardType(instantUnlockId) end

---@return number keepId # esoui type: `integer`
function GetInteractionKeepId() end

---@return InteractionType interactType
function GetInteractionType() end

---@param interfaceColorType InterfaceColorType
---@param fieldValue number # esoui type: `integer`
---@return number red
---@return number green
---@return number blue
---@return number alpha
function GetInterfaceColor(interfaceColorType, fieldValue) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetInventoryItemPreviewVariationDisplayName(bagId, slotIndex, variation) end

---@param crateId number # esoui type: `integer`
---@return number inventorySpaceRequired # esoui type: `integer`
function GetInventorySpaceRequiredToOpenCrownCrate(crateId) end

---@return boolean isNewCharacter # esoui type: `bool`
function GetIsNewCharacter() end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return boolean isSharable # esoui type: `bool`
function GetIsQuestSharable(journalQuestIndex) end

---@param trackType TrackedDataType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@return boolean tracked # esoui type: `bool`
function GetIsTracked(trackType, param1, param2) end

---@param trackType TrackedDataType
---@param contentId number # esoui type: `integer`
---@return boolean tracked # esoui type: `bool`
function GetIsTrackedForContentId(trackType, contentId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GameplayActorCategory actorCategory
function GetItemActorCategory(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ArmorType armorType
function GetItemArmorType(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return BindType bindType
function GetItemBindType(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number timeRemainingS # esoui type: `integer`
function GetItemBoPTimeRemainingSeconds(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string namesString
function GetItemBoPTradeableDisplayNamesString(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param nameIndex number # esoui type: `luaindex`
---@return string name
function GetItemBoPTradeableEligibleNameByIndex(bagId, slotIndex, nameIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number numNames # esoui type: `integer`
function GetItemBoPTradeableNumEligibleNames(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number combinationId # esoui type: `integer`
function GetItemCombinationId(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return EquipSlot equipSlot1
---@return EquipSlot equipSlot2
function GetItemComparisonEquipSlots(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number condition # esoui type: `integer`
function GetItemCondition(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number remain # esoui type: `integer`
---@return number duration # esoui type: `integer`
function GetItemCooldownInfo(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return TradeskillType usedInCraftingType
---@return ItemType itemType
---@return number? extraInfo1 # esoui type: `integer:nilable`
---@return number? extraInfo2 # esoui type: `integer:nilable`
---@return number? extraInfo3 # esoui type: `integer:nilable`
function GetItemCraftingInfo(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string creatorName
function GetItemCreatorName(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetItemDisplayQuality(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return EquipmentFilterType equipmentFilterType
function GetItemEquipmentFilterType(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return EquipSlot equipSlot1
---@return EquipSlot equipSlot2
function GetItemEquippedComparisonEquipSlots(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return EquipType equipType
function GetItemEquipType(bagId, slotIndex) end

---NOTE! Uses variable returns...
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemFilterType itemFilterType
function GetItemFilterTypeInfo(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemQuality functionalQuality
function GetItemFunctionalQuality(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number furnitureDataId # esoui type: `integer`
function GetItemFurnitureDataId(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number itemId # esoui type: `integer`
function GetItemId(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return boolean locked # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemQuality functionalQuality
---@return ItemDisplayQuality displayQuality
function GetItemInfo(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number? id # esoui type: `integer:nilable`
function GetItemInstanceId(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number launderCost # esoui type: `integer`
function GetItemLaunderPrice(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number level # esoui type: `integer`
function GetItemLevel(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetItemLink(bagId, slotIndex, linkStyle) end

---@param itemLink string
---@return GameplayActorCategory actorCategory
function GetItemLinkActorCategory(itemLink) end

---@param itemLink string
---@return number enchantId # esoui type: `integer`
function GetItemLinkAppliedEnchantId(itemLink) end

---@param itemLink string
---@param considerCondition boolean # esoui type: `bool`
---@return number armorRating # esoui type: `integer`
function GetItemLinkArmorRating(itemLink, considerCondition) end

---@param itemLink string
---@return ArmorType armorType
function GetItemLinkArmorType(itemLink) end

---@param itemLink string
---@return BindType bindType
function GetItemLinkBindType(itemLink) end

---@param itemLink string
---@return string? bookTitle # esoui type: `string:nilable`
function GetItemLinkBookTitle(itemLink) end

---@param itemLink string
---@return string combinationDescription
function GetItemLinkCombinationDescription(itemLink) end

---@param itemLink string
---@return number combinationId # esoui type: `integer`
function GetItemLinkCombinationId(itemLink) end

---@param itemLink string
---@return EquipSlot equipSlot1
---@return EquipSlot equipSlot2
function GetItemLinkComparisonEquipSlots(itemLink) end

---@param itemLink string
---@return number conditionPercent # esoui type: `integer`
function GetItemLinkCondition(itemLink) end

---@param itemLink string
---@return number containerCollectibleId # esoui type: `integer`
function GetItemLinkContainerCollectibleId(itemLink) end

---@param itemLink string
---@param containerSetIndex number # esoui type: `luaindex`
---@param bonusIndex number # esoui type: `luaindex`
---@return number numRequired # esoui type: `integer`
---@return string bonusDescription
---@return boolean isPerfectedBonus # esoui type: `bool`
function GetItemLinkContainerSetBonusInfo(itemLink, containerSetIndex, bonusIndex) end

---@param itemLink string
---@param containerSetIndex number # esoui type: `luaindex`
---@return boolean hasSet # esoui type: `bool`
---@return string setName
---@return number numBonuses # esoui type: `integer`
---@return number numNormalEquipped # esoui type: `integer`
---@return number maxEquipped # esoui type: `integer`
---@return number setId # esoui type: `integer`
---@return number numPerfectedEquipped # esoui type: `integer`
function GetItemLinkContainerSetInfo(itemLink, containerSetIndex) end

---@param itemLink string
---@return TradeskillType tradeskillType
function GetItemLinkCraftingSkillType(itemLink) end

---@param itemLink string
---@return number enchantId # esoui type: `integer`
function GetItemLinkDefaultEnchantId(itemLink) end

---@param itemLink string
---@return ItemDisplayQuality displayQuality
function GetItemLinkDisplayQuality(itemLink) end

---@param itemLink string
---@return number primaryDefId # esoui type: `integer`
---@return number secondaryDefId # esoui type: `integer`
---@return number accentDefId # esoui type: `integer`
function GetItemLinkDyeIds(itemLink) end

---@param itemLink string
---@return number dyeStampId # esoui type: `integer`
function GetItemLinkDyeStampId(itemLink) end

---@param itemLink string
---@return boolean hasCharges # esoui type: `bool`
---@return string enchantHeader
---@return string enchantDescription
function GetItemLinkEnchantInfo(itemLink) end

---@param itemLink string
---@return EnchantingRuneClassification runeClassification
function GetItemLinkEnchantingRuneClassification(itemLink) end

---@param itemLink string
---@return boolean? known # esoui type: `bool:nilable`
---@return string? name # esoui type: `string:nilable`
function GetItemLinkEnchantingRuneName(itemLink) end

---@param itemLink string
---@return EquipSlot equipSlot1
---@return EquipSlot equipSlot2
function GetItemLinkEquippedComparisonEquipSlots(itemLink) end

---@param itemLink string
---@return EquipType equipType
function GetItemLinkEquipType(itemLink) end

---NOTE! Uses variable returns...
---@param itemLink string
---@return ItemFilterType itemFilterType
function GetItemLinkFilterTypeInfo(itemLink) end

---@param itemLink string
---@return number enchantId # esoui type: `integer`
function GetItemLinkFinalEnchantId(itemLink) end

---@param itemLink string
---@return string flavorText
function GetItemLinkFlavorText(itemLink) end

---@param itemLink string
---@return ItemQuality functionalQuality
function GetItemLinkFunctionalQuality(itemLink) end

---@param itemLink string
---@return HousingFurnishingLimitType furnishingLimitType
function GetItemLinkFurnishingLimitType(itemLink) end

---@param itemLink string
---@return number furnitureDataId # esoui type: `integer`
function GetItemLinkFurnitureDataId(itemLink) end

---@param itemLink string
---@return number? minLevel # esoui type: `integer:nilable`
---@return number? minChampionPoints # esoui type: `integer:nilable`
function GetItemLinkGlyphMinLevels(itemLink) end

---@param itemLink string
---@return number? recipeListIndex # esoui type: `luaindex:nilable`
---@return number? recipeIndex # esoui type: `luaindex:nilable`
function GetItemLinkGrantedRecipeIndices(itemLink) end

---@param itemLink string
---@return string itemIcon # esoui type: `textureName`
function GetItemLinkIcon(itemLink) end

---@param itemLink string
---@return string icon
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
function GetItemLinkInfo(itemLink) end

---@param itemLink string
---@return number itemId # esoui type: `integer`
function GetItemLinkItemId(itemLink) end

---@param itemLink string
---@return number slot # esoui type: `id64`
function GetItemLinkItemSetCollectionSlot(itemLink) end

---@param itemLink string
---@return number style # esoui type: `integer`
function GetItemLinkItemStyle(itemLink) end

---@param itemLink string
---@param itemTagIndex number # esoui type: `luaindex`
---@return string itemTagDescription
---@return ItemTagCategory itemTagCategory
function GetItemLinkItemTagInfo(itemLink, itemTagIndex) end

---@param itemLink string
---@return ItemType itemType
---@return SpecializedItemType specializedItemType
function GetItemLinkItemType(itemLink) end

---@param itemLink string
---@return ItemUseType onUseType
function GetItemLinkItemUseType(itemLink) end

---@param itemLink string
---@return string levelsDescription
function GetItemLinkMaterialLevelDescription(itemLink) end

---@param itemLink string
---@return number maxCharges # esoui type: `integer`
function GetItemLinkMaxEnchantCharges(itemLink) end

---@param itemLink string
---@return string itemName
function GetItemLinkName(itemLink) end

---@param itemLink string
---@return number numSetIds # esoui type: `integer`
function GetItemLinkNumContainerSetIds(itemLink) end

---@param itemLink string
---@return number numCharges # esoui type: `integer`
function GetItemLinkNumEnchantCharges(itemLink) end

---@param itemLink string
---@return number numItemTags # esoui type: `integer`
function GetItemLinkNumItemTags(itemLink) end

---@param itemLink string
---@return boolean hasAbility # esoui type: `bool`
---@return string abilityHeader
---@return string abilityDescription
---@return number cooldown # esoui type: `integer`
---@return boolean hasScaling # esoui type: `bool`
---@return number minLevel # esoui type: `integer`
---@return number maxLevel # esoui type: `integer`
---@return boolean isChampionPoints # esoui type: `bool`
---@return number remainingCooldown # esoui type: `integer`
function GetItemLinkOnUseAbilityInfo(itemLink) end

---@param itemLink string
---@return number outfitStyleId # esoui type: `integer`
function GetItemLinkOutfitStyleId(itemLink) end

---@param itemLink string
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetItemLinkPreviewVariationDisplayName(itemLink, variation) end

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return boolean? known # esoui type: `bool:nilable`
---@return string? name # esoui type: `string:nilable`
function GetItemLinkReagentTraitInfo(itemLink, index) end

---@param itemLink string
---@return TradeskillType craftingSkillType
function GetItemLinkRecipeCraftingSkillType(itemLink) end

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return string ingredientName
---@return number amountInInventoryAndBank # esoui type: `integer`
---@return number amountRequired # esoui type: `integer`
function GetItemLinkRecipeIngredientInfo(itemLink, index) end

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetItemLinkRecipeIngredientItemLink(itemLink, index, linkStyle) end

---@param itemLink string
---@return number numIngredients # esoui type: `integer`
function GetItemLinkRecipeNumIngredients(itemLink) end

---@param itemLink string
---@return number numTradeskillRequirements # esoui type: `integer`
function GetItemLinkRecipeNumTradeskillRequirements(itemLink) end

---@param itemLink string
---@return number qualityRequirement # esoui type: `integer`
function GetItemLinkRecipeQualityRequirement(itemLink) end

---@param itemLink string
---@param linkStyle LinkStyle
---@return string link
function GetItemLinkRecipeResultItemLink(itemLink, linkStyle) end

---@param itemLink string
---@param tradeskillIndex number # esoui type: `luaindex`
---@return TradeskillType tradeskill
---@return number requiredLevel # esoui type: `integer`
function GetItemLinkRecipeTradeskillRequirement(itemLink, tradeskillIndex) end

---@param itemLink string
---@param linkStyle LinkStyle
---@return string refinedItemLink
function GetItemLinkRefinedMaterialItemLink(itemLink, linkStyle) end

---@param itemLink string
---@return number requiredChampionPoints # esoui type: `integer`
function GetItemLinkRequiredChampionPoints(itemLink) end

---@param itemLink string
---@return number requiredRank # esoui type: `integer`
function GetItemLinkRequiredCraftingSkillRank(itemLink) end

---@param itemLink string
---@return number requiredLevel # esoui type: `integer`
function GetItemLinkRequiredLevel(itemLink) end

---@param itemLink string
---@return ItemSellInformation sellInformation
function GetItemLinkSellInformation(itemLink) end

---@param itemLink string
---@param equipped boolean # esoui type: `bool`
---@param index number # esoui type: `luaindex`
---@return number numRequired # esoui type: `integer`
---@return string bonusDescription
---@return boolean isPerfectedBonus # esoui type: `bool`
function GetItemLinkSetBonusInfo(itemLink, equipped, index) end

---@param itemLink string
---@param equipped boolean # esoui type: `bool`
---@return boolean hasSet # esoui type: `bool`
---@return string setName
---@return number numBonuses # esoui type: `integer`
---@return number numNormalEquipped # esoui type: `integer`
---@return number maxEquipped # esoui type: `integer`
---@return number setId # esoui type: `integer`
---@return number numPerfectedEquipped # esoui type: `integer`
function GetItemLinkSetInfo(itemLink, equipped) end

---@param itemLink string
---@return boolean showInTooltip # esoui type: `bool`
function GetItemLinkShowItemStyleInTooltip(itemLink) end

---@param itemLink string
---@return number maxHP # esoui type: `integer`
function GetItemLinkSiegeMaxHP(itemLink) end

---@param itemLink string
---@return SiegeType siegeType
function GetItemLinkSiegeType(itemLink) end

---@param itemLink string
---@return number stackCountBackpack # esoui type: `integer`
---@return number stackCountBank # esoui type: `integer`
---@return number stackCountCraftBag # esoui type: `integer`
function GetItemLinkStacks(itemLink) end

---@param itemLink string
---@return number collectibleId # esoui type: `integer`
function GetItemLinkTooltipRequiresCollectibleId(itemLink) end

---@param itemLink string
---@return string itemName
function GetItemLinkTradingHouseItemSearchName(itemLink) end

---@param itemLink string
---@return ItemTraitTypeCategory itemTraitTypeCategory
function GetItemLinkTraitCategory(itemLink) end

---@param itemLink string
---@return ItemTraitType traitType
---@return string traitDescription
function GetItemLinkTraitInfo(itemLink) end

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return boolean hasAbility # esoui type: `bool`
---@return string abilityDescription
---@return number cooldown # esoui type: `integer`
---@return boolean hasScaling # esoui type: `bool`
---@return number minLevel # esoui type: `integer`
---@return number maxLevel # esoui type: `integer`
---@return boolean isChampionPoints # esoui type: `bool`
function GetItemLinkTraitOnUseAbilityInfo(itemLink, index) end

---@param itemLink string
---@return ItemTraitType itemTraitType
function GetItemLinkTraitType(itemLink) end

---@param itemLink string
---@param considerCondition boolean # esoui type: `bool`
---@return number value # esoui type: `integer`
function GetItemLinkValue(itemLink, considerCondition) end

---@param itemLink string
---@return number weaponPower # esoui type: `integer`
function GetItemLinkWeaponPower(itemLink) end

---@param itemLink string
---@return WeaponType weaponType
function GetItemLinkWeaponType(itemLink) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string name
function GetItemName(bagId, slotIndex) end

---@param equipSlot EquipSlot
---@return boolean hasPoison # esoui type: `bool`
---@return number poisonCount # esoui type: `integer`
---@return string poisonHeader
---@return string poisonItemLink
function GetItemPairedPoisonInfo(equipSlot) end

---@param itemSetId number # esoui type: `integer`
---@param currencyType CurrencyType
---@return number? cost # esoui type: `integer:nilable`
function GetItemReconstructionCurrencyOptionCost(itemSetId, currencyType) end

---@param currencyOptionIndex number # esoui type: `luaindex`
---@return CurrencyType currencyType
function GetItemReconstructionCurrencyOptionType(currencyOptionIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number repairCost # esoui type: `integer`
function GetItemRepairCost(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number requiredChampionPoints # esoui type: `integer`
function GetItemRequiredChampionPoints(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number requiredLevel # esoui type: `integer`
function GetItemRequiredLevel(bagId, slotIndex) end

---@return number retraitCost # esoui type: `integer`
---@return CurrencyType currencyType
---@return CurrencyLocation currencyLocation
function GetItemRetraitCost() end

---@param rewardId number # esoui type: `integer`
---@return number itemId # esoui type: `integer`
function GetItemRewardItemId(rewardId) end

---@param rewardId number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetItemRewardItemLink(rewardId, quantity, linkStyle) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemSellInformation sellInformation
function GetItemSellInformation(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
function GetItemSellValueWithBonuses(bagId, slotIndex) end

---@param categoryId number # esoui type: `integer`
---@return string gamepadIcon # esoui type: `textureName`
function GetItemSetCollectionCategoryGamepadIcon(categoryId) end

---@param itemSetId number # esoui type: `integer`
---@return number categoryId # esoui type: `integer`
function GetItemSetCollectionCategoryId(itemSetId) end

---@param categoryId number # esoui type: `integer`
---@return string unpressedButtonIcon # esoui type: `textureName`
---@return string pressedButtonIcon # esoui type: `textureName`
---@return string mouseoverButtonIcon # esoui type: `textureName`
function GetItemSetCollectionCategoryKeyboardIcons(categoryId) end

---@param categoryId number # esoui type: `integer`
---@return string name
function GetItemSetCollectionCategoryName(categoryId) end

---@param categoryId number # esoui type: `integer`
---@return number order # esoui type: `integer`
function GetItemSetCollectionCategoryOrder(categoryId) end

---@param categoryId number # esoui type: `integer`
---@return number parentCategoryId # esoui type: `integer`
function GetItemSetCollectionCategoryParentId(categoryId) end

---@param itemSetId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number pieceId # esoui type: `integer`
---@return number slot # esoui type: `id64`
function GetItemSetCollectionPieceInfo(itemSetId, index) end

---@param pieceId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@param traitType ItemTraitType
---@param upgradeItemFunctionalQuality ItemQuality
---@return string itemLink
function GetItemSetCollectionPieceItemLink(pieceId, linkStyle, traitType, upgradeItemFunctionalQuality) end

---@param searchResultIndex number # esoui type: `luaindex`
---@return number itemSetId # esoui type: `integer`
function GetItemSetCollectionSearchResult(searchResultIndex) end

---NOTE! Uses variable returns...
---@param slotMask number # esoui type: `id64`
---@return number slot # esoui type: `id64`
function GetItemSetCollectionSlotsInMask(slotMask) end

---@param itemSetId number # esoui type: `integer`
---@return string name
function GetItemSetName(itemSetId) end

---@param itemSetId number # esoui type: `integer`
---@return ItemSetType type
function GetItemSetType(itemSetId) end

---@param itemSetId number # esoui type: `integer`
---@return number unperfectedSetId # esoui type: `integer`
function GetItemSetUnperfectedSetId(itemSetId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number itemSoundCategory # esoui type: `integer`
function GetItemSoundCategory(bagId, slotIndex) end

---@param link string
---@return number itemSoundCategory # esoui type: `integer`
function GetItemSoundCategoryFromLink(link) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number statValue # esoui type: `integer`
function GetItemStatValue(bagId, slotIndex) end

---@param itemStyleId number # esoui type: `integer`
---@return boolean alwaysHideIfLocked # esoui type: `bool`
function GetItemStyleInfo(itemStyleId) end

---@param itemStyleId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetItemStyleMaterialLink(itemStyleId, linkStyle) end

---@param styleId number # esoui type: `integer`
---@return string styleName
function GetItemStyleName(styleId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetItemTotalCount(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemTraitType trait
function GetItemTrait(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemTraitTypeCategory itemTraitTypeCategory
function GetItemTraitCategory(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemTraitInformation itemTraitInformation
function GetItemTraitInformation(bagId, slotIndex) end

---@param itemLink string
---@return ItemTraitInformation itemTraitInformation
function GetItemTraitInformationFromItemLink(itemLink) end

---@param itemTraitType ItemTraitType
---@return ItemTraitTypeCategory itemTraitTypeCategory
function GetItemTraitTypeCategory(itemTraitType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemType itemType
---@return SpecializedItemType specializedItemType
function GetItemType(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number? id # esoui type: `id64:nilable`
function GetItemUniqueId(bagId, slotIndex) end

---@param furnitureId number # esoui type: `id64`
---@return number itemUniqueId # esoui type: `id64`
function GetItemUniqueIdFromFurnitureId(furnitureId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return ItemUseType itemUseType
function GetItemUseType(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return WeaponType weaponType
function GetItemWeaponType(bagId, slotIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param useShortDescription boolean # esoui type: `bool`
---@return string conditionText
---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
---@return boolean isFailCondition # esoui type: `bool`
---@return boolean isComplete # esoui type: `bool`
---@return boolean isCreditShared # esoui type: `bool`
---@return boolean isVisible # esoui type: `bool`
---@return QuestConditionType conditionType
function GetJournalQuestConditionInfo(journalQuestIndex, stepIndex, conditionIndex, useShortDescription) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param trackingLevel TrackingLevel
---@return number pinType # esoui type: `integer`
function GetJournalQuestConditionType(journalQuestIndex, stepIndex, conditionIndex, trackingLevel) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
---@return boolean isFailCondition # esoui type: `bool`
---@return boolean isComplete # esoui type: `bool`
---@return boolean isCreditShared # esoui type: `bool`
---@return boolean isVisible # esoui type: `bool`
function GetJournalQuestConditionValues(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return string goal
---@return string dialog
---@return string confirmComplete
---@return string declineComplete
---@return string backgroundText
---@return string journalStepText
function GetJournalQuestEnding(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return string questName
---@return string backgroundText
---@return string activeStepText
---@return number activeStepType # esoui type: `integer`
---@return string activeStepTrackerOverrideText
---@return boolean completed # esoui type: `bool`
---@return boolean tracked # esoui type: `bool`
---@return number questLevel # esoui type: `integer`
---@return boolean pushed # esoui type: `bool`
---@return number questType # esoui type: `integer`
---@return InstanceDisplayType instanceDisplayType
function GetJournalQuestInfo(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return InstanceDisplayType instanceDisplayType
function GetJournalQuestInstanceDisplayType(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return boolean completed # esoui type: `bool`
function GetJournalQuestIsComplete(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number level # esoui type: `integer`
function GetJournalQuestLevel(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return string zoneName
---@return string objectiveName
---@return number zoneIndex # esoui type: `luaindex`
---@return number poiIndex # esoui type: `luaindex`
function GetJournalQuestLocationInfo(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return string questName
function GetJournalQuestName(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@return number conditionCount # esoui type: `integer`
function GetJournalQuestNumConditions(journalQuestIndex, stepIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number count # esoui type: `integer`
function GetJournalQuestNumRewards(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number numSteps # esoui type: `integer`
function GetJournalQuestNumSteps(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return QuestRepeatableType repeatType
function GetJournalQuestRepeatType(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return number rewardCollectibleDefId # esoui type: `integer`
function GetJournalQuestRewardCollectibleId(journalQuestIndex, rewardIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return RewardType type
---@return string name
---@return number amount # esoui type: `integer`
---@return string iconFile # esoui type: `textureName`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return ItemDisplayQuality itemDisplayQuality
---@return RewardItemType itemType
function GetJournalQuestRewardInfo(journalQuestIndex, rewardIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return number rewardItemDefId # esoui type: `integer`
function GetJournalQuestRewardItemId(journalQuestIndex, rewardIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
function GetJournalQuestRewardSkillLine(journalQuestIndex, rewardIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number zoneIndex # esoui type: `luaindex`
function GetJournalQuestStartingZone(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@return string journalText
---@return QuestStepVisibility visibility
---@return QuestStepComparisonType comparisonType
---@return string trackerOverrideText
---@return number numConditions # esoui type: `integer`
function GetJournalQuestStepInfo(journalQuestIndex, stepIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return string caption
function GetJournalQuestTimerCaption(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number timerStart
---@return number timerEnd
---@return boolean isVisible # esoui type: `bool`
---@return boolean isPaused # esoui type: `bool`
function GetJournalQuestTimerInfo(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return QuestType type
function GetJournalQuestType(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number zoneId # esoui type: `integer`
function GetJournalQuestZoneStoryZoneId(journalQuestIndex) end

---@param keepId number # esoui type: `integer`
---@param bgContext BattlegroundQueryContextType
---@return boolean accessible # esoui type: `bool`
function GetKeepAccessible(keepId, bgContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number alliance # esoui type: `integer`
function GetKeepAlliance(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@return number objectiveId # esoui type: `integer`
function GetKeepArtifactObjectiveId(keepId) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number keepCaptureBonusPercent # esoui type: `integer`
function GetKeepCaptureBonusPercent(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number defensiveLevel # esoui type: `integer`
function GetKeepDefensiveLevel(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return KeepPieceDirectionalAccess directionalAccess
function GetKeepDirectionalAccess(keepId, battlegroundContext) end

---@return number? startKeepId # esoui type: `integer:nilable`
function GetKeepFastTravelInteraction() end

---@param keepId number # esoui type: `integer`
---@param bgContext BattlegroundQueryContextType
---@return boolean hasResources # esoui type: `bool`
function GetKeepHasResourcesForTravel(keepId, bgContext) end

---@param index number # esoui type: `luaindex`
---@return number keepId # esoui type: `integer`
---@return number battlegroundContext # esoui type: `integer`
function GetKeepKeysByIndex(index) end

---@param keepId number # esoui type: `integer`
---@return number maxLevel # esoui type: `integer`
function GetKeepMaxUpgradeLevel(keepId) end

---@param keepId number # esoui type: `integer`
---@return string keepName
function GetKeepName(keepId) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number pinType # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetKeepPinInfo(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number productionLevel # esoui type: `integer`
function GetKeepProductionLevel(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean canRecall # esoui type: `bool`
function GetKeepRecallAvailable(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@param level number # esoui type: `integer`
---@return number currentAmount # esoui type: `integer`
---@return number amountForNextLevel # esoui type: `integer`
---@return number upkeepPerMinute # esoui type: `integer`
function GetKeepResourceInfo(keepId, battlegroundContext, resourceType, level) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@return number resourceLevel # esoui type: `integer`
function GetKeepResourceLevel(keepId, battlegroundContext, resourceType) end

---@param keepId number # esoui type: `integer`
---@return KeepResourceType resourceType
function GetKeepResourceType(keepId) end

---@param index number # esoui type: `luaindex`
---@return number abilityId # esoui type: `integer`
function GetKeepScoreBonusAbilityId(index) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number capturedAtKeepId # esoui type: `integer`
function GetKeepThatHasCapturedThisArtifactScrollObjective(keepId, objectiveId, battlegroundContext) end

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return number keepAIndex # esoui type: `luaindex`
---@return number keepBIndex # esoui type: `luaindex`
function GetKeepTravelNetworkLinkEndpoints(linkIndex, bgContext) end

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return number linkType # esoui type: `integer`
---@return number linkOwner # esoui type: `integer`
---@return number restricedToAlliance # esoui type: `integer`
---@return number startX
---@return number startY
---@return number endX
---@return number endY
function GetKeepTravelNetworkLinkInfo(linkIndex, bgContext) end

---@param nodeIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return number keepId # esoui type: `integer`
---@return boolean accessible # esoui type: `bool`
---@return number normalizedX
---@return number normalizedY
function GetKeepTravelNetworkNodeInfo(nodeIndex, bgContext) end

---@param nodeIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return number keepId # esoui type: `integer`
function GetKeepTravelNetworkNodeKeepId(nodeIndex, bgContext) end

---@param nodeIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return number normalizedX
---@return number normalizedY
function GetKeepTravelNetworkNodePosition(nodeIndex, bgContext) end

---@param keepId number # esoui type: `integer`
---@return KeepType keepType
function GetKeepType(keepId) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean underAttack # esoui type: `bool`
function GetKeepUnderAttack(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return string upgradeName
---@return string upgradeDetails
---@return string upgradeIcon # esoui type: `textureName`
---@return boolean active # esoui type: `bool`
function GetKeepUpgradeDetails(keepId, battlegroundContext, resourceType, level, index) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradePath KeepUpgradePath
---@param level number # esoui type: `integer`
---@return number currentAmount # esoui type: `integer`
---@return number amountForNextLevel # esoui type: `integer`
---@return number upkeepPerMinute # esoui type: `integer`
function GetKeepUpgradeInfo(keepId, battlegroundContext, upgradePath, level) end

---@param resourceType KeepResourceType
---@return KeepUpgradeLine upgradeLine
function GetKeepUpgradeLineFromResourceType(resourceType) end

---@param upgradePath KeepUpgradePath
---@return KeepUpgradeLine upgradeLine
function GetKeepUpgradeLineFromUpgradePath(upgradePath) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradePath KeepUpgradePath
---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return string upgradeName
---@return string upgradeDetails
---@return string icon # esoui type: `textureName`
---@return boolean active # esoui type: `bool`
function GetKeepUpgradePathDetails(keepId, battlegroundContext, upgradePath, level, index) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradeLine KeepUpgradeLine
---@return number rate # esoui type: `integer`
function GetKeepUpgradeRate(keepId, battlegroundContext, upgradeLine) end

---@return string keyboardLayout
function GetKeyboardLayout() end

---@param level number # esoui type: `integer`
---@return string tipOverview
function GetKeyboardLevelUpTipDescription(level) end

---@param level number # esoui type: `integer`
---@return string tipOverview
function GetKeyboardLevelUpTipOverview(level) end

---NOTE! Uses variable returns...
---@param key KeyCode
---@return KeyCode keyChord
function GetKeyChordsFromSingleKey(key) end

---@param keyCode KeyCode
---@return string keyName
function GetKeyName(keyCode) end

---@param index number # esoui type: `luaindex`
---@return BattlegroundAlliance battlegroundAlliance
function GetKillingAttackerBattlegroundAlliance(index) end

---@param index number # esoui type: `luaindex`
---@return string attackerRawName
---@return number attackerChampionPoints # esoui type: `integer`
---@return number attackerLevel # esoui type: `integer`
---@return number attackerAvARank # esoui type: `integer`
---@return boolean isPlayer # esoui type: `bool`
---@return boolean isBoss # esoui type: `bool`
---@return Alliance alliance
---@return string minionName
---@return string attackerDisplayName
function GetKillingAttackerInfo(index) end

---@param index number # esoui type: `luaindex`
---@return string attackName
---@return number attackDamage # esoui type: `integer`
---@return string attackIcon # esoui type: `textureName`
---@return boolean wasKillingBlow # esoui type: `bool`
---@return number castTimeAgoMS # esoui type: `integer`
---@return number durationMS # esoui type: `integer`
---@return number numAttackHits # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
function GetKillingAttackInfo(index) end

---@param index number # esoui type: `luaindex`
---@return number pinType # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetKillLocationPinInfo(index) end

---@return number secondsRemaining # esoui type: `integer`
function GetKioskBidWindowSecondsRemaining() end

---@param guildId number # esoui type: `integer`
---@return number? bankedMoney # esoui type: `integer:nilable`
---@return number? existingBidAmount # esoui type: `integer:nilable`
---@return number? numTotalBids # esoui type: `integer:nilable`
---@return GuildKioskGuildInfoResult queryResult
function GetKioskGuildInfo(guildId) end

---@return number cost # esoui type: `integer`
function GetKioskPurchaseCost() end

---@param rank number # esoui type: `integer`
---@return string largeRankIcon # esoui type: `textureName`
function GetLargeAvARankIcon(rank) end

---@param resultIndex number # esoui type: `luaindex`
---@return CurrencyType currencyType
---@return number currencyAmount # esoui type: `integer`
function GetLastCraftingResultCurrencyInfo(resultIndex) end

---@param resultIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return ItemType itemType
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
---@return ItemUISoundCategory soundCategory
---@return number itemInstanceId # esoui type: `integer`
function GetLastCraftingResultItemInfo(resultIndex) end

---@param resultIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetLastCraftingResultItemLink(resultIndex, linkStyle) end

---@param resultIndex number # esoui type: `luaindex`
---@return string traitName
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetLastCraftingResultLearnedTraitInfo(resultIndex) end

---@param resultIndex number # esoui type: `luaindex`
---@return string translationName
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetLastCraftingResultLearnedTranslationInfo(resultIndex) end

---@return number totalInspiration # esoui type: `integer`
function GetLastCraftingResultTotalInspiration() end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return ObjectiveControlEvent controlEvent
function GetLastObjectiveControlEvent(keepId, objectiveId, battlegroundContext) end

---@return string itemLink
function GetLastSlottedItemLink() end

---@return number latencyMS # esoui type: `integer`
function GetLatency() end

---@param campaignId number # esoui type: `integer`
---@return number campaignSequenceId # esoui type: `integer`
function GetLeaderboardCampaignSequenceId(campaignId) end

---@param level number # esoui type: `integer`
---@return string background # esoui type: `textureName`
function GetLevelUpBackground(level) end

---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return string texture # esoui type: `textureName`
---@return number normalizedVelocityMin
---@return number normalizedVelocityMax
---@return number durationMinS
---@return number durationMaxS
---@return number particlesPerSecond # esoui type: `integer`
---@return number startScaleMin
---@return number startScaleMax
---@return number endScaleMin
---@return number endScaleMax
---@return number startAlpha
---@return number endAlpha
---@return number r
---@return number g
---@return number b
---@return number normalizedStartPoint1X
---@return number normalizedStartPoint1Y
---@return number normalizedStartPoint2X
---@return number normalizedStartPoint2Y
---@return number angleRadians
function GetLevelUpGuiParticleEffectInfo(level, index) end

---@param level number # esoui type: `integer`
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetLevelUpHelpIndicesForLevel(level) end

---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number animationId # esoui type: `integer`
function GetLevelUpTextureLayerRevealAnimation(level, index) end

---@param level number # esoui type: `integer`
---@return number minDurationMS # esoui type: `integer`
function GetLevelUpTextureLayerRevealAnimationsMinDuration(level) end

---@param rewardUIDataId number # esoui type: `integer`
---@return string descriptionOverride
function GetLFGActivityRewardDescriptionOverride(rewardUIDataId) end

---@param rewardUIDataId number # esoui type: `integer`
---@param nodeIndex number # esoui type: `luaindex`
---@return string displayName
---@return string icon # esoui type: `textureName`
---@return number textColorRed
---@return number textColorBlue
---@return number textColorGreen
function GetLFGActivityRewardUINodeInfo(rewardUIDataId, nodeIndex) end

---@param cooldownType LFGCooldownType
---@return number timeRemainingSeconds # esoui type: `integer`
function GetLFGCooldownTimeRemainingSeconds(cooldownType) end

---@return LFGActivity activityType
function GetLFGReadyCheckActivityType() end

---@return number tanksAccepted # esoui type: `integer`
---@return number tanksPending # esoui type: `integer`
---@return number healersAccepted # esoui type: `integer`
---@return number healersPending # esoui type: `integer`
---@return number dpsAccepted # esoui type: `integer`
---@return number dpsPending # esoui type: `integer`
function GetLFGReadyCheckCounts() end

---@return LFGActivity activityType
---@return LFGRole playerRole
---@return number timeRemainingSeconds # esoui type: `integer`
function GetLFGReadyCheckNotificationInfo() end

---@return number startTimeMs # esoui type: `integer`
---@return number estimatedCompletionTimeMs # esoui type: `integer`
function GetLFGSearchTimes() end

---@param itemLink string
---@return LinkType linkType
function GetLinkType(itemLink) end

---@return number? daedricArtifactId # esoui type: `integer:nilable`
function GetLocalPlayerDaedricArtifactId() end

---@return string? unitTag # esoui type: `string:nilable`
function GetLocalPlayerGroupUnitTag() end

---@return number hours # esoui type: `integer`
---@return number minutes # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetLocalTimeOfDay() end

---@param worldId number # esoui type: `integer`
---@return string worldName
function GetLocationName(worldId) end

---@return number defaultVibration
function GetLockpickingDefaultGamepadVibration() end

---@return number timeLeftMs # esoui type: `integer`
function GetLockpickingTimeLeft() end

---@return number lockQuality # esoui type: `integer`
function GetLockQuality() end

---@param lootId number # esoui type: `integer`
---@return number antiquityId # esoui type: `integer`
function GetLootAntiquityLeadId(lootId) end

---@param type CurrencyType
---@return number unownedCurrency # esoui type: `integer`
---@return number ownedCurrency # esoui type: `integer`
function GetLootCurrency(type) end

---@param lootIndex number # esoui type: `luaindex`
---@return number lootId # esoui type: `integer`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number count # esoui type: `integer`
---@return number quality # esoui type: `integer`
---@return number value # esoui type: `integer`
---@return boolean isQuest # esoui type: `bool`
---@return boolean stolen # esoui type: `bool`
---@return LootItemType lootType
function GetLootItemInfo(lootIndex) end

---@param lootId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetLootItemLink(lootId, linkStyle) end

---@param lootId number # esoui type: `integer`
---@return LootItemType itemType
function GetLootItemType(lootId) end

---@return number unownedMoney # esoui type: `integer`
---@return number ownedMoney # esoui type: `integer`
function GetLootMoney() end

---@param lootId number # esoui type: `integer`
---@return number questItemId # esoui type: `integer`
function GetLootQuestItemId(lootId) end

---@return string name
---@return InteractTargetType targetType
---@return string actionName
---@return boolean isOwned # esoui type: `bool`
function GetLootTargetInfo() end

---@param categoryId number # esoui type: `integer`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
function GetLoreBookCategoryIndexFromCategoryId(categoryId) end

---@param collectionId number # esoui type: `integer`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? collectionIndex # esoui type: `luaindex:nilable`
function GetLoreBookCollectionIndicesFromCollectionId(collectionId) end

---@param bookId number # esoui type: `integer`
---@return number? categoryIndex # esoui type: `luaindex:nilable`
---@return number? collectionIndex # esoui type: `luaindex:nilable`
---@return number? bookIndex # esoui type: `luaindex:nilable`
function GetLoreBookIndicesFromBookId(bookId) end

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@param bookIndex number # esoui type: `luaindex`
---@return string title
---@return string icon # esoui type: `textureName`
---@return boolean known # esoui type: `bool`
---@return number bookId # esoui type: `integer`
function GetLoreBookInfo(categoryIndex, collectionIndex, bookIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@param bookIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetLoreBookLink(categoryIndex, collectionIndex, bookIndex, linkStyle) end

---@param link string
---@return string title
function GetLoreBookTitleFromLink(link) end

---@param categoryIndex number # esoui type: `luaindex`
---@return string name
---@return number numCollections # esoui type: `integer`
---@return number categoryId # esoui type: `integer`
function GetLoreCategoryInfo(categoryIndex) end

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@return string name
---@return string description
---@return number numKnownBooks # esoui type: `integer`
---@return number totalBooks # esoui type: `integer`
---@return boolean hidden # esoui type: `bool`
---@return string gamepadIcon # esoui type: `textureName`
---@return number collectionId # esoui type: `integer`
function GetLoreCollectionInfo(categoryIndex, collectionIndex) end

---@param mailId number # esoui type: `id64`
---@return number numAttachments # esoui type: `integer`
---@return number attachedMoney # esoui type: `integer`
---@return number codAmount # esoui type: `integer`
function GetMailAttachmentInfo(mailId) end

---@param mailId number # esoui type: `id64`
---@return boolean unread # esoui type: `bool`
---@return boolean returned # esoui type: `bool`
---@return boolean fromSystem # esoui type: `bool`
---@return boolean fromCustomerService # esoui type: `bool`
function GetMailFlags(mailId) end

---@param mailId number # esoui type: `id64`
---@return string senderDisplayName
---@return string senderCharacterName
---@return string subject
---@return string icon # esoui type: `textureName`
---@return boolean unread # esoui type: `bool`
---@return boolean fromSystem # esoui type: `bool`
---@return boolean fromCustomerService # esoui type: `bool`
---@return boolean returned # esoui type: `bool`
---@return number numAttachments # esoui type: `integer`
---@return number attachedMoney # esoui type: `integer`
---@return number codAmount # esoui type: `integer`
---@return number? expiresInDays # esoui type: `integer:nilable`
---@return number secsSinceReceived # esoui type: `integer`
function GetMailItemInfo(mailId) end

---@param attachmentSlot number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetMailQueuedAttachmentLink(attachmentSlot, linkStyle) end

---@param mailId number # esoui type: `id64`
---@return string senderDisplayName
---@return string senderCharacterName
function GetMailSender(mailId) end

---@return MapContentType mapContentType
function GetMapContentType() end

---@return number? customMaxZoom # esoui type: `number:nilable`
function GetMapCustomMaxZoom() end

---@return MapFilterType mapFilterType
function GetMapFilterType() end

---@return number currentFloor # esoui type: `luaindex`
---@return number numFloors # esoui type: `integer`
function GetMapFloorInfo() end

---@param mapIndex number # esoui type: `luaindex`
---@return number mapId # esoui type: `integer`
function GetMapIdByIndex(mapIndex) end

---@param zoneId number # esoui type: `integer`
---@return number mapId # esoui type: `integer`
function GetMapIdByZoneId(zoneId) end

---@param mapId number # esoui type: `integer`
---@return number? index # esoui type: `luaindex:nilable`
function GetMapIndexById(mapId) end

---@param zoneId number # esoui type: `integer`
---@return number? index # esoui type: `luaindex:nilable`
function GetMapIndexByZoneId(zoneId) end

---@param mapId number # esoui type: `integer`
---@return string name
---@return UIMapType mapType
---@return MapContentType mapContentType
---@return number zoneIndex # esoui type: `luaindex`
---@return string description
function GetMapInfoById(mapId) end

---@param index number # esoui type: `luaindex`
---@return string name
---@return UIMapType mapType
---@return MapContentType mapContentType
---@return number zoneIndex # esoui type: `luaindex`
---@return string description
function GetMapInfoByIndex(index) end

---@param sectionIndex number # esoui type: `luaindex`
---@return string sectionName
function GetMapKeySectionName(sectionIndex) end

---@param sectionIndex number # esoui type: `luaindex`
---@param symbolIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return string tooltip
function GetMapKeySectionSymbolInfo(sectionIndex, symbolIndex) end

---@param locationIndex number # esoui type: `luaindex`
---@return string icon
---@return number normalizedX
---@return number normalizedZ
function GetMapLocationIcon(locationIndex) end

---@param locationIndex number # esoui type: `luaindex`
---@return string header
function GetMapLocationTooltipHeader(locationIndex) end

---@param locationIndex number # esoui type: `luaindex`
---@param tooltipLineIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string name
---@return number grouping # esoui type: `integer`
---@return string categoryName
function GetMapLocationTooltipLineInfo(locationIndex, tooltipLineIndex) end

---@param normalizedMouseX number
---@param normalizedMouseY number
---@return string locationName
---@return string textureFile
---@return number textureWidthNormalized
---@return number textureHeightNormalized
---@return number textureXOffsetNormalized
---@return number textureYOffsetNormalized
function GetMapMouseoverInfo(normalizedMouseX, normalizedMouseY) end

---@return string mapName
function GetMapName() end

---@param mapId number # esoui type: `integer`
---@return string mapName
function GetMapNameById(mapId) end

---@param mapIndex number # esoui type: `luaindex`
---@return string mapName
function GetMapNameByIndex(mapIndex) end

---@return number numHorizontalTiles # esoui type: `integer`
---@return number numVerticalTiles # esoui type: `integer`
function GetMapNumTiles() end

---@param mapId number # esoui type: `integer`
---@return number numHorizontalTiles # esoui type: `integer`
---@return number numVerticalTiles # esoui type: `integer`
function GetMapNumTilesForMapId(mapId) end

---NOTE! Uses variable returns...
---@param index number # esoui type: `luaindex`
---@return string categoryName
---@return number categoryIndex # esoui type: `luaindex`
function GetMapParentCategories(index) end

---@param unitTag string
---@return number normalizedX
---@return number normalizedY
function GetMapPing(unitTag) end

---@param unitTag string
---@return number normalizedX
---@return number normalizedZ
---@return number heading
---@return boolean isShownInCurrentMap # esoui type: `bool`
function GetMapPlayerPosition(unitTag) end

---@return number normalizedX
---@return number normalizedY
function GetMapPlayerWaypoint() end

---@return number normalizedX
---@return number normalizedY
function GetMapRallyPoint() end

---@param tileIndex number # esoui type: `luaindex`
---@return string tileFilename
function GetMapTileTexture(tileIndex) end

---@param mapId number # esoui type: `integer`
---@param tileIndex number # esoui type: `luaindex`
---@return string tileFilename
function GetMapTileTextureForMapId(mapId, tileIndex) end

---@return UIMapType mapType
function GetMapType() end

---@return string completedDailyLoginRewardClaimsBackground # esoui type: `textureName`
function GetMarketAnnouncementCompletedDailyLoginRewardClaimsBackground() end

---@return string dailyLoginLockedAnnouncementBackground # esoui type: `textureName`
function GetMarketAnnouncementDailyLoginLockedBackground() end

---@param marketProductId number # esoui type: `integer`
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetMarketAnnouncementHelpLinkIndices(marketProductId) end

---@param currencyType CurrencyType
---@return MarketCurrencyType marketCurrencyType
function GetMarketCurrencyTypeFromCurrencyType(currencyType) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number announceSortOrder # esoui type: `integer`
function GetMarketProductAnnounceSortOrder(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean hidesChildProducts # esoui type: `bool`
function GetMarketProductBundleHidesChildProducts(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@return string name
---@return number numSubCatgories # esoui type: `integer`
---@return number numMarketProducts # esoui type: `integer`
---@return string normalIcon # esoui type: `textureName`
---@return string pressedIcon # esoui type: `textureName`
---@return string mouseoverIcon # esoui type: `textureName`
function GetMarketProductCategoryInfo(displayGroup, topLevelIndex) end

---@param marketProductId number # esoui type: `integer`
---@return number chapterUpgradeId # esoui type: `integer`
function GetMarketProductChapterUpgradeId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param childIndex number # esoui type: `luaindex`
---@return number childId # esoui type: `integer`
function GetMarketProductChildId(marketProductId, childIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return string noticeText
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetMarketProductClaimGiftNoticeInfo(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetMarketProductCollectibleId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
---@return string iconFile # esoui type: `textureName`
---@return string name
---@return CollectibleCategoryType collectibleType
---@return string description
---@return boolean owned # esoui type: `bool`
---@return boolean isPurchasable # esoui type: `bool`
---@return string hint
function GetMarketProductCollectibleInfo(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number errorStringId # esoui type: `integer`
function GetMarketProductCompleteErrorStringId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number crateId # esoui type: `integer`
function GetMarketProductCrownCrateId(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@return string rewardName
---@return string rewardTypeText
---@return string cardFaceImage # esoui type: `textureName`
---@return string cardFaceFrameAccentImage # esoui type: `textureName`
---@return number stackCount # esoui type: `integer`
function GetMarketProductCrownCrateRewardInfo(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@return number crownCrateTierId # esoui type: `integer`
function GetMarketProductCrownCrateTierId(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@return CurrencyType currencyType
function GetMarketProductCurrencyType(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return string description
function GetMarketProductDescription(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@return string displayName
function GetMarketProductDisplayName(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return ItemDisplayQuality itemDisplayQuality
function GetMarketProductDisplayQuality(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---NOTE! Uses variable returns...
---@param marketProductId number # esoui type: `integer`
---@return number errorStringId # esoui type: `integer`
function GetMarketProductEligibilityErrorStringIds(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return string endTimeString
function GetMarketProductEndTimeString(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number furnitureDataId # esoui type: `integer`
function GetMarketProductFurnitureDataId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number houseId # esoui type: `integer`
function GetMarketProductHouseId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number houseTemplateId # esoui type: `integer`
function GetMarketProductHouseTemplateId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetMarketProductIcon(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return string name
---@return string description
---@return string icon # esoui type: `textureName`
---@return boolean isNew # esoui type: `bool`
---@return boolean isFeatured # esoui type: `bool`
function GetMarketProductInfo(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number instantUnlockId # esoui type: `integer`
function GetMarketProductInstantUnlockId(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return InstantUnlockRewardType instantUnlock
function GetMarketProductInstantUnlockType(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number itemId # esoui type: `integer`
---@return string iconFile # esoui type: `textureName`
---@return string name
---@return ItemDisplayQuality itemDisplayQuality
---@return number requiredLevel # esoui type: `integer`
---@return number itemCount # esoui type: `integer`
function GetMarketProductItemInfo(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param linkStyle LinkStyle
---@return string link
function GetMarketProductItemLink(marketProductId, linkStyle) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number timeLeftSeconds
function GetMarketProductLTOTimeLeftInSeconds(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number numBundledProducts # esoui type: `integer`
function GetMarketProductNumBundledProducts(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number numChildren # esoui type: `integer`
function GetMarketProductNumChildren(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number numCollectibles # esoui type: `integer`
function GetMarketProductNumCollectibles(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return OpenMarketBehavior openBehavior
function GetMarketProductOpenMarketBehavior(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number openToMarketProductId # esoui type: `integer`
function GetMarketProductOpenMarketBehaviorReferenceData(marketProductId) end

---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param marketProductIndex number # esoui type: `luaindex`
---@return number marketProductId # esoui type: `integer`
---@return number presentationIndex # esoui type: `luaindex`
function GetMarketProductPresentationIds(displayGroup, topLevelIndex, categoryIndex, marketProductIndex) end

---@param marketProductId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetMarketProductPreviewVariationDisplayName(marketProductId, variation) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return MarketCurrencyType currencyType
---@return number? cost # esoui type: `integer:nilable`
---@return number? costAfterDiscount # esoui type: `integer:nilable`
---@return number discountPercent # esoui type: `integer`
---@return number? esoPlusCost # esoui type: `integer:nilable`
function GetMarketProductPricingByPresentation(marketProductId, presentationIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number timeLeftSeconds
function GetMarketProductSaleTimeLeftInSeconds(marketProductId) end

---NOTE! Uses variable returns...
---@param itemId number # esoui type: `integer`
---@param onlyActiveListings boolean # esoui type: `bool`
---@return number marketProductId # esoui type: `integer`
function GetMarketProductsForItem(itemId, onlyActiveListings) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number stackCount # esoui type: `integer`
function GetMarketProductStackCount(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex number # esoui type: `luaindex`
---@return string name
---@return number numMarketProducts # esoui type: `integer`
---@return boolean showGemIcon # esoui type: `bool`
function GetMarketProductSubCategoryInfo(displayGroup, topLevelIndex, subCategoryIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return MarketProductType productType
function GetMarketProductType(marketProductId) end

---@param marketProductId number # esoui type: `integer`
---@return number achievementId # esoui type: `integer`
---@return boolean hasCompletedAchievement # esoui type: `bool`
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetMarketProductUnlockedByAchievementInfo(marketProductId) end

---@param notificationIndex number # esoui type: `luaindex`
---@return number marketProductId # esoui type: `integer`
function GetMarketProductUnlockNotificationProductId(notificationIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
---@return MarketState marketState
function GetMarketState(displayGroup) end

---@param taskId number # esoui type: `integer`
---@param resultIndex number # esoui type: `luaindex`
---@return string itemName
---@return number itemNameHash # esoui type: `integer`
function GetMatchTradingHouseItemNamesResult(taskId, resultIndex) end

---@return number maxBackpackUpgrade # esoui type: `integer`
function GetMaxBackpackUpgrade() end

---@return number maxBags # esoui type: `integer`
function GetMaxBags() end

---@return number maxBankUpgrade # esoui type: `integer`
function GetMaxBankUpgrade() end

---@return number maxNumBindings # esoui type: `integer`
function GetMaxBindingsPerAction() end

---@return number maxCharacterSlotsUpgrade # esoui type: `integer`
function GetMaxCharacterSlotsUpgrade() end

---@param currencyType CurrencyType
---@param fromLocation CurrencyLocation
---@param toLocation CurrencyLocation
---@return number maxTransfer # esoui type: `integer`
function GetMaxCurrencyTransfer(currencyType, fromLocation, toLocation) end

---@return number maxRapport # esoui type: `integer`
function GetMaximumRapport() end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@return number numIterations # esoui type: `integer`
---@return TradeskillResult limitReason
function GetMaxIterationsPossibleForAlchemyItem(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex) end

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@return number numIterations # esoui type: `integer`
---@return TradeskillResult limitReason
function GetMaxIterationsPossibleForEnchantingItem(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return number maxIterations # esoui type: `integer`
---@return TradeskillResult limitReason
function GetMaxIterationsPossibleForRecipe(recipeListIndex, recipeIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param itemStyleId number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@param useUniversalStyleItem boolean # esoui type: `bool`
---@return number numIterations # esoui type: `integer`
---@return TradeskillResult limitReason
function GetMaxIterationsPossibleForSmithingItem(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, useUniversalStyleItem) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number maxNPC # esoui type: `integer`
function GetMaxKeepNPCs(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number maxSiege # esoui type: `integer`
function GetMaxKeepSieges(keepId, battlegroundContext) end

---@return number maxBidsPerGuild # esoui type: `integer`
function GetMaxKioskBidsPerGuild() end

---@return number maxLevel # esoui type: `integer`
function GetMaxLevel() end

---@return number maxMail # esoui type: `integer`
function GetMaxMailItems() end

---@param currencyType CurrencyType
---@param currencyLocation CurrencyLocation
---@return number max # esoui type: `integer`
function GetMaxPossibleCurrency(currencyType, currencyLocation) end

---@return number maxPossiblePoints # esoui type: `integer`
function GetMaxPossiblePointsInChampionSkill() end

---@return number maxIngredients # esoui type: `integer`
function GetMaxRecipeIngredients() end

---@param trainTypeIndex RidingTrainType
---@return number maxValue # esoui type: `integer`
function GetMaxRidingTraining(trainTypeIndex) end

---@param craftingSkillType TradeskillType
---@return number maxSimultaneousResearch # esoui type: `integer`
function GetMaxSimultaneousSmithingResearch(craftingSkillType) end

---@return number maxSpendableChampionPointsInAttribute # esoui type: `integer`
function GetMaxSpendableChampionPointsInAttribute() end

---@param filterType TradingHouseFilterType
---@return number maxReturns # esoui type: `integer`
function GetMaxTradingHouseFilterExactTerms(filterType) end

---@return number maxTraits # esoui type: `integer`
function GetMaxTraits() end

---@param medalId number # esoui type: `integer`
---@return string name
---@return string iconTexture # esoui type: `textureName`
---@return string condition
---@return number scoreReward # esoui type: `integer`
function GetMedalInfo(medalId) end

---@param medalId number # esoui type: `integer`
---@return string name
function GetMedalName(medalId) end

---@param medalId number # esoui type: `integer`
---@return number scoreReward # esoui type: `integer`
function GetMedalScoreReward(medalId) end

---@return number minRapport # esoui type: `integer`
function GetMinimumRapport() end

---@return number minLetters # esoui type: `integer`
function GetMinLettersInTradingHouseItemNameForCurrentLanguage() end

---@return number minLevelForCampaignTutorial # esoui type: `integer`
function GetMinLevelForCampaignTutorial() end

---@return number minEscorts # esoui type: `integer`
---@return number maxEscorts # esoui type: `integer`
function GetMinMaxRamEscorts() end

---@return number moragTongStyleId # esoui type: `integer`
function GetMoragTongStyleId() end

---@return GamepadType mostRecentGamepadType
function GetMostRecentGamepadType() end

---@return number skinId # esoui type: `integer`
function GetMountSkinId() end

---@param key KeyCode
---@return string? mouseIcon # esoui type: `string:nilable`
---@return number? width # esoui type: `integer:nilable`
---@return number? height # esoui type: `integer:nilable`
function GetMouseIconPathForKeyCode(key) end

---@return DiggingActiveSkills diggingActiveSkill
function GetMouseOverDiggingActiveSkill() end

---@return string name
function GetNameOfGameCameraQuestToolTarget() end

---@return string fontName
---@return FontStyle fontStyle
function GetNameplateGamepadFont() end

---@return string fontName
---@return FontStyle fontStyle
function GetNameplateKeyboardFont() end

---@param considerType number # esoui type: `integer`
---@return boolean foundValidCondition # esoui type: `bool`
---@return number journalQuestIndex # esoui type: `luaindex`
---@return number stepIndex # esoui type: `luaindex`
---@return number conditionIndex # esoui type: `luaindex`
function GetNearestQuestCondition(considerType) end

---@param achievementId number # esoui type: `integer`
---@return number nextAchievementId # esoui type: `integer`
function GetNextAchievementInLine(achievementId) end

---@param lastActiveEffectId? number # esoui type: `integer:nilable`
---@return number? nextActiveEffectId # esoui type: `integer:nilable`
function GetNextActiveArtificialEffectId(lastActiveEffectId) end

---@param lastAntiquityId? number # esoui type: `integer:nilable`
---@return number? nextAntiquityId # esoui type: `integer:nilable`
function GetNextAntiquityId(lastAntiquityId) end

---@return number cost # esoui type: `integer`
function GetNextBackpackUpgradePrice() end

---@return number cost # esoui type: `integer`
function GetNextBankUpgradePrice() end

---@param lastBattlegroundLeaderboardType BattlegroundLeaderboardType
---@return BattlegroundLeaderboardType nextBattlegroundLeaderboardType
function GetNextBattlegroundLeaderboardType(lastBattlegroundLeaderboardType) end

---@param lastQuestId? number # esoui type: `integer:nilable`
---@return number? nextQuestId # esoui type: `integer:nilable`
function GetNextCompletedQuestId(lastQuestId) end

---@param lastCollectibleId? number # esoui type: `integer:nilable`
---@return number? nextCollectibleId # esoui type: `integer:nilable`
function GetNextDirtyBlacklistCollectibleId(lastCollectibleId) end

---@param lastCollectibleId? number # esoui type: `integer:nilable`
---@return number? nextCollectibleId # esoui type: `integer:nilable`
function GetNextDirtyUnlockStateCollectibleId(lastCollectibleId) end

---@return number nextForwardCampRespawnTime # esoui type: `integer`
function GetNextForwardCampRespawnTime() end

---@param lastGiftId? number # esoui type: `id64:nilable`
---@return number? nextGiftId # esoui type: `id64:nilable`
function GetNextGiftId(lastGiftId) end

---@param lastSlotId? number # esoui type: `integer:nilable`
---@return number? nextSlotId # esoui type: `integer:nilable`
function GetNextGuildBankSlotId(lastSlotId) end

---@param lastItemSetId? number # esoui type: `integer:nilable`
---@return number? nextItemSetId # esoui type: `integer:nilable`
function GetNextItemSetCollectionId(lastItemSetId) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param requiredCraftingStationType TradeskillType
---@param lastRecipeIndex? number # esoui type: `luaindex:nilable`
---@return number? nextRecipeIndex # esoui type: `luaindex:nilable`
function GetNextKnownRecipeForCraftingStation(recipeListIndex, requiredCraftingStationType, lastRecipeIndex) end

---@return number? milestoneLevel # esoui type: `integer:nilable`
function GetNextLevelUpRewardMilestoneLevel() end

---@param lastMailId? number # esoui type: `id64:nilable`
---@return number? nextMailId # esoui type: `id64:nilable`
function GetNextMailId(lastMailId) end

---@param lastCrateId? number # esoui type: `integer:nilable`
---@return number? nextCrateId # esoui type: `integer:nilable`
function GetNextOwnedCrownCrateId(lastCrateId) end

---@param lastFurnitureId? number # esoui type: `id64:nilable`
---@return number? nextFurnitureId # esoui type: `id64:nilable`
function GetNextPathedHousingFurnitureId(lastFurnitureId) end

---@param lastFurnitureId? number # esoui type: `id64:nilable`
---@return number? nextFurnitureId # esoui type: `id64:nilable`
function GetNextPlacedHousingFurnitureId(lastFurnitureId) end

---@param slotIndex number # esoui type: `luaindex`
---@param lastMedalId? number # esoui type: `integer:nilable`
---@return number? nextMedalId # esoui type: `integer:nilable`
function GetNextScoreboardEntryMedalId(slotIndex, lastMedalId) end

---@param lastSlotId? number # esoui type: `integer:nilable`
---@return number? nextSlotId # esoui type: `integer:nilable`
function GetNextVirtualBagSlotId(lastSlotId) end

---@param lastWorldEventInstanceId? number # esoui type: `integer:nilable`
---@return number? nextWorldEventInstanceId # esoui type: `integer:nilable`
function GetNextWorldEventInstanceId(lastWorldEventInstanceId) end

---@param lastZoneId? number # esoui type: `integer:nilable`
---@return number? nextZoneId # esoui type: `integer:nilable`
function GetNextZoneStoryZoneId(lastZoneId) end

---@param nonCombatBonus NonCombatBonusType
---@return number bonusValue # esoui type: `integer`
function GetNonCombatBonus(nonCombatBonus) end

---@param tradeskillType TradeskillType
---@return NonCombatBonusType nonCombatBonusType
function GetNonCombatBonusLevelTypeForTradeskillType(tradeskillType) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityId number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedZ
---@return number normalizedRadius
---@return boolean isInCurrentMap # esoui type: `bool`
function GetNormalizedPositionForZoneStoryActivityId(zoneId, zoneCompletionType, activityId) end

---@param zoneId number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetNormalizedWorldPosition(zoneId, worldX, worldY, worldZ) end

---@return number num # esoui type: `integer`
function GetNumAbilities() end

---@param skillLineId number # esoui type: `integer`
---@return number numAbilities # esoui type: `integer`
function GetNumAbilitiesInCompanionSkillLine(skillLineId) end

---@return number numCategories # esoui type: `integer`
function GetNumAchievementCategories() end

---@return number numSearchResults # esoui type: `integer`
function GetNumAchievementsSearchResults() end

---@return number actionLayers # esoui type: `integer`
function GetNumActionLayers() end

---@return number numActiveActionLayers # esoui type: `integer`
function GetNumActiveActionLayers() end

---@param activity LFGActivity
---@return number count # esoui type: `integer`
function GetNumActivitiesByType(activity) end

---@return number numRequests # esoui type: `integer`
function GetNumActivityRequests() end

---@param activitySetId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetNumActivitySetActivities(activitySetId) end

---@param activity LFGActivity
---@return number count # esoui type: `integer`
function GetNumActivitySetsByType(activity) end

---@param level number # esoui type: `integer`
---@return number numAdditionalUnlocks # esoui type: `integer`
function GetNumAdditionalLevelUpUnlocks(level) end

---@return number numCategories # esoui type: `integer`
function GetNumAdvancedStatCategories() end

---@param antiquityId number # esoui type: `integer`
---@return number numRecovered # esoui type: `integer`
function GetNumAntiquitiesRecovered(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return number numDigSites # esoui type: `integer`
function GetNumAntiquityDigSites(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return number numLoreEntries # esoui type: `integer`
function GetNumAntiquityLoreEntries(antiquityId) end

---@param antiquityId number # esoui type: `integer`
---@return number numLoreEntriesAcquired # esoui type: `integer`
function GetNumAntiquityLoreEntriesAcquired(antiquityId) end

---@return number numSearchResults # esoui type: `integer`
function GetNumAntiquitySearchResults() end

---@param antiquitySetId number # esoui type: `integer`
---@return number numAntiquities # esoui type: `integer`
function GetNumAntiquitySetAntiquities(antiquitySetId) end

---@param alliance Alliance
---@param artifactType ObjectiveType
---@return number numBonuses # esoui type: `integer`
function GetNumArtifactScoreBonuses(alliance, artifactType) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return number numAssociatedAchievements # esoui type: `integer`
function GetNumAssociatedAchievementsForZoneCompletionType(zoneId, zoneCompletionType) end

---@return number numAttributes # esoui type: `integer`
function GetNumAttributes() end

---@return number numSkillBuilds # esoui type: `integer`
function GetNumAvailableSkillBuilds() end

---@param taskId number # esoui type: `integer`
---@return number numResults # esoui type: `integer`
function GetNumBackgroundListFilterResults(taskId) end

---@return number numSlots # esoui type: `integer`
function GetNumBackpackSlotsPerUpgrade() end

---@param bagId Bag
---@return number freeSlots # esoui type: `integer`
function GetNumBagFreeSlots(bagId) end

---@param bagId Bag
---@return number usedSlots # esoui type: `integer`
function GetNumBagUsedSlots(bagId) end

---@return number numSlots # esoui type: `integer`
function GetNumBankSlotsPerUpgrade() end

---@param battlegroundLeaderboardType BattlegroundLeaderboardType
---@return number numLeaderboardEntries # esoui type: `integer`
function GetNumBattlegroundLeaderboardEntries(battlegroundLeaderboardType) end

---@param battlegroundContext BattlegroundQueryContextType
---@return number num # esoui type: `integer`
function GetNumBattleStandards(battlegroundContext) end

---@param unitTag string
---@return number numBuffs # esoui type: `integer`
function GetNumBuffs(unitTag) end

---@return number numBuybackItems # esoui type: `integer`
function GetNumBuybackItems() end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@return number entryCount # esoui type: `integer`
function GetNumCampaignAllianceLeaderboardEntries(campaignId, alliance) end

---@param campaignId number # esoui type: `integer`
---@return number entryCount # esoui type: `integer`
function GetNumCampaignLeaderboardEntries(campaignId) end

---@return number entryCount # esoui type: `integer`
function GetNumCampaignQueueEntries() end

---@return number numRulesetTypes # esoui type: `integer`
function GetNumCampaignRulesetTypes() end

---@param raidIndex number # esoui type: `luaindex`
---@param classId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetNumChallengeLeaderboardEntries(raidIndex, classId) end

---@param classId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetNumChallengeOfTheWeekLeaderboardEntries(classId) end

---@return number numDisciplines # esoui type: `integer`
function GetNumChampionDisciplines() end

---@param disciplineIndex number # esoui type: `luaindex`
---@return number numSkills # esoui type: `integer`
function GetNumChampionDisciplineSkills(disciplineIndex) end

---@return number numLinks # esoui type: `integer`
function GetNumChampionLinksToPreallocate() end

---@return number numNodes # esoui type: `integer`
function GetNumChampionNodesToPreallocate() end

---@param championPointsEarned number # esoui type: `integer`
---@return number? maxExp # esoui type: `integer:nilable`
function GetNumChampionXPInChampionPoint(championPointsEarned) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetNumChapterBasicRewards(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetNumChapterPreOrderRewards(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetNumChapterPrePurchaseRewards(chapterUpgradeId) end

---@return number numCharacters # esoui type: `integer`
function GetNumCharacters() end

---@return number numSlots # esoui type: `integer`
function GetNumCharacterSlotsPerUpgrade() end

---@return number numCategories # esoui type: `integer`
function GetNumChatCategories() end

---@return number numContainers # esoui type: `integer`
function GetNumChatContainers() end

---@param chatContainerIndex number # esoui type: `luaindex`
---@return number numContainerTabs # esoui type: `integer`
function GetNumChatContainerTabs(chatContainerIndex) end

---@return number numClaimable # esoui type: `integer`
function GetNumClaimableDailyLoginRewardsInCurrentMonth() end

---@return number classCount # esoui type: `integer`
function GetNumClasses() end

---@param collectibleDefId number # esoui type: `integer`
---@return number numVariations # esoui type: `integer`
function GetNumCollectibleAsFurniturePreviewVariations(collectibleDefId) end

---@return number numCategories # esoui type: `integer`
function GetNumCollectibleCategories() end

---@return number count # esoui type: `integer`
function GetNumCollectibleNotifications() end

---@param collectibleDefId number # esoui type: `integer`
---@return number numVariations # esoui type: `integer`
function GetNumCollectiblePreviewVariations(collectibleDefId) end

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex? number # esoui type: `luaindex:nilable`
---@return number numCollectibles # esoui type: `integer`
function GetNumCollectiblesInCollectibleCategory(topLevelIndex, subCategoryIndex) end

---@return number numSearchResults # esoui type: `integer`
function GetNumCollectiblesSearchResults() end

---@param collectibleId number # esoui type: `integer`
---@return number numTags # esoui type: `integer`
function GetNumCollectibleTags(collectibleId) end

---@return number numCompanions # esoui type: `integer`
function GetNumCompanionsInGroup() end

---@param skillType SkillType
---@return number numSkillLines # esoui type: `integer`
function GetNumCompanionSkillLines(skillType) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return number numCompletedActivities # esoui type: `integer`
function GetNumCompletedZoneActivitiesForZoneCompletionType(zoneId, zoneCompletionType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number itemsRequired # esoui type: `integer`
---@return number gemsAwarded # esoui type: `integer`
function GetNumCrownGemsFromItemManualGemification(bagId, slotIndex) end

---@return number numBonusRewards # esoui type: `integer`
function GetNumCurrentCrownCrateBonusRewards() end

---@return number numPrimaryRewards # esoui type: `integer`
function GetNumCurrentCrownCratePrimaryRewards() end

---@return number numRewards # esoui type: `integer`
function GetNumCurrentCrownCrateTotalRewards() end

---@param year number # esoui type: `integer`
---@param month number # esoui type: `integer`
---@return number numDays # esoui type: `integer`
function GetNumDaysInMonth(year, month) end

---@return number numHints # esoui type: `integer`
function GetNumDeathRecapHints() end

---@return number numQuickChats # esoui type: `integer`
function GetNumDefaultQuickChats() end

---@param inProgressAntiquityIndex number # esoui type: `luaindex`
---@return number numDigSitesForInProgressAntiquity # esoui type: `integer`
function GetNumDigSitesForInProgressAntiquity(inProgressAntiquityIndex) end

---@return number numDisplays # esoui type: `integer`
function GetNumDisplays() end

---@return number numDyes # esoui type: `integer`
function GetNumDyes() end

---@return number numSearchResults # esoui type: `integer`
function GetNumDyesSearchResults() end

---@return number numBonuses # esoui type: `integer`
function GetNumEdgeKeepBonuses() end

---@return number numEmotes # esoui type: `integer`
function GetNumEmotes() end

---@param level number # esoui type: `integer`
---@return number? numXP # esoui type: `integer:nilable`
function GetNumExperiencePointsInCompanionLevel(level) end

---@param level number # esoui type: `integer`
---@return number? numXP # esoui type: `integer:nilable`
function GetNumExperiencePointsInLevel(level) end

---@return number numFastTravelNodes # esoui type: `integer`
function GetNumFastTravelNodes() end

---@return number numLures # esoui type: `integer`
function GetNumFishingLures() end

---@param battlegroundContext BattlegroundQueryContextType
---@return number num # esoui type: `integer`
function GetNumForwardCamps(battlegroundContext) end

---@return number reassignCount # esoui type: `integer`
function GetNumFreeAnytimeCampaignReassigns() end

---@return number unassignCount # esoui type: `integer`
function GetNumFreeAnytimeCampaignUnassigns() end

---@return number reassignCount # esoui type: `integer`
function GetNumFreeEndCampaignReassigns() end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number numFriendlyNPC # esoui type: `integer`
function GetNumFriendlyKeepNPCs(keepId, battlegroundContext) end

---@return number numFriends # esoui type: `integer`
function GetNumFriends() end

---@return number numCategories # esoui type: `integer`
function GetNumFurnitureCategories() end

---@param categoryIndex number # esoui type: `luaindex`
---@return number numSubcategories # esoui type: `integer`
function GetNumFurnitureSubcategories(categoryIndex) end

---@param antiquityId number # esoui type: `integer`
---@return number numAchievedGoals # esoui type: `integer`
function GetNumGoalsAchievedForAntiquity(antiquityId) end

---@param guildId number # esoui type: `integer`
---@return number numBlacklistEntries # esoui type: `integer`
function GetNumGuildBlacklistEntries(guildId) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@return number numEvents # esoui type: `integer`
function GetNumGuildEvents(guildId, category) end

---@return number numCategories # esoui type: `integer`
function GetNumGuildHistoryCategories() end

---@param guildId number # esoui type: `integer`
---@return number numGuildInvitees # esoui type: `integer`
function GetNumGuildInvitees(guildId) end

---@return number numGuildInvites # esoui type: `integer`
function GetNumGuildInvites() end

---@param guildId number # esoui type: `integer`
---@return number numBids # esoui type: `integer`
function GetNumGuildKioskActiveBids(guildId) end

---@param guildId number # esoui type: `integer`
---@return number numGuildMembers # esoui type: `integer`
function GetNumGuildMembers(guildId) end

---@param privilege GuildPrivilege
---@return number numGuildMembers # esoui type: `integer`
function GetNumGuildMembersRequiredForPrivilege(privilege) end

---@param permission GuildPermission
---@return number numDependencies # esoui type: `integer`
function GetNumGuildPermissionDependencies(permission) end

---@param permission GuildPermission
---@return number numDependencies # esoui type: `integer`
function GetNumGuildPermissionRequisites(permission) end

---@return number numGuildRankIcons # esoui type: `integer`
function GetNumGuildRankIcons() end

---@param guildId number # esoui type: `integer`
---@return number numRanks # esoui type: `integer`
function GetNumGuildRanks(guildId) end

---@return number numGuilds # esoui type: `integer`
function GetNumGuilds() end

---@return number numItems # esoui type: `integer`
function GetNumGuildSpecificItems() end

---@return number numHelpCategories # esoui type: `integer`
function GetNumHelpCategories() end

---@param helpCategoryIndex number # esoui type: `luaindex`
---@return number numHelpEntries # esoui type: `integer`
function GetNumHelpEntriesWithinCategory(helpCategoryIndex) end

---@return number length # esoui type: `integer`
function GetNumHelpOverviewQuestionAnswers() end

---@return number numCategories # esoui type: `integer`
function GetNumHeraldryBackgroundCategories() end

---@param categoryIndex number # esoui type: `luaindex`
---@return number numStyles # esoui type: `integer`
function GetNumHeraldryBackgroundStyles(categoryIndex) end

---@return number numColors # esoui type: `integer`
function GetNumHeraldryColors() end

---@return number numCategories # esoui type: `integer`
function GetNumHeraldryCrestCategories() end

---@param categoryIndex number # esoui type: `luaindex`
---@return number numStyles # esoui type: `integer`
function GetNumHeraldryCrestStyles(categoryIndex) end

---@param voteCategory number # esoui type: `integer`
---@param houseCategory HouseCategoryType
---@return number numEntries # esoui type: `integer`
function GetNumHomeShowLeaderboardEntries(voteCategory, houseCategory) end

---@return number numVoteCategories # esoui type: `integer`
function GetNumHomeShowVoteCategories() end

---@param limitType HousingFurnishingLimitType
---@return number numFurnishingsPlaced # esoui type: `integer`
function GetNumHouseFurnishingsPlaced(limitType) end

---@param houseId number # esoui type: `integer`
---@return number numHouseTemplates # esoui type: `integer`
function GetNumHouseTemplatesForHouse(houseId) end

---@return number numCommands # esoui type: `integer`
function GetNumHousingEditorHistoryCommands() end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@return number numPermissions # esoui type: `integer`
function GetNumHousingPermissions(houseId, permissionCategory) end

---@return number numIgnored # esoui type: `integer`
function GetNumIgnored() end

---@return number numRequests # esoui type: `integer`
function GetNumIncomingFriendRequests() end

---@return number numInProgressAntiquities # esoui type: `integer`
function GetNumInProgressAntiquities() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number numVariations # esoui type: `integer`
function GetNumInventoryItemPreviewVariations(bagId, slotIndex) end

---@param rewardIndex number # esoui type: `luaindex`
---@return number numSlots # esoui type: `integer`
function GetNumInventorySlotsNeededForDailyLoginRewardInCurrentMonth(rewardIndex) end

---@param level number # esoui type: `integer`
---@return number numInventorySlotsNeeded # esoui type: `integer`
function GetNumInventorySlotsNeededForLevelUpReward(level) end

---@param itemLink string
---@return number numVariations # esoui type: `integer`
function GetNumItemLinkPreviewVariations(itemLink) end

---@return number numCurrencyOptions # esoui type: `integer`
function GetNumItemReconstructionCurrencyOptions() end

---@param itemSetId number # esoui type: `integer`
---@return number numPieces # esoui type: `integer`
function GetNumItemSetCollectionPieces(itemSetId) end

---@return number numSearchResults # esoui type: `integer`
function GetNumItemSetCollectionSearchResults() end

---@param itemSetId number # esoui type: `integer`
---@return number numSlotsUnlocked # esoui type: `integer`
function GetNumItemSetCollectionSlotsUnlocked(itemSetId) end

---@return number numQuests # esoui type: `integer`
function GetNumJournalQuests() end

---@return number numTypes # esoui type: `integer`
function GetNumKeepResourceTypes() end

---@return number numKeeps # esoui type: `integer`
function GetNumKeeps() end

---@return number numBonuses # esoui type: `integer`
function GetNumKeepScoreBonuses() end

---@param bgContext BattlegroundQueryContextType
---@return number numLinks # esoui type: `integer`
function GetNumKeepTravelNetworkLinks(bgContext) end

---@param bgContext BattlegroundQueryContextType
---@return number numNodes # esoui type: `integer`
function GetNumKeepTravelNetworkNodes(bgContext) end

---@return number numPaths # esoui type: `integer`
function GetNumKeepUpgradePaths() end

---@return number numKillingAttacks # esoui type: `integer`
function GetNumKillingAttacks() end

---@return number numLocations # esoui type: `integer`
function GetNumKillLocations() end

---@return number numCurrencies # esoui type: `integer`
function GetNumLastCraftingResultCurrencies() end

---@return number numItems # esoui type: `integer`
---@return boolean penaltyApplied # esoui type: `bool`
function GetNumLastCraftingResultItemsAndPenalty() end

---@return number numLearnedTraits # esoui type: `integer`
function GetNumLastCraftingResultLearnedTraits() end

---@return number numLearnedTranslations # esoui type: `integer`
function GetNumLastCraftingResultLearnedTranslations() end

---@param level number # esoui type: `integer`
---@return number numEffects # esoui type: `integer`
function GetNumLevelUpGuiParticleEffects(level) end

---@param level number # esoui type: `integer`
---@return number numAnimations # esoui type: `integer`
function GetNumLevelUpTextureLayerRevealAnimations(level) end

---@param rewardUIDataId number # esoui type: `integer`
---@return number numNodes # esoui type: `integer`
function GetNumLFGActivityRewardUINodes(rewardUIDataId) end

---@return number picksLeft # esoui type: `integer`
function GetNumLockpicksLeft() end

---@return number count # esoui type: `integer`
function GetNumLootItems() end

---@return number numTopCategories # esoui type: `integer`
function GetNumLoreCategories() end

---@return number numMail # esoui type: `integer`
function GetNumMailItems() end

---@return number numSections # esoui type: `integer`
function GetNumMapKeySections() end

---@param sectionIndex number # esoui type: `luaindex`
---@return number numSymbols # esoui type: `integer`
function GetNumMapKeySectionSymbols(sectionIndex) end

---@return number numMapLocations # esoui type: `integer`
function GetNumMapLocations() end

---@param locationIndex number # esoui type: `luaindex`
---@return number numLines # esoui type: `integer`
function GetNumMapLocationTooltipLines(locationIndex) end

---@return number numMaps # esoui type: `integer`
function GetNumMaps() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
---@return number numCategories # esoui type: `integer`
function GetNumMarketProductCategories(displayGroup) end

---@param marketProductId number # esoui type: `integer`
---@return number numVariations # esoui type: `integer`
function GetNumMarketProductPreviewVariations(marketProductId) end

---@return number numNotifications # esoui type: `integer`
function GetNumMarketProductUnlockNotifications() end

---@param taskId number # esoui type: `integer`
---@return number? numResults # esoui type: `integer:nilable`
function GetNumMatchTradingHouseItemNamesResults(taskId) end

---@return number num # esoui type: `integer`
function GetNumObjectives() end

---@param outfitStyleId number # esoui type: `integer`
---@return number numItemMaterials # esoui type: `integer`
function GetNumOutfitStyleItemMaterials(outfitStyleId) end

---@return number numRequests # esoui type: `integer`
function GetNumOutgoingFriendRequests() end

---@return number numOwnedCharacterSlots # esoui type: `integer`
function GetNumOwnedCharacterSlots() end

---@return number numCrownCrateTypes # esoui type: `integer`
function GetNumOwnedCrownCrateTypes() end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number numRanks # esoui type: `integer`
function GetNumPassiveSkillRanks(skillType, skillLineIndex, skillIndex) end

---@return number pendingFeedback # esoui type: `integer`
function GetNumPendingFeedback() end

---@param furnitureId number # esoui type: `id64`
---@return number numVariations # esoui type: `integer`
function GetNumPlacedFurniturePreviewVariations(furnitureId) end

---@return number numApplications # esoui type: `integer`
function GetNumPlayerApplicationNotifications() end

---@return number numPlayersEscorting # esoui type: `integer`
function GetNumPlayersEscortingRam() end

---@return number numStatuses # esoui type: `integer`
function GetNumPlayerStatuses() end

---@param rank number # esoui type: `integer`
---@return number numPointsRequired # esoui type: `integer`
function GetNumPointsNeededForAvARank(rank) end

---@param championSkillId number # esoui type: `integer`
---@return number numSpentPoints # esoui type: `integer`
function GetNumPointsSpentOnChampionSkill(championSkillId) end

---@param zoneIndex number # esoui type: `luaindex`
---@return number numPOIs # esoui type: `integer`
function GetNumPOIs(zoneIndex) end

---@param cadwellProgressionLevel CadwellProgressionLevel
---@param zoneIndex number # esoui type: `luaindex`
---@return number numPOIs # esoui type: `integer`
function GetNumPOIsForCadwellProgressionLevelAndZone(cadwellProgressionLevel, zoneIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return number numVariations # esoui type: `integer`
function GetNumProvisionerItemAsFurniturePreviewVariations(recipeListIndex, recipeIndex) end

---@param raidCategory RaidCategory
---@return number count # esoui type: `integer`
---@return boolean hasWeekly # esoui type: `bool`
function GetNumRaidLeaderboards(raidCategory) end

---@param notificationId number # esoui type: `integer`
---@return number numMembers # esoui type: `integer`
function GetNumRaidScoreNotificationMembers(notificationId) end

---@return number numNotifications # esoui type: `integer`
function GetNumRaidScoreNotifications() end

---@return number numRecipeLists # esoui type: `integer`
function GetNumRecipeLists() end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return number numTradeskillRequirements # esoui type: `integer`
function GetNumRecipeTradeskillRequirements(recipeListIndex, recipeIndex) end

---@param rewardListId number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetNumRewardListEntries(rewardListId) end

---@param rewardId number # esoui type: `integer`
---@return number numVariations # esoui type: `integer`
function GetNumRewardPreviewVariations(rewardId) end

---@param level number # esoui type: `integer`
---@return number numRewards # esoui type: `integer`
function GetNumRewardsForLevel(level) end

---@return number numEntries # esoui type: `integer`
function GetNumRewardsInCurrentDailyLoginMonth() end

---@return number numSavedDyeSets # esoui type: `integer`
function GetNumSavedDyeSets() end

---@return number numItems # esoui type: `integer`
function GetNumScoreboardEntries() end

---@return number eventCount # esoui type: `integer`
function GetNumScriptedEventInvites() end

---@param SCTCloudId number # esoui type: `integer`
function GetNumSCTCloudOffsets(SCTCloudId) end

---@return number numSlots # esoui type: `integer`
function GetNumSCTSlots() end

---@param campaignIndex number # esoui type: `luaindex`
---@return number numFriends # esoui type: `integer`
function GetNumSelectionCampaignFriends(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return number numGroupmates # esoui type: `integer`
function GetNumSelectionCampaignGroupMembers(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return number numGuilds # esoui type: `integer`
function GetNumSelectionCampaignGuildMembers(campaignIndex) end

---@return number campaignCount # esoui type: `integer`
function GetNumSelectionCampaigns() end

---@param tokenType ServiceTokenType
---@return number numTokens # esoui type: `integer`
function GetNumServiceTokens(tokenType) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param alliance number # esoui type: `integer`
---@return number numSieges # esoui type: `integer`
function GetNumSieges(keepId, battlegroundContext, alliance) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number numAbilities # esoui type: `integer`
function GetNumSkillAbilities(skillType, skillLineIndex) end

---@param skillBuildId number # esoui type: `integer`
---@return number numSkillBuilds # esoui type: `integer`
function GetNumSkillBuildAbilities(skillBuildId) end

---@param skillType SkillType
---@return number numSkillLines # esoui type: `integer`
function GetNumSkillLines(skillType) end

---@return number numSkillTypes # esoui type: `integer`
function GetNumSkillTypes() end

---@return number numShards # esoui type: `integer`
function GetNumSkyShards() end

---@return number numImprovementItems # esoui type: `integer`
function GetNumSmithingImprovementItems() end

---@return number smithingPatterns # esoui type: `integer`
function GetNumSmithingPatterns() end

---@param craftingSkillType TradeskillType
---@return number numLines # esoui type: `integer`
function GetNumSmithingResearchLines(craftingSkillType) end

---@return number numTraitItems # esoui type: `integer`
function GetNumSmithingTraitItems() end

---@param disciplineId number # esoui type: `integer`
---@return number numSpentPoints # esoui type: `integer`
function GetNumSpentChampionPoints(disciplineId) end

---@return number numStats # esoui type: `integer`
function GetNumStats() end

---@param entryIndex number # esoui type: `luaindex`
---@return number numVariations # esoui type: `integer`
function GetNumStoreEntryPreviewVariations(entryIndex) end

---@return number numItems # esoui type: `integer`
function GetNumStoreItems() end

---@param topLevelIndex number # esoui type: `luaindex`
---@return number numSubcategories # esoui type: `integer`
function GetNumSubcategoriesInCollectibleCategory(topLevelIndex) end

---@return number telvarStonesLost # esoui type: `integer`
function GetNumTelvarStonesLost() end

---@return number numTimedActivities # esoui type: `integer`
function GetNumTimedActivities() end

---@param activityType TimedActivityType
---@return number numTimedActivities # esoui type: `integer`
function GetNumTimedActivitiesCompleted(activityType) end

---@param index number # esoui type: `luaindex`
---@return number numRewards # esoui type: `integer`
function GetNumTimedActivityRewards(index) end

---@return number titleCount # esoui type: `integer`
function GetNumTitles() end

---@return number numTracked # esoui type: `integer`
function GetNumTracked() end

---@return number numGuilds # esoui type: `integer`
function GetNumTradingHouseGuilds() end

---@return number numListings # esoui type: `integer`
function GetNumTradingHouseListings() end

---@param index number # esoui type: `luaindex`
---@return number numVariations # esoui type: `integer`
function GetNumTradingHouseSearchResultItemPreviewVariations(index) end

---@param raidIndex number # esoui type: `luaindex`
---@return number count # esoui type: `integer`
function GetNumTrialLeaderboardEntries(raidIndex) end

---@return number count # esoui type: `integer`
function GetNumTrialOfTheWeekLeaderboardEntries() end

---@return number numTutorials # esoui type: `integer`
function GetNumTutorials() end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return number numUnblockedActivities # esoui type: `integer`
---@return number blockingBranchErrorStringId # esoui type: `integer`
function GetNumUnblockedZoneStoryActivitiesForZoneCompletionType(zoneId, zoneCompletionType) end

---@param actorCategory GameplayActorCategory
---@return number numOutfits # esoui type: `integer`
function GetNumUnlockedOutfits(actorCategory) end

---@return number numUnread # esoui type: `integer`
function GetNumUnreadMail() end

---@param disciplineId number # esoui type: `integer`
---@return number numUnspentPoints # esoui type: `integer`
function GetNumUnspentChampionPoints(disciplineId) end

---@return number numRecipes # esoui type: `integer`
function GetNumUpdatedRecipes() end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradePath KeepUpgradePath
---@param level number # esoui type: `integer`
---@return number numUpgrades # esoui type: `integer`
function GetNumUpgradesForKeepAtPathLevel(keepId, battlegroundContext, upgradePath, level) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@param level number # esoui type: `integer`
---@return number numUpgrades # esoui type: `integer`
function GetNumUpgradesForKeepAtResourceLevel(keepId, battlegroundContext, resourceType, level) end

---@return number numValidItemStyles # esoui type: `integer`
function GetNumValidItemStyles() end

---@return number numViewableMaps # esoui type: `integer`
function GetNumViewableTreasureMaps() end

---@param worldEventInstanceId number # esoui type: `integer`
---@return number numUnits # esoui type: `integer`
function GetNumWorldEventInstanceUnits(worldEventInstanceId) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return number numActivities # esoui type: `integer`
function GetNumZoneActivitiesForZoneCompletionType(zoneId, zoneCompletionType) end

---@return number numZones # esoui type: `integer`
function GetNumZones() end

---@param cadwellProgressionLevel CadwellProgressionLevel
---@return number numZones # esoui type: `integer`
function GetNumZonesForCadwellProgressionLevel(cadwellProgressionLevel) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return MapDisplayPinType pinType
---@return number red
---@return number green
---@return number blue
function GetObjectiveAuraPinInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return ObjectiveControlState controlState
function GetObjectiveControlState(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return ObjectiveDesignation designation
function GetObjectiveDesignation(keepId, objectiveId, battlegroundContext) end

---@param index number # esoui type: `luaindex`
---@return number keepId # esoui type: `integer`
---@return number objectiveId # esoui type: `integer`
---@return BattlegroundQueryContextType battlegroundContext
function GetObjectiveIdsForIndex(index) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return string objectiveName
---@return ObjectiveType objectiveType
---@return ObjectiveControlState objectiveState
function GetObjectiveInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return MapDisplayPinType pinType
---@return number currentNormalizedX
---@return number currentNormalizedY
---@return boolean continuousUpdate # esoui type: `bool`
function GetObjectivePinInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return MapDisplayPinType pinType
---@return number returnNormalizedX
---@return number returnNormalizedY
---@return boolean continuousUpdate # esoui type: `bool`
function GetObjectiveReturnPinInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return MapDisplayPinType pinType
---@return number spawnNormalizedX
---@return number spawnNormalizedY
function GetObjectiveSpawnPinInfo(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return ObjectiveType objectiveType
function GetObjectiveType(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number virtualId # esoui type: `integer`
function GetObjectiveVirtualId(keepId, objectiveId, battlegroundContext) end

---@return string dialogue
---@return string response
function GetOfferedQuestInfo() end

---NOTE! Uses variable returns...
---@return number questId # esoui type: `integer`
function GetOfferedQuestShareIds() end

---@param questId number # esoui type: `integer`
---@return string questName
---@return string characterName
---@return number millisecondsSinceRequest # esoui type: `integer`
---@return string displayName
function GetOfferedQuestShareInfo(questId) end

---@return number? crateId # esoui type: `integer:nilable`
function GetOnSaleCrownCrateId() end

---@return number openingCinematicVideoDataId # esoui type: `integer`
function GetOpeningCinematicVideoDataId() end

---@return number flatCostStyleStones # esoui type: `integer`
function GetOutfitChangeFlatCost() end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@return string name
function GetOutfitName(actorCategory, outfitIndex) end

---@param outfitSlot OutfitSlot
---@return number cost # esoui type: `integer`
function GetOutfitSlotClearCost(outfitSlot) end

---@param outfitSlot OutfitSlot
---@return number collectibleCategoryId # esoui type: `integer`
function GetOutfitSlotDataCollectibleCategoryId(outfitSlot) end

---@param outfitSlot OutfitSlot
---@return number collectibleId # esoui type: `integer`
function GetOutfitSlotDataHiddenOutfitStyleCollectibleId(outfitSlot) end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param outfitSlot OutfitSlot
---@return number collectibleId # esoui type: `integer`
---@return number? itemMaterialIndex # esoui type: `luaindex:nilable`
---@return number primaryDyeId # esoui type: `integer`
---@return number secondaryDyeId # esoui type: `integer`
---@return number accentDyeId # esoui type: `integer`
function GetOutfitSlotInfo(actorCategory, outfitIndex, outfitSlot) end

---@param outfitSlot OutfitSlot
---@return number collectibleDefId # esoui type: `integer`
---@return number? itemMaterialIndex # esoui type: `luaindex:nilable`
---@return number primaryDyeDefId # esoui type: `integer`
---@return number secondaryDyeDefId # esoui type: `integer`
---@return number accentDyeDefId # esoui type: `integer`
function GetOutfitSlotInfoForOutfitSlotInPreviewCollection(outfitSlot) end

---@param actorCategory GameplayActorCategory
---@return OutfitSlot mainHandOutfitSlot
---@return OutfitSlot offHandOutfitSlot
function GetOutfitSlotsForCurrentlyHeldWeapons(actorCategory) end

---@param actorCategory GameplayActorCategory
---@return OutfitSlot mainHandOutfitSlot
---@return OutfitSlot offHandOutfitSlot
---@return OutfitSlot backupMainHandOutfitSlot
---@return OutfitSlot backupOffHandOutfitSlot
function GetOutfitSlotsForEquippedWeapons(actorCategory) end

---@param outfitStyleId number # esoui type: `integer`
---@return number goldCost # esoui type: `integer`
---@return boolean isFree # esoui type: `bool`
function GetOutfitStyleCost(outfitStyleId) end

---@param outfitStyleId number # esoui type: `integer`
---@return number? freeConversionCollectibleId # esoui type: `integer:nilable`
function GetOutfitStyleFreeConversionCollectibleId(outfitStyleId) end

---@param outfitStyleId number # esoui type: `integer`
---@param itemMaterialIndex number # esoui type: `luaindex`
---@return string materialName
function GetOutfitStyleItemMaterialName(outfitStyleId, itemMaterialIndex) end

---@param outfitStyleId number # esoui type: `integer`
---@return number itemStyleId # esoui type: `integer`
function GetOutfitStyleItemStyleId(outfitStyleId) end

---@param outfitStyleId number # esoui type: `integer`
---@return VisualArmorType visualArmorType
function GetOutfitStyleVisualArmorType(outfitStyleId) end

---@param outfitStyleId number # esoui type: `integer`
---@return WeaponModelType weaponModelType
function GetOutfitStyleWeaponModelType(outfitStyleId) end

---@param index number # esoui type: `luaindex`
---@return string displayName
---@return number secsSinceRequest # esoui type: `integer`
---@return string note
function GetOutgoingFriendRequestInfo(index) end

---@return OverrideMusicMode overrideMusicMode
function GetOverrideMusicMode() end

---@return number offsetX # esoui type: `integer`
---@return number offsetY # esoui type: `integer`
---@return number offsetWidth # esoui type: `integer`
---@return number offsetHeight # esoui type: `integer`
function GetOverscanOffsets() end

---@param zoneId number # esoui type: `integer`
---@return number parentZoneId # esoui type: `integer`
function GetParentZoneId(zoneId) end

---@return number campaignId # esoui type: `integer`
function GetPendingAssignedCampaign() end

---@return number pendingCompanionId # esoui type: `integer`
function GetPendingCompanionDefId() end

---@return number pendingCost # esoui type: `integer`
function GetPendingHeraldryCost() end

---@return number backgroundCategoryIndex # esoui type: `luaindex`
---@return number backgroundStyleIndex # esoui type: `luaindex`
---@return number backgroundPrimaryColorIndex # esoui type: `luaindex`
---@return number backgroundSecondaryColorIndex # esoui type: `luaindex`
---@return number crestCategoryIndex # esoui type: `luaindex`
---@return number crestStyleIndex # esoui type: `luaindex`
---@return number crestColorIndex # esoui type: `luaindex`
function GetPendingHeraldryIndices() end

---@return Bag bag
---@return number slot # esoui type: `integer`
---@return number quantity # esoui type: `integer`
function GetPendingItemPost() end

---@return number? level # esoui type: `integer:nilable`
function GetPendingLevelUpRewardLevel() end

---@return string casterName
---@return number timeLeft # esoui type: `integer`
---@return string casterDisplayName
function GetPendingResurrectInfo() end

---@return string itemLink
function GetPendingSkillRespecScrollItemLink() end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlotType number # esoui type: `integer`
---@return number primaryDyeId # esoui type: `integer`
---@return number secondaryDyeId # esoui type: `integer`
---@return number accentDyeId # esoui type: `integer`
function GetPendingSlotDyes(restyleMode, restyleSetIndex, restyleSlotType) end

---NOTE! Uses variable returns...
---@param furnitureId number # esoui type: `id64`
---@return number childFurnitureId # esoui type: `id64`
function GetPlacedFurnitureChildren(furnitureId) end

---@param placedFurnitureId number # esoui type: `id64`
---@param linkStyle LinkStyle
---@return string itemLink
---@return string collectibleLink
function GetPlacedFurnitureLink(placedFurnitureId, linkStyle) end

---@param furnitureId number # esoui type: `id64`
---@return number? parentFurnitureId # esoui type: `id64:nilable`
function GetPlacedFurnitureParent(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetPlacedFurniturePreviewVariationDisplayName(furnitureId, variation) end

---@param furnitureId number # esoui type: `id64`
---@return number currentObjectStateIndex # esoui type: `integer`
function GetPlacedHousingFurnitureCurrentObjectStateIndex(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return ItemDisplayQuality displayQuality
function GetPlacedHousingFurnitureDisplayQuality(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number furnitureDataId # esoui type: `integer`
function GetPlacedHousingFurnitureInfo(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number numStates # esoui type: `integer`
function GetPlacedHousingFurnitureNumObjectStates(furnitureId) end

---@return PlatformServiceType platformServiceType
function GetPlatformServiceType() end

---@return string subzoneName
function GetPlayerActiveSubzoneName() end

---@return string zoneName
function GetPlayerActiveZoneName() end

---@param index number # esoui type: `luaindex`
---@return string declineReason
---@return string guildName
---@return Alliance alliance
---@return GuildApplicationStatus applicationStatus
function GetPlayerApplicationNotificationInfo(index) end

---@return number heading
function GetPlayerCameraHeading() end

---@param campaignId number # esoui type: `integer`
---@return number earnedTier # esoui type: `integer`
---@return number nextTierProgress # esoui type: `integer`
---@return number nextTierTotal # esoui type: `integer`
function GetPlayerCampaignRewardTierInfo(campaignId) end

---@return number points # esoui type: `integer`
function GetPlayerChampionPointsEarned() end

---@return number championExp # esoui type: `integer`
function GetPlayerChampionXP() end

---@param guildId number # esoui type: `integer`
---@return number memberIndex # esoui type: `luaindex`
function GetPlayerGuildMemberIndex(guildId) end

---@return number heat # esoui type: `integer`
---@return number bounty # esoui type: `integer`
function GetPlayerInfamyData() end

---@return string mapName
function GetPlayerLocationName() end

---@param type MarketCurrencyType
---@return number currencyAmount # esoui type: `integer`
function GetPlayerMarketCurrency(type) end

---@param raidCategory RaidCategory
---@return boolean isParticipating # esoui type: `bool`
---@return boolean isCredited # esoui type: `bool`
function GetPlayerRaidOfTheWeekParticipationInfo(raidCategory) end

---@param raidCategory RaidCategory
---@return boolean inProgress # esoui type: `bool`
---@return boolean complete # esoui type: `bool`
function GetPlayerRaidOfTheWeekProgressInfo(raidCategory) end

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return boolean isParticipating # esoui type: `bool`
---@return boolean isCredited # esoui type: `bool`
function GetPlayerRaidParticipationInfo(raidCategory, raidIndex) end

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return boolean inProgress # esoui type: `bool`
---@return boolean complete # esoui type: `bool`
function GetPlayerRaidProgressInfo(raidCategory, raidIndex) end

---@param derivedStat DerivedStats
---@param statBonusOption StatBonusOption
---@return number value # esoui type: `integer`
function GetPlayerStat(derivedStat, statBonusOption) end

---@return PlayerStatus status
function GetPlayerStatus() end

---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
---@return number rotationRadians
function GetPlayerWorldPositionInHouse() end

---@return string targetCharacterName
---@return number millisecondsSinceRequest # esoui type: `integer`
---@return boolean isSender # esoui type: `bool`
---@return string targetDisplayName
function GetPledgeOfMaraOfferInfo() end

---@param poiId number # esoui type: `integer`
---@return number zoneIndex # esoui type: `luaindex`
---@return number poiIndex # esoui type: `luaindex`
function GetPOIIndices(poiId) end

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return string objectiveName
---@return number objectiveLevel # esoui type: `integer`
---@return string startDescription
---@return string finishedDescription
function GetPOIInfo(zoneIndex, poiIndex) end

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return number normalizedX
---@return number normalizedZ
---@return MapDisplayPinType poiPinType
---@return string icon # esoui type: `textureName`
---@return boolean isShownInCurrentMap # esoui type: `bool`
---@return boolean linkedCollectibleIsLocked # esoui type: `bool`
---@return boolean isDiscovered # esoui type: `bool`
---@return boolean isNearby # esoui type: `bool`
function GetPOIMapInfo(zoneIndex, poiIndex) end

---@param poiId number # esoui type: `integer`
---@param checkNearby boolean # esoui type: `bool`
---@return string icon # esoui type: `textureName`
---@return MapDisplayPinType poiPinType
function GetPOIPinIcon(poiId, checkNearby) end

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return PointOfInterestType poiType
function GetPOIType(zoneIndex, poiIndex) end

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return number worldEventInstanceId # esoui type: `integer`
function GetPOIWorldEventInstanceId(zoneIndex, poiIndex) end

---@return boolean previewModeEnabled # esoui type: `bool`
function GetPreviewModeEnabled() end

---@param achievementId number # esoui type: `integer`
---@return number previousAchievementId # esoui type: `integer`
function GetPreviousAchievementInLine(achievementId) end

---@param progressionId number # esoui type: `integer`
---@return MorphSlot morphSlot
function GetProgressionSkillCurrentMorphSlot(progressionId) end

---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@return number abilityId # esoui type: `integer`
function GetProgressionSkillMorphSlotAbilityId(progressionId, morphSlot) end

---NOTE! Uses variable returns...
---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@return number abilityId # esoui type: `integer`
function GetProgressionSkillMorphSlotChainedAbilityIds(progressionId, morphSlot) end

---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@return number currentXP # esoui type: `integer`
function GetProgressionSkillMorphSlotCurrentXP(progressionId, morphSlot) end

---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@param rank number # esoui type: `integer`
---@return number startXP # esoui type: `integer`
---@return number endXP # esoui type: `integer`
function GetProgressionSkillMorphSlotRankXPExtents(progressionId, morphSlot, rank) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number progressionId # esoui type: `integer`
function GetProgressionSkillProgressionId(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number? progressionIndex # esoui type: `luaindex:nilable`
function GetProgressionSkillProgressionIndex(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return string progressionName
function GetProgressionSkillProgressionName(skillType, skillLineIndex, skillIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetProvisionerItemAsFurniturePreviewVariationDisplayName(recipeListIndex, recipeIndex, variation) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number itemId # esoui type: `integer`
---@return number materialItemId # esoui type: `integer`
---@return TradeskillType craftingType
---@return ItemQuality itemQuality
function GetQuestConditionItemInfo(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number? itemId # esoui type: `integer:nilable`
---@return number? materialItemId # esoui type: `integer:nilable`
---@return TradeskillType craftingType
---@return ItemQuality itemQuality
---@return number? itemTemplateId # esoui type: `integer:nilable`
---@return number? itemSetId # esoui type: `integer:nilable`
---@return ItemTraitType itemTraitType
---@return number? itemStyleId # esoui type: `integer:nilable`
---@return number? encodedAlchemyTraits # esoui type: `integer:nilable`
function GetQuestConditionMasterWritInfo(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number questItemId # esoui type: `integer`
function GetQuestConditionQuestItemId(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number remain # esoui type: `integer`
---@return number duration # esoui type: `integer`
function GetQuestItemCooldownInfo(journalQuestIndex, stepIndex, conditionIndex) end

---@param questItemId number # esoui type: `integer`
---@return string iconFilename # esoui type: `textureName`
function GetQuestItemIcon(questItemId) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return string iconFilename # esoui type: `textureName`
---@return number stackCount # esoui type: `integer`
---@return string name
---@return number questItemId # esoui type: `integer`
function GetQuestItemInfo(journalQuestIndex, stepIndex, conditionIndex) end

---@param aQuestIndex number # esoui type: `luaindex`
---@param aStepIndex number # esoui type: `luaindex`
---@param aConditionIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetQuestItemLink(aQuestIndex, aStepIndex, aConditionIndex, linkStyle) end

---@param questItemId number # esoui type: `integer`
---@return string itemName
function GetQuestItemName(questItemId) end

---@param link string
---@return string name
function GetQuestItemNameFromLink(link) end

---@param questItemId number # esoui type: `integer`
---@return string tooltipText
function GetQuestItemTooltipText(questItemId) end

---@param questId number # esoui type: `integer`
---@return string name
function GetQuestName(questId) end

---@param pinType MapDisplayPinType
---@param trackingLevel TrackingLevel
---@return MapDisplayPinType pinTypeForTrackingLevel
function GetQuestPinTypeForTrackingLevel(pinType, trackingLevel) end

---@param rewardIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetQuestRewardItemLink(rewardIndex, linkStyle) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return number remain # esoui type: `integer`
---@return number duration # esoui type: `integer`
function GetQuestToolCooldownInfo(journalQuestIndex, toolIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return number toolCount # esoui type: `integer`
function GetQuestToolCount(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return string iconFilename # esoui type: `textureName`
---@return number stackCount # esoui type: `integer`
---@return boolean isUsable # esoui type: `bool`
---@return string name
---@return number questItemId # esoui type: `integer`
function GetQuestToolInfo(journalQuestIndex, toolIndex) end

---@param aQuestIndex number # esoui type: `luaindex`
---@param aToolIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetQuestToolLink(aQuestIndex, aToolIndex, linkStyle) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return number questItemId # esoui type: `integer`
function GetQuestToolQuestItemId(journalQuestIndex, toolIndex) end

---@param questId number # esoui type: `integer`
---@return number zoneId # esoui type: `integer`
function GetQuestZoneId(questId) end

---@return number amount # esoui type: `integer`
function GetQueuedCOD() end

---@param attachmentSlot number # esoui type: `luaindex`
---@return Bag bagId
---@return number slotIndex # esoui type: `integer`
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
function GetQueuedItemAttachmentInfo(attachmentSlot) end

---@return number postage # esoui type: `integer`
function GetQueuedMailPostage() end

---@return number amount # esoui type: `integer`
function GetQueuedMoneyAttachment() end

---@param gender Gender
---@param raceId number # esoui type: `integer`
---@return string raceName
function GetRaceName(gender, raceId) end

---@return number x
---@return number y
function GetRadarCountUIPosition() end

---@return number currentLifeScoreBonus # esoui type: `integer`
function GetRaidBonusMultiplier() end

---@return number raidTime # esoui type: `integer`
function GetRaidDuration() end

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return string name
---@return number raidId # esoui type: `integer`
function GetRaidLeaderboardInfo(raidCategory, raidIndex) end

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return number rank # esoui type: `integer`
---@return number bestScore # esoui type: `integer`
function GetRaidLeaderboardLocalPlayerInfo(raidCategory, raidIndex) end

---@param raidId number # esoui type: `integer`
---@return string name
function GetRaidName(raidId) end

---@param raidCategory RaidCategory
---@return string name
---@return number raidId # esoui type: `integer`
function GetRaidOfTheWeekLeaderboardInfo(raidCategory) end

---@param raidCategory RaidCategory
---@return number rank # esoui type: `integer`
---@return number bestScore # esoui type: `integer`
function GetRaidOfTheWeekLeaderboardLocalPlayerInfo(raidCategory) end

---@return number secondsUntilEnd # esoui type: `integer`
---@return number secondsUntilNextStart # esoui type: `integer`
function GetRaidOfTheWeekTimes() end

---@return number? currentCounter # esoui type: `integer:nilable`
function GetRaidReviveCountersRemaining() end

---@param notificationIndex number # esoui type: `luaindex`
---@return number notificationId # esoui type: `integer`
function GetRaidScoreNotificationId(notificationIndex) end

---@param notificationId number # esoui type: `integer`
---@return number raidId # esoui type: `integer`
---@return number raidScore # esoui type: `integer`
---@return number millisecondsSinceRequest # esoui type: `integer`
function GetRaidScoreNotificationInfo(notificationId) end

---@param notificationId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return string displayName
---@return string characterName
---@return boolean isFriend # esoui type: `bool`
---@return boolean isGuildMember # esoui type: `bool`
---@return boolean isPlayer # esoui type: `bool`
function GetRaidScoreNotificationMemberInfo(notificationId, memberIndex) end

---@return number raidTargetTime # esoui type: `integer`
function GetRaidTargetTime() end

---@return string giftSendNoteText
function GetRandomGiftSendNoteText() end

---@return string giftThankYouNoteText
function GetRandomGiftThankYouNoteText() end

---@param zoneId number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return number normalizedX
---@return number normalizedY
function GetRawNormalizedWorldPosition(zoneId, worldX, worldY, worldZ) end

---@param unitTag string
---@return string rawName
function GetRawUnitName(unitTag) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return TradeskillType craftingType
---@return string researchLineName
function GetRearchLineInfoFromRetraitItem(bagId, slotIndex) end

---@return number remain # esoui type: `integer`
---@return number duration # esoui type: `integer`
function GetRecallCooldown() end

---@param nodeIndex number # esoui type: `luaindex`
---@return number cost # esoui type: `integer`
function GetRecallCost(nodeIndex) end

---@param nodeIndex number # esoui type: `luaindex`
---@return CurrencyType currency
function GetRecallCurrency(nodeIndex) end

---NOTE! Uses variable returns...
---@param numAchievementsToGet number # esoui type: `integer`
---@return number achievementId # esoui type: `integer`
function GetRecentlyCompletedAchievements(numAchievementsToGet) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return boolean known # esoui type: `bool`
---@return string name
---@return number numIngredients # esoui type: `integer`
---@return number provisionerLevelReq # esoui type: `integer`
---@return number qualityReq # esoui type: `integer`
---@return ProvisionerSpecialIngredientType specialIngredientType
---@return TradeskillType requiredCraftingStationType
---@return number resultItemId # esoui type: `integer`
function GetRecipeInfo(recipeListIndex, recipeIndex) end

---@param itemId number # esoui type: `integer`
---@return TradeskillType craftingStationType
---@return number? recipeListIndex # esoui type: `luaindex:nilable`
---@return number? recipeIndex # esoui type: `luaindex:nilable`
function GetRecipeInfoFromItemId(itemId) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param ingredientIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number requiredQuantity # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetRecipeIngredientItemInfo(recipeListIndex, recipeIndex, ingredientIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param ingredientIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetRecipeIngredientItemLink(recipeListIndex, recipeIndex, ingredientIndex, linkStyle) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param ingredientIndex number # esoui type: `luaindex`
---@return number requiredQuantity # esoui type: `integer`
function GetRecipeIngredientRequiredQuantity(recipeListIndex, recipeIndex, ingredientIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@return string name
---@return number numRecipes # esoui type: `integer`
---@return string upIcon # esoui type: `textureName`
---@return string downIcon # esoui type: `textureName`
---@return string overIcon # esoui type: `textureName`
---@return string deprecatedReturn # esoui type: `textureName`
---@return string createSound
function GetRecipeListInfo(recipeListIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetRecipeResultItemInfo(recipeListIndex, recipeIndex) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetRecipeResultItemLink(recipeListIndex, recipeIndex, linkStyle) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param numIterations number # esoui type: `integer`
---@return number quantity # esoui type: `integer`
function GetRecipeResultQuantity(recipeListIndex, recipeIndex, numIterations) end

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param tradeskillIndex number # esoui type: `luaindex`
---@return TradeskillType tradeskill
---@return number levelRequirement # esoui type: `integer`
function GetRecipeTradeskillRequirement(recipeListIndex, recipeIndex, tradeskillIndex) end

---@return number payoffAmount # esoui type: `integer`
function GetReducedBountyPayoffAmount() end

---@return number repairCost # esoui type: `integer`
function GetRepairAllCost() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number tier # esoui type: `integer`
function GetRepairKitTier(bagId, slotIndex) end

---@param activityId number # esoui type: `integer`
---@return number collectibleId # esoui type: `integer`
function GetRequiredActivityCollectibleId(activityId) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number requiredDisciplineId # esoui type: `integer`
function GetRequiredChampionDisciplineIdForSlot(actionSlotIndex, hotbarCategory) end

---@return number requiredStackSize # esoui type: `integer`
function GetRequiredSmithingRefinementStackSize() end

---@param parentKeepId number # esoui type: `integer`
---@param resourceType KeepResourceType
---@return number keepId # esoui type: `integer`
function GetResourceKeepForKeep(parentKeepId, resourceType) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return number primaryDyeId # esoui type: `integer`
---@return number secondaryDyeId # esoui type: `integer`
---@return number accentDyeId # esoui type: `integer`
function GetRestyleSlotCurrentDyes(restyleMode, restyleSetIndex, restyleSlot) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return number dyeData # esoui type: `integer`
function GetRestyleSlotDyeData(restyleMode, restyleSetIndex, restyleSlot) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return string icon # esoui type: `textureName`
function GetRestyleSlotIcon(restyleMode, restyleSetIndex, restyleSlot) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return number id # esoui type: `integer`
function GetRestyleSlotId(restyleMode, restyleSetIndex, restyleSlot) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param pendingTrait ItemTraitType
---@param linkStyle LinkStyle
---@return string link
function GetResultingItemLinkAfterRetrait(bagId, slotIndex, pendingTrait, linkStyle) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return Alliance ownerAlliance
function GetReturnObjectiveOwner(keepId, objectiveId, battlegroundContext) end

---@param rewardId number # esoui type: `integer`
---@return string fileIndex # esoui type: `textureName`
function GetRewardAnnouncementBackgroundFileIndex(rewardId) end

---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number rewardId # esoui type: `integer`
---@return number quantity # esoui type: `integer`
function GetRewardInfoForLevel(level, index) end

---@param rewardListId number # esoui type: `integer`
---@param listIndex number # esoui type: `luaindex`
---@return number rewardDefId # esoui type: `integer`
---@return RewardEntryType rewardType
---@return number quantity # esoui type: `integer`
function GetRewardListEntryInfo(rewardListId, listIndex) end

---@param rewardId number # esoui type: `integer`
---@return number rewardListId # esoui type: `integer`
function GetRewardListIdFromReward(rewardId) end

---@param rewardId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@return string displayName
function GetRewardPreviewVariationDisplayName(rewardId, variation) end

---@param rewardId number # esoui type: `integer`
---@return RewardEntryType rewardType
function GetRewardType(rewardId) end

---@return number inventoryBonus # esoui type: `integer`
---@return number maxInventoryBonus # esoui type: `integer`
---@return number staminaBonus # esoui type: `integer`
---@return number maxStaminaBonus # esoui type: `integer`
---@return number speedBonus # esoui type: `integer`
---@return number maxSpeedBonus # esoui type: `integer`
function GetRidingStats() end

---@return number bonusPercentage
function GetRingOfMaraExperienceBonus() end

---@param itemId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param itemQuality ItemQuality
---@return number? potencyRuneId # esoui type: `integer:nilable`
---@return number? essenceRuneId # esoui type: `integer:nilable`
---@return number? aspectRuneId # esoui type: `integer:nilable`
function GetRunesForItemIdIfKnown(itemId, materialItemId, itemQuality) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string soundName
---@return number soundLength # esoui type: `integer`
function GetRunestoneSoundInfo(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return string? name # esoui type: `string:nilable`
function GetRunestoneTranslatedName(bagId, slotIndex) end

---@param dyeSetIndex number # esoui type: `luaindex`
---@return number primaryDyeId # esoui type: `integer`
---@return number secondaryDyeId # esoui type: `integer`
---@return number accentDyeId # esoui type: `integer`
function GetSavedDyeSetDyes(dyeSetIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return BattlegroundAlliance alliance
function GetScoreboardEntryBattlegroundAlliance(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return number classId # esoui type: `integer`
function GetScoreboardEntryClassId(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return string characterName
---@return string displayName
---@return BattlegroundAlliance alliance
---@return boolean isLocalPlayer # esoui type: `bool`
function GetScoreboardEntryInfo(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@param medalId number # esoui type: `integer`
---@return number count # esoui type: `integer`
function GetScoreboardEntryNumEarnedMedalsById(slotIndex, medalId) end

---@param slotIndex number # esoui type: `luaindex`
---@param scoreType ScoreTrackerEntryType
---@return number score # esoui type: `integer`
function GetScoreboardEntryScoreByType(slotIndex, scoreType) end

---@return number playerIndex # esoui type: `luaindex`
function GetScoreboardPlayerEntryIndex() end

---@param battlegroundId number # esoui type: `integer`
---@return number result # esoui type: `integer`
function GetScoreToWinBattleground(battlegroundId) end

---@return number result # esoui type: `integer`
function GetScoringTeam() end

---@param eventIndex number # esoui type: `luaindex`
---@return number eventId # esoui type: `integer`
function GetScriptedEventInviteIdFromIndex(eventIndex) end

---@param eventId number # esoui type: `integer`
---@return boolean isValid # esoui type: `bool`
---@return string eventName
---@return string inviterName
---@return string questName
---@return number timeRemainingMS # esoui type: `integer`
function GetScriptedEventInviteInfo(eventId) end

---@param eventId number # esoui type: `integer`
---@return number timeRemainingMS # esoui type: `integer`
function GetScriptedEventInviteTimeRemainingMS(eventId) end

---@return number antiquityId # esoui type: `integer`
function GetScryingCurrentAntiquityId() end

---@param scryingPassiveSkill ScryingPassiveSkill
---@return number scryingPassiveSkillIndex # esoui type: `luaindex`
function GetScryingPassiveSkillIndex(scryingPassiveSkill) end

---@param SCTCloudId number # esoui type: `integer`
---@return number animationOverlapPercent
function GetSCTCloudAnimationOverlapPercent(SCTCloudId) end

---@param SCTCloudId number # esoui type: `integer`
---@param offsetIndex number # esoui type: `luaindex`
---@param ordering number # esoui type: `integer`
---@param UIOffsetX number
---@param UIOffsetY number
function GetSCTCloudOffset(SCTCloudId, offsetIndex, ordering, UIOffsetX, UIOffsetY) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@return boolean hideWhenValueIsZero # esoui type: `bool`
---@return boolean enabled # esoui type: `bool`
function GetSCTEventVisualInfoHideWhenValueIsZero(SCTEventVisualInfoId) end

---@param eventType SCTEventType
---@return number SCTEventVisualInfoId # esoui type: `integer`
function GetSCTEventVisualInfoId(eventType) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return number r
---@return number g
---@return number b
---@return boolean enabled # esoui type: `bool`
function GetSCTEventVisualInfoTextColor(SCTEventVisualInfoId, textType) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return number keyboardFontSize # esoui type: `integer`
---@return number gamepadFontSize # esoui type: `integer`
---@return boolean enabled # esoui type: `bool`
function GetSCTEventVisualInfoTextFontSizes(SCTEventVisualInfoId, textType) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return string format
---@return boolean enabled # esoui type: `bool`
function GetSCTEventVisualInfoTextFormat(SCTEventVisualInfoId, textType) end

---@return string fontName
---@return FontStyle fontStyle
function GetSCTGamepadFont() end

---@return string fontName
---@return FontStyle fontStyle
function GetSCTKeyboardFont() end

---@param slotIndex number # esoui type: `luaindex`
---@return number minSpacingMS # esoui type: `integer`
function GetSCTSlotAnimationMinimumSpacing(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return string animationTimelineName
function GetSCTSlotAnimationTimeline(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return number topEdgeUIOffsetBuffer
---@return number bottomEdgeUIOffsetBuffer
function GetSCTSlotClamping(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return number defaultScale
---@return number critScale
function GetSCTSlotEventControlScales(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@param eventType SCTEventType
---@return number SCTEventVisualInfoId # esoui type: `integer`
function GetSCTSlotEventVisualInfo(slotIndex, eventType) end

---@param slotIndex number # esoui type: `luaindex`
---@return number SCTCloudId # esoui type: `integer`
function GetSCTSlotGamepadCloudId(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return number SCTCloudId # esoui type: `integer`
function GetSCTSlotKeyboardCloudId(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return SCTUnitAnchorType SCTAnchorType
---@return AnchorPosition anchorPoint
---@return number UIOffsetX
---@return number UIOffsetY
---@return number cameraOffsetRight
---@return number cameraOffsetUp
function GetSCTSlotPosition(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return boolean showForFriendly # esoui type: `bool`
---@return boolean showForNeutral # esoui type: `bool`
---@return boolean showForEnemy # esoui type: `bool`
function GetSCTSlotSourceReputationTypes(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return boolean showForFriendly # esoui type: `bool`
---@return boolean showForNeutral # esoui type: `bool`
---@return boolean showForEnemy # esoui type: `bool`
function GetSCTSlotTargetReputationTypes(slotIndex) end

---@param slotIndex number # esoui type: `luaindex`
---@return number zoomedInCameraDistanceThreshold
---@return number zoomedInUIOffsetX
---@return number zoomedInUIOffsetY
function GetSCTSlotZoomedInPosition(slotIndex) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return number timeInQueueInSeconds # esoui type: `integer`
function GetSecondsInCampaignQueue(campaignId, queueAsGroup) end

---@return number secondsPlayed # esoui type: `integer`
function GetSecondsPlayed() end

---@return number secondsSinceMidnight # esoui type: `integer`
function GetSecondsSinceMidnight() end

---@return number secondsUntilArrestTimeout # esoui type: `integer`
function GetSecondsUntilArrestTimeout() end

---@return number secondsUntilBountyDecaysToZero # esoui type: `integer`
function GetSecondsUntilBountyDecaysToZero() end

---@param campaignId number # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetSecondsUntilCampaignEnd(campaignId) end

---@param campaignId number # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetSecondsUntilCampaignScoreReevaluation(campaignId) end

---@param campaignId number # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetSecondsUntilCampaignStart(campaignId) end

---@param campaignId number # esoui type: `integer`
---@return number seconds # esoui type: `integer`
function GetSecondsUntilCampaignUnderdogReevaluation(campaignId) end

---@return number secondsUntilBountyDecaysToZero # esoui type: `integer`
function GetSecondsUntilHeatDecaysToZero() end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return number secondsUntilAvailable # esoui type: `integer`
function GetSecondsUntilKeepClaimAvailable(keepId, battlegroundContext) end

---@return DiggingActiveSkills diggingActiveSkill
function GetSelectedDiggingActiveSkill() end

---@return number? guildId # esoui type: `integer:nilable`
function GetSelectedGuildBankId() end

---@return LFGRole role
function GetSelectedLFGRole() end

---@return number? guildId # esoui type: `integer:nilable`
function GetSelectedTradingHouseGuildId() end

---@param campaignIndex number # esoui type: `luaindex`
---@return string? conflictingCharacterName # esoui type: `string:nilable`
function GetSelectionCampaignAllianceLockConflictingCharacterName(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return CampaignAllianceLockReason allianceLockReason
function GetSelectionCampaignAllianceLockReason(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@param alliance number # esoui type: `integer`
---@return number score # esoui type: `integer`
function GetSelectionCampaignAllianceScore(campaignIndex, alliance) end

---@param campaignIndex number # esoui type: `luaindex`
---@return Alliance lockedToAlliance
function GetSelectionCampaignCurrentAllianceLock(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return number campaignId # esoui type: `integer`
function GetSelectionCampaignId(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@param alliance Alliance
---@return CampaignPopulationType currentPopulationEstimate
function GetSelectionCampaignPopulationData(campaignIndex, alliance) end

---@param campaignIndex number # esoui type: `luaindex`
---@return number queueWaitTimeSeconds # esoui type: `integer`
function GetSelectionCampaignQueueWaitTime(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return number secondsUntilCampaignStart # esoui type: `integer`
---@return number secondsUntilCampaignEnd # esoui type: `integer`
function GetSelectionCampaignTimes(campaignIndex) end

---@param campaignIndex number # esoui type: `luaindex`
---@return Alliance alliance
function GetSelectionCampaignUnderdogLeaderAlliance(campaignIndex) end

---@param tokenType ServiceTokenType
---@return string tokenDescription
function GetServiceTokenDescription(tokenType) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@return boolean value # esoui type: `bool`
function GetSetting_Bool(system, settingId) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@return string value
function GetSetting(system, settingId) end

---@return number stress
function GetSettingChamberStress() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@return boolean showHiddenGear # esoui type: `bool`
function GetShowHiddenGearFromActivePreviewRules() end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param showUpgrade boolean # esoui type: `bool`
---@return number abilityId # esoui type: `integer`
function GetSkillAbilityId(skillType, skillLineIndex, skillIndex, showUpgrade) end

---@param progressionIndex number # esoui type: `luaindex`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
---@return number skillIndex # esoui type: `luaindex`
function GetSkillAbilityIndicesFromProgressionIndex(progressionIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return string name
---@return string texture # esoui type: `textureName`
---@return number earnedRank # esoui type: `luaindex`
---@return boolean passive # esoui type: `bool`
---@return boolean ultimate # esoui type: `bool`
---@return boolean purchased # esoui type: `bool`
---@return number? progressionIndex # esoui type: `luaindex:nilable`
---@return number rank # esoui type: `integer`
function GetSkillAbilityInfo(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number lineRankNeededToUnlock # esoui type: `luaindex`
function GetSkillAbilityLineRankNeededToUnlock(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return string name
---@return string texture # esoui type: `textureName`
---@return number? earnedRank # esoui type: `luaindex:nilable`
function GetSkillAbilityNextUpgradeInfo(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return number? currentUpgradeLevel # esoui type: `integer:nilable`
---@return number? maxUpgradeLevel # esoui type: `integer:nilable`
function GetSkillAbilityUpgradeInfo(skillType, skillLineIndex, skillIndex) end

---@param skillBuildId number # esoui type: `integer`
---@param skillBuildAbilityIndex number # esoui type: `luaindex`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
---@return number abilityIndex # esoui type: `luaindex`
---@return boolean isActiveAbility # esoui type: `bool`
---@return number morphChoice # esoui type: `integer`
---@return number rank # esoui type: `integer`
function GetSkillBuildEntryInfo(skillBuildId, skillBuildAbilityIndex) end

---@return number skillBuildId # esoui type: `integer`
function GetSkillBuildId() end

---@param skillBuildId number # esoui type: `integer`
---@return string name
---@return string description
---@return boolean isTank # esoui type: `bool`
---@return boolean isHealer # esoui type: `bool`
---@return boolean isDPS # esoui type: `bool`
function GetSkillBuildInfo(skillBuildId) end

---@return number level # esoui type: `integer`
function GetSkillBuildTutorialLevel() end

---@param skillLineId number # esoui type: `integer`
---@return string announcementIcon # esoui type: `textureName`
function GetSkillLineAnnouncementIconById(skillLineId) end

---@param skillLineId number # esoui type: `integer`
---@return TradeskillType craftingSkillType
function GetSkillLineCraftingGrowthTypeById(skillLineId) end

---@param skillLineId number # esoui type: `integer`
---@return string detailedIcon # esoui type: `textureName`
function GetSkillLineDetailedIconById(skillLineId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number rank # esoui type: `luaindex`
---@return boolean advised # esoui type: `bool`
---@return boolean active # esoui type: `bool`
---@return boolean discovered # esoui type: `bool`
function GetSkillLineDynamicInfo(skillType, skillLineIndex) end

---@param rewardId number # esoui type: `integer`
---@return number skillLineId # esoui type: `integer`
function GetSkillLineExperienceRewardSkillLineId(rewardId) end

---@param skillLineId number # esoui type: `integer`
---@return GameplayActorCategory gameplayActorCategory
function GetSkillLineGameplayActorCategory(skillLineId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number skillLineId # esoui type: `integer`
function GetSkillLineId(skillType, skillLineIndex) end

---@param skillId number # esoui type: `integer`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
function GetSkillLineIndicesFromSkillId(skillId) end

---@param skillLineId number # esoui type: `integer`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
function GetSkillLineIndicesFromSkillLineId(skillLineId) end

---@param skillLineId number # esoui type: `integer`
---@return string name
function GetSkillLineNameById(skillLineId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number orderingIndex # esoui type: `luaindex`
function GetSkillLineOrderingIndex(skillType, skillLineIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param morphChoice number # esoui type: `integer`
---@return number rank # esoui type: `integer`
function GetSkillLineProgressionAbilityRank(skillType, skillLineIndex, skillIndex, morphChoice) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param rank number # esoui type: `luaindex`
---@return number? startXP # esoui type: `integer:nilable`
---@return number? nextRankStartXP # esoui type: `integer:nilable`
function GetSkillLineRankXPExtents(skillType, skillLineIndex, rank) end

---@param skillLineId number # esoui type: `integer`
---@return string unlockText
function GetSkillLineUnlockTextById(skillLineId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return number lastRankXP # esoui type: `integer`
---@return number nextRankXP # esoui type: `integer`
---@return number currentXP # esoui type: `integer`
function GetSkillLineXPInfo(skillType, skillLineIndex) end

---@param level number # esoui type: `integer`
---@return number numSkillPoints # esoui type: `integer`
function GetSkillPointsAwardedForLevel(level) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number progressionId # esoui type: `integer`
function GetSkillProgressionIdForHotbarSlotOverrideRule(actionSlotIndex, hotbarCategory) end

---@param allocationMode SkillPointAllocationMode
---@return number cost # esoui type: `integer`
function GetSkillRespecCost(allocationMode) end

---@return number suggestionLimit # esoui type: `integer`
function GetSkillsAdvisorSuggestionLimit() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number abilityCost # esoui type: `integer`
---@return number mechanicType # esoui type: `integer`
function GetSlotAbilityCost(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return number actionId # esoui type: `integer`
function GetSlotBoundId(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return number remain # esoui type: `integer`
---@return number duration # esoui type: `integer`
---@return boolean global # esoui type: `bool`
---@return ActionBarSlotType globalSlotType
function GetSlotCooldownInfo(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return number? count # esoui type: `integer:nilable`
function GetSlotItemCount(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return ItemDisplayQuality displayQuality
function GetSlotItemDisplayQuality(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return string itemLink
function GetSlotItemLink(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return number itemSoundCategory # esoui type: `integer`
function GetSlotItemSound(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return string name
function GetSlotName(actionSlotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number stack # esoui type: `integer`
---@return number maxStack # esoui type: `integer`
function GetSlotStackSize(bagId, slotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return string texture
---@return string weapontexture
---@return string activationAnimation
function GetSlotTexture(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return ActionBarSlotType actionType
function GetSlotType(actionSlotIndex, hotbarCategory) end

---@param craftingSkillType TradeskillType
---@param improvementItemIndex number # esoui type: `luaindex`
---@return number numImprovementItemsRequired # esoui type: `integer`
function GetSmithingGuaranteedImprovementItemAmount(craftingSkillType, improvementItemIndex) end

---@param itemToImproveBagId Bag
---@param itemToImproveSlotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemQuality functionalQuality
---@return ItemDisplayQuality displayQuality
function GetSmithingImprovedItemInfo(itemToImproveBagId, itemToImproveSlotIndex, craftingSkillType) end

---@param itemToImproveBagId Bag
---@param itemToImproveSlotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@param linkStyle LinkStyle
---@return string link
function GetSmithingImprovedItemLink(itemToImproveBagId, itemToImproveSlotIndex, craftingSkillType, linkStyle) end

---@param itemToImproveBagId Bag
---@param itemToImproveSlotIndex number # esoui type: `integer`
---@param numBoostersToUse number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return number chance
function GetSmithingImprovementChance(itemToImproveBagId, itemToImproveSlotIndex, numBoostersToUse, craftingSkillType) end

---@param craftingSkillType TradeskillType
---@param improvementItemIndex number # esoui type: `luaindex`
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number currentStack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemQuality functionalQuality
---@return ItemDisplayQuality displayQuality
function GetSmithingImprovementItemInfo(craftingSkillType, improvementItemIndex) end

---@param craftingSkillType TradeskillType
---@param improvementItemIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetSmithingImprovementItemLink(craftingSkillType, improvementItemIndex, linkStyle) end

---@param patternIndex number # esoui type: `luaindex`
---@return ArmorType armorType
function GetSmithingPatternArmorType(patternIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndexOverride? number # esoui type: `luaindex:nilable`
---@param materialQuanityOverride? number # esoui type: `integer:nilable`
---@param styleOverride? number # esoui type: `integer:nilable`
---@param traitTypeOverride ItemTraitType
---@return string patternName
---@return string baseName
---@return string icon # esoui type: `textureName`
---@return number numMaterials # esoui type: `integer`
---@return number numTraitsRequired # esoui type: `integer`
---@return number numTraitsKnown # esoui type: `integer`
---@return ItemFilterType resultItemFilterType
function GetSmithingPatternInfo(patternIndex, materialIndexOverride, materialQuanityOverride, styleOverride, traitTypeOverride) end

---@param itemId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return number? patternIndex # esoui type: `luaindex:nilable`
---@return number? materialIndex # esoui type: `luaindex:nilable`
function GetSmithingPatternInfoForItemId(itemId, materialItemId, craftingSkillType) end

---@param itemTemplateId number # esoui type: `integer`
---@param itemSetId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param traitType ItemTraitType
---@return number? patternIndex # esoui type: `luaindex:nilable`
---@return number? materialIndex # esoui type: `luaindex:nilable`
---@return number? resultingItemId # esoui type: `integer:nilable`
function GetSmithingPatternInfoForItemSet(itemTemplateId, itemSetId, materialItemId, traitType) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
---@return number itemInstanceId # esoui type: `integer`
---@return number skillRequirement # esoui type: `integer`
---@return number createsItemOfLevel # esoui type: `integer`
---@return boolean isChampionPoint # esoui type: `bool`
function GetSmithingPatternMaterialItemInfo(patternIndex, materialIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetSmithingPatternMaterialItemLink(patternIndex, materialIndex, linkStyle) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param itemStyleId number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetSmithingPatternResultLink(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, linkStyle) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number? refinedItemId # esoui type: `integer:nilable`
function GetSmithingRefinedItemId(bagId, slotIndex) end

---@return number maxRawMaterial # esoui type: `integer`
function GetSmithingRefinementMaxRawMaterial() end

---@return number minRawMaterial # esoui type: `integer`
function GetSmithingRefinementMinRawMaterial() end

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number numTraits # esoui type: `integer`
---@return number timeRequiredForNextResearchSecs # esoui type: `integer`
function GetSmithingResearchLineInfo(craftingSkillType, researchLineIndex) end

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return string traitDescription
---@return string traitResearchSourceDescription
---@return string traitMaterialSourceDescription
function GetSmithingResearchLineTraitDescriptions(craftingSkillType, researchLineIndex, traitIndex) end

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return ItemTraitType traitType
---@return string traitDescription
---@return boolean known # esoui type: `bool`
function GetSmithingResearchLineTraitInfo(craftingSkillType, researchLineIndex, traitIndex) end

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return number? duration # esoui type: `integer:nilable`
---@return number? timeRemainingSecs # esoui type: `integer:nilable`
function GetSmithingResearchLineTraitTimes(craftingSkillType, researchLineIndex, traitIndex) end

---@param traitItemIndex number # esoui type: `luaindex`
---@return ItemTraitType traitType
---@return string itemName
---@return string icon # esoui type: `textureName`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return number itemStyleId # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
function GetSmithingTraitItemInfo(traitItemIndex) end

---@param traitItemIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetSmithingTraitItemLink(traitItemIndex, linkStyle) end

---@param soulGemType SoulGemType
---@param targetLevel number # esoui type: `integer`
---@param onlyInInventory boolean # esoui type: `bool`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stackCount # esoui type: `integer`
---@return ItemQuality quality
function GetSoulGemInfo(soulGemType, targetLevel, onlyInInventory) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return number tier # esoui type: `integer`
---@return SoulGemType soulGemType
function GetSoulGemItemInfo(bagId, slotIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return number openSlotsNeeded # esoui type: `integer`
function GetSpaceNeededToAcquireMarketProduct(marketProductId) end

---@param collectibleId number # esoui type: `integer`
---@return SpecializedCollectibleType specializedType
function GetSpecializedCollectibleType(collectibleId) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param morphChoice number # esoui type: `integer`
---@param rank number # esoui type: `integer`
---@return number abilityId # esoui type: `integer`
---@return number skillLineRankNeeded # esoui type: `luaindex`
function GetSpecificSkillAbilityInfo(skillType, skillLineIndex, skillIndex, morphChoice, rank) end

---@param abilityId number # esoui type: `integer`
---@return SkillType skillType
---@return number skillLineIndex # esoui type: `luaindex`
---@return number skillIndex # esoui type: `luaindex`
---@return number morphChoice # esoui type: `integer`
---@return number rank # esoui type: `integer`
function GetSpecificSkillAbilityKeysByAbilityId(abilityId) end

---@param entryIndex number # esoui type: `luaindex`
---@return number collectibleId # esoui type: `integer`
---@return boolean owned # esoui type: `bool`
function GetStoreCollectibleInfo(entryIndex) end

---@return boolean usesMoney # esoui type: `bool`
---@return boolean usesAlliancePoints # esoui type: `bool`
---@return boolean usesTelvarStones # esoui type: `bool`
---@return boolean usesWritVouchers # esoui type: `bool`
---@return boolean usesEventCurrency # esoui type: `bool`
function GetStoreCurrencyTypes() end

---@return StoreDefaultSortField defaultSortField
function GetStoreDefaultSortField() end

---@param entryIndex number # esoui type: `luaindex`
---@return number antiquityId # esoui type: `integer`
function GetStoreEntryAntiquityId(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@return number houseTemplateId # esoui type: `integer`
function GetStoreEntryHouseTemplateId(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string name
---@return number stack # esoui type: `integer`
---@return number price # esoui type: `integer`
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsRequirementsToBuy # esoui type: `bool`
---@return boolean meetsRequirementsToUse # esoui type: `bool`
---@return number quality # esoui type: `integer`
---@return boolean questNameColor # esoui type: `bool`
---@return CurrencyType currencyType1
---@return number currencyQuantity1 # esoui type: `integer`
---@return CurrencyType currencyType2
---@return number currencyQuantity2 # esoui type: `integer`
---@return StoreEntryType entryType
---@return StoreFailure buyStoreFailure
---@return number buyErrorStringId # esoui type: `integer`
function GetStoreEntryInfo(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@return number quantity # esoui type: `integer`
function GetStoreEntryMaxBuyable(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetStoreEntryPreviewVariationDisplayName(entryIndex, variation) end

---@param entryIndex number # esoui type: `luaindex`
---@return number questItemId # esoui type: `integer`
function GetStoreEntryQuestItemId(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@return number statValue # esoui type: `integer`
function GetStoreEntryStatValue(entryIndex) end

---NOTE! Uses variable returns...
---@param entryIndex number # esoui type: `luaindex`
---@return ItemFilterType itemFilterType
function GetStoreEntryTypeInfo(entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetStoreItemLink(entryIndex, linkStyle) end

---NOTE! Uses variable returns...
---@return CurrencyType currencyType
function GetStoreUsedCurrencyTypes() end

---@param stringVariablePrefix string
---@param contextId number # esoui type: `integer`
---@return string stringValue
function GetString(stringVariablePrefix, contextId) end

---@param fontObject userdata # esoui type: `object`
---@param text string
---@param scale number
---@return number stringWidthScaled
function GetStringWidthScaled(fontObject, text, scale) end

---@return number cooldownRemainingSecs # esoui type: `integer`
function GetStuckCooldown() end

---@return string? synergyName # esoui type: `string:nilable`
---@return string? iconFilename # esoui type: `textureName:nilable`
---@return number? priority # esoui type: `integer:nilable`
function GetSynergyInfo() end

---@param characterOrDisplayName string
---@return MountedState mountedState
---@return boolean isRidingGroupMount # esoui type: `bool`
---@return boolean hasFreePassengerSlot # esoui type: `bool`
function GetTargetMountedStateInfo(characterOrDisplayName) end

---@param thresholdIndex? number # esoui type: `luaindex:nilable`
---@return number telvarStoneMultiplier
function GetTelvarStoneMultiplier(thresholdIndex) end

---@return number? thresholdIndex # esoui type: `luaindex:nilable`
function GetTelvarStoneMultiplierThresholdIndex() end

---@return number percentLoss
function GetTelvarStonePercentLossOnNonPvpDeath() end

---@return number percentLoss
function GetTelvarStonePercentLossOnPvpDeath() end

---@param thresholdIndex? number # esoui type: `luaindex:nilable`
---@return number minimumAmount # esoui type: `integer`
function GetTelvarStoneThresholdAmount(thresholdIndex) end

---@param animationId number # esoui type: `integer`
---@return TextureBlendMode blendMode
function GetTextureLayerRevealAnimationBlendMode(animationId) end

---@param animationId number # esoui type: `integer`
---@return string texture # esoui type: `textureName`
function GetTextureLayerRevealAnimationTexture(animationId) end

---@param animationId number # esoui type: `integer`
---@return number normalizedWidth
---@return number normalizedHeight
function GetTextureLayerRevealAnimationWindowDimensions(animationId) end

---@param animationId number # esoui type: `integer`
---@return number normalizedStartX
---@return number normalizedStartY
---@return number normalizedStartRegistrationX
---@return number normalizedStartRegistrationY
---@return number normalizedEndX
---@return number normalizedEndY
---@return number normalizedEndRegistrationX
---@return number normalizedEndRegistrationY
function GetTextureLayerRevealAnimationWindowEndPoints(animationId) end

---@param animationId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return number x
---@return number y
---@return number normalizedDistance
function GetTextureLayerRevealAnimationWindowFadeGradientInfo(animationId, index) end

---@param animationId number # esoui type: `integer`
---@return number durationMS # esoui type: `integer`
function GetTextureLayerRevealAnimationWindowMovementDuration(animationId) end

---@param animationId number # esoui type: `integer`
---@return number offsetMS # esoui type: `integer`
function GetTextureLayerRevealAnimationWindowMovementOffset(animationId) end

---@param index number # esoui type: `luaindex`
---@return string activityDescription
function GetTimedActivityDescription(index) end

---@param index number # esoui type: `luaindex`
---@return TimedActivityDifficulty difficulty
function GetTimedActivityDifficulty(index) end

---@param index number # esoui type: `luaindex`
---@return number timedActivityId # esoui type: `integer`
function GetTimedActivityId(index) end

---@param index number # esoui type: `luaindex`
---@return number maxProgress # esoui type: `integer`
function GetTimedActivityMaxProgress(index) end

---@param index number # esoui type: `luaindex`
---@return string activityName
function GetTimedActivityName(index) end

---@param index number # esoui type: `luaindex`
---@return number progress # esoui type: `integer`
function GetTimedActivityProgress(index) end

---@param index number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return number rewardId # esoui type: `integer`
---@return number quantity # esoui type: `integer`
function GetTimedActivityRewardInfo(index, rewardIndex) end

---@param index number # esoui type: `luaindex`
---@return number timeRemainingSeconds # esoui type: `integer`
function GetTimedActivityTimeRemainingSeconds(index) end

---@param index number # esoui type: `luaindex`
---@return TimedActivityType activityType
function GetTimedActivityType(index) end

---@param activityType TimedActivityType
---@return number maxActivities # esoui type: `integer`
function GetTimedActivityTypeLimit(activityType) end

---@return number timestamp # esoui type: `id64`
function GetTimeStamp() end

---@param year number # esoui type: `integer`
---@param month number # esoui type: `integer`
---@param day number # esoui type: `integer`
---@param inLocalTime boolean # esoui type: `bool`
---@return number timestamp # esoui type: `id64`
function GetTimestampForStartOfDate(year, month, day, inLocalTime) end

---@return string currentTimeString
function GetTimeString() end

---@return number timeRemaining # esoui type: `integer`
function GetTimeToClemencyResetInSeconds() end

---@return number timeRemaining # esoui type: `integer`
function GetTimeToShadowyConnectionsResetInSeconds() end

---@return number timeMs # esoui type: `integer`
---@return number totalDurationMs # esoui type: `integer`
function GetTimeUntilCanBeTrained() end

---@return number timeUntilNextMonthS # esoui type: `integer`
function GetTimeUntilNextDailyLoginMonthS() end

---@return number timeUntilNextRewardClaimS # esoui type: `integer`
function GetTimeUntilNextDailyLoginRewardClaimS() end

---@return number millisecondsUntilAvailable # esoui type: `integer`
function GetTimeUntilStuckAvailable() end

---@param titleIndex number # esoui type: `luaindex`
---@return string titleString
function GetTitle(titleIndex) end

---@return string tooltipText
function GetTooltipStringForRenderQualitySetting() end

---@return number points # esoui type: `integer`
function GetTotalAchievementPoints() end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param outfitSlot OutfitSlot
---@param collectibleId number # esoui type: `integer`
---@param changedDyeCount number # esoui type: `integer`
---@return number totalCostGold # esoui type: `integer`
function GetTotalApplyCostForOutfitSlots(actorCategory, outfitIndex, outfitSlot, collectibleId, changedDyeCount) end

---@param campaignId number # esoui type: `integer`
---@param holdingType CampaignHoldingType
---@param alliance Alliance
---@return number holdingsControlled # esoui type: `integer`
function GetTotalCampaignHoldings(campaignId, holdingType, alliance) end

---@param collectibleCategoryType CollectibleCategoryType
---@return number count # esoui type: `integer`
function GetTotalCollectiblesByCategoryType(collectibleCategoryType) end

---@param antiquityId number # esoui type: `integer`
---@return number numGoals # esoui type: `integer`
function GetTotalNumGoalsForAntiquity(antiquityId) end

---@param collectibleCategoryType CollectibleCategoryType
---@return number count # esoui type: `integer`
function GetTotalUnlockedCollectiblesByCategoryType(collectibleCategoryType) end

---@return number antiquityId # esoui type: `integer`
function GetTrackedAntiquityId() end

---@param index number # esoui type: `luaindex`
---@return TrackedDataType trackType
---@return number param1 # esoui type: `integer`
---@return number param2 # esoui type: `integer`
function GetTrackedByIndex(index) end

---@param trackType TrackedDataType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@return boolean assisted # esoui type: `bool`
function GetTrackedIsAssisted(trackType, param1, param2) end

---@return number zoneId # esoui type: `integer`
---@return ZoneCompletionType zoneCompletionType
---@return number activityId # esoui type: `integer`
function GetTrackedZoneStoryActivityInfo() end

---@param trackType TrackedDataType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@return TrackingLevel trackingLevel
function GetTrackingLevel(trackType, param1, param2) end

---@return string characterName
---@return number millisecondsSinceRequest # esoui type: `integer`
---@return string displayName
function GetTradeInviteInfo() end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return Bag bagId
---@return number? slotIndex # esoui type: `integer:nilable`
function GetTradeItemBagAndSlot(who, tradeIndex) end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return number timeRemainingS # esoui type: `integer`
function GetTradeItemBoPTimeRemainingSeconds(who, tradeIndex) end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return string namesString
function GetTradeItemBoPTradeableDisplayNamesString(who, tradeIndex) end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return string name
---@return string icon # esoui type: `textureName`
---@return number stack # esoui type: `integer`
---@return ItemDisplayQuality displayQuality
---@return string creatorName
---@return number sellPrice # esoui type: `integer`
---@return boolean meetsUsageRequirement # esoui type: `bool`
---@return EquipType equipType
---@return number itemStyleId # esoui type: `integer`
function GetTradeItemInfo(who, tradeIndex) end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetTradeItemLink(who, tradeIndex, linkStyle) end

---@param who TradeParticipant
---@return number moneyOffer # esoui type: `integer`
function GetTradeMoneyOffer(who) end

---@param tradeskillType TradeskillType
---@return number levelPassiveAbilityId # esoui type: `integer`
function GetTradeskillLevelPassiveAbilityId(tradeskillType) end

---@param tradeskillType TradeskillType
---@return RecipeCraftingSystem recipeCraftingSystem
function GetTradeskillRecipeCraftingSystem(tradeskillType) end

---@param nonCombatBonusType NonCombatBonusType
---@return TradeskillType tradeskillType
function GetTradeskillTypeForNonCombatBonusLevelType(nonCombatBonusType) end

---@return number cooldownMilliseconds # esoui type: `integer`
function GetTradingHouseCooldownRemaining() end

---@return number cutPercentage
function GetTradingHouseCutPercentage() end

---@param index number # esoui type: `luaindex`
---@return number guildId # esoui type: `integer`
---@return string guildName
---@return Alliance guildAlliance
function GetTradingHouseGuildDetails(index) end

---@return number currentListingCount # esoui type: `integer`
---@return number maxListingCount # esoui type: `integer`
function GetTradingHouseListingCounts() end

---@param index number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string itemName
---@return ItemDisplayQuality displayQuality
---@return number stackCount # esoui type: `integer`
---@return string sellerName
---@return number timeRemaining # esoui type: `integer`
---@return number salePrice # esoui type: `integer`
---@return CurrencyType currencyType
---@return number itemUniqueId # esoui type: `id64`
---@return number salePricePerUnit
function GetTradingHouseListingItemInfo(index) end

---@param index number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetTradingHouseListingItemLink(index, linkStyle) end

---@return number listingPercentage
function GetTradingHouseListingPercentage() end

---@param desiredPostPrice number # esoui type: `integer`
---@return number listingFee # esoui type: `integer`
---@return number tradingHouseCut # esoui type: `integer`
---@return number expectedProfit # esoui type: `integer`
function GetTradingHousePostPriceInfo(desiredPostPrice) end

---@param index number # esoui type: `luaindex`
---@return string icon # esoui type: `textureName`
---@return string itemName
---@return ItemDisplayQuality displayQuality
---@return number stackCount # esoui type: `integer`
---@return string sellerName
---@return number timeRemaining # esoui type: `integer`
---@return number purchasePrice # esoui type: `integer`
---@return CurrencyType currencyType
---@return number itemUniqueId # esoui type: `id64`
---@return number purchasePricePerUnit
function GetTradingHouseSearchResultItemInfo(index) end

---@param index number # esoui type: `luaindex`
---@param linkStyle LinkStyle
---@return string link
function GetTradingHouseSearchResultItemLink(index, linkStyle) end

---@param index number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
---@return string variationDisplayName
function GetTradingHouseSearchResultItemPreviewVariationDisplayName(index, variation) end

---@return number numItemsOnPage # esoui type: `integer`
---@return number currentPage # esoui type: `integer`
---@return boolean hasMorePages # esoui type: `bool`
function GetTradingHouseSearchResultsInfo() end

---@return number cost # esoui type: `integer`
function GetTrainingCost() end

---@param itemId number # esoui type: `integer`
---@return number traitId # esoui type: `integer`
function GetTraitIdFromBasePotion(itemId) end

---@param treasureMapIndex number # esoui type: `luaindex`
---@return string name
---@return string imagePath # esoui type: `textureName`
function GetTreasureMapInfo(treasureMapIndex) end

---@param channel MsgChannelType
---@param target string
---@return boolean handled # esoui type: `bool`
function GetTrialChatIsRestrictedAndWarn(channel, target) end

---@param channel MsgChannelType
---@param target string
---@return TrialAccountRestrictionType restrictionType
function GetTrialChatRestriction(channel, target) end

---@return number accountTypeId # esoui type: `integer`
---@return string title
---@return string description
---@return number version # esoui type: `integer`
function GetTrialInfo() end

---@param raidIndex number # esoui type: `luaindex`
---@param entryIndex number # esoui type: `luaindex`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number time # esoui type: `integer`
---@return number classId # esoui type: `integer`
---@return number allianceId # esoui type: `integer`
---@return string displayName
function GetTrialLeaderboardEntryInfo(raidIndex, entryIndex) end

---@param entryIndex number # esoui type: `luaindex`
---@return number ranking # esoui type: `integer`
---@return string charName
---@return number time # esoui type: `integer`
---@return number classId # esoui type: `integer`
---@return number allianceId # esoui type: `integer`
---@return string displayName
function GetTrialOfTheWeekLeaderboardEntryInfo(entryIndex) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return number displayPriority # esoui type: `integer`
function GetTutorialDisplayPriority(tutorialIndex) end

---@param triggerType TutorialTrigger
---@return number tutorialId # esoui type: `luaindex`
function GetTutorialId(triggerType) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return string title
---@return string description
---@return number displayPriority # esoui type: `integer`
function GetTutorialInfo(tutorialIndex) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetTutorialLinkedHelpInfo(tutorialIndex) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return TutorialTrigger tutorialTrigger
function GetTutorialTrigger(tutorialIndex) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return TutorialType tutorialType
function GetTutorialType(tutorialIndex) end

---@return UIPlatform platform
function GetUIPlatform() end

---@param helpCategoryIndex number # esoui type: `luaindex`
---@param helpIndex number # esoui type: `luaindex`
---@return UISystem uiSystem
function GetUISystemAssociatedWithHelpEntry(helpCategoryIndex, helpIndex) end

---@param characterName string
---@return string uniqueName
function GetUniqueNameForCharacter(characterName) end

---@param unitTag string
---@return number alliance # esoui type: `integer`
function GetUnitAlliance(unitTag) end

---@param unitTag string
---@param unitAttributeVisual UnitAttributeVisual
---@param statType DerivedStats
---@param attributeType Attributes
---@param powerType CombatMechanicType
---@return number? value # esoui type: `number:nilable`
---@return number? maxValue # esoui type: `number:nilable`
---@return number? sequenceId # esoui type: `integer:nilable`
function GetUnitAttributeVisualizerEffectInfo(unitTag, unitAttributeVisual, statType, attributeType, powerType) end

---@param unitTag string
---@return number rank # esoui type: `integer`
---@return number subRank # esoui type: `integer`
function GetUnitAvARank(unitTag) end

---@param unitTag string
---@return number AvARankPoints # esoui type: `integer`
function GetUnitAvARankPoints(unitTag) end

---@param unitTag string
---@return Bag bankBag
function GetUnitBankAccessBag(unitTag) end

---@param unitTag string
---@return BattlegroundAlliance battlegroundAlliance
function GetUnitBattlegroundAlliance(unitTag) end

---@param unitTag string
---@return number battleLevel # esoui type: `integer`
function GetUnitBattleLevel(unitTag) end

---@param unitTag string
---@param buffIndex number # esoui type: `luaindex`
---@return string buffName
---@return number timeStarted
---@return number timeEnding
---@return number buffSlot # esoui type: `integer`
---@return number stackCount # esoui type: `integer`
---@return string iconFilename # esoui type: `textureName`
---@return string buffType
---@return BuffEffectType effectType
---@return AbilityType abilityType
---@return StatusEffectType statusEffectType
---@return number abilityId # esoui type: `integer`
---@return boolean canClickOff # esoui type: `bool`
---@return boolean castByPlayer # esoui type: `bool`
function GetUnitBuffInfo(unitTag, buffIndex) end

---@param unitTag string
---@return string caption
function GetUnitCaption(unitTag) end

---@param unitTag string
---@return number champBattleLevel # esoui type: `integer`
function GetUnitChampionBattleLevel(unitTag) end

---@param unitTag string
---@return number championPoints # esoui type: `integer`
function GetUnitChampionPoints(unitTag) end

---@param unitTag string
---@return string className
function GetUnitClass(unitTag) end

---@param unitTag string
---@return number classId # esoui type: `integer`
function GetUnitClassId(unitTag) end

---@param unitTag string
---@return UIMonsterDifficulty difficult
function GetUnitDifficulty(unitTag) end

---@param unitTag string
---@return number disguiseState # esoui type: `integer`
function GetUnitDisguiseState(unitTag) end

---@param unitTag string
---@return string displayName
function GetUnitDisplayName(unitTag) end

---@param unitTag string
---@return number startTime
---@return number endTime
function GetUnitDrownTime(unitTag) end

---@param unitTag string
---@return number championPoints # esoui type: `integer`
function GetUnitEffectiveChampionPoints(unitTag) end

---@param unitTag string
---@return number level # esoui type: `integer`
function GetUnitEffectiveLevel(unitTag) end

---@param unitTag string
---@param rawEquipmentBonusRating number
---@return number relativeEquipmentBonusRating
function GetUnitEquipmentBonusRatingRelativeToLevel(unitTag, rawEquipmentBonusRating) end

---@param unitTag string
---@return Gender gender
function GetUnitGender(unitTag) end

---@param unitTag string
---@return number ownerGuildId # esoui type: `integer`
function GetUnitGuildKioskOwner(unitTag) end

---@param unitTag string
---@return number endTime
function GetUnitHidingEndTime(unitTag) end

---@param unitTag string
---@return number level # esoui type: `integer`
function GetUnitLevel(unitTag) end

---@param unitTag string
---@return string name
function GetUnitName(unitTag) end

---@return string name
function GetUnitNameHighlightedByReticle() end

---@param unitTag string
---@param powerType CombatMechanicType
---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
---@return number effectiveMax # esoui type: `integer`
function GetUnitPower(unitTag, powerType) end

---@param unitTag string
---@param poolIndex number # esoui type: `luaindex`
---@return number? type # esoui type: `integer:nilable`
---@return number current # esoui type: `integer`
---@return number max # esoui type: `integer`
---@return number effectiveMax # esoui type: `integer`
function GetUnitPowerInfo(unitTag, poolIndex) end

---@param unitTag string
---@return string race
function GetUnitRace(unitTag) end

---@param unitTag string
---@return number raceId # esoui type: `integer`
function GetUnitRaceId(unitTag) end

---@param unitTag string
---@return number zoneId # esoui type: `integer`
---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function GetUnitRawWorldPosition(unitTag) end

---@param unitTag string
---@return UnitReactionType unitReaction
function GetUnitReaction(unitTag) end

---@param unitTag string
---@return number red
---@return number green
---@return number blue
function GetUnitReactionColor(unitTag) end

---@param unitTag string
---@return UnitReactionColor reactionColorType
function GetUnitReactionColorType(unitTag) end

---@param unitTag string
---@return string icon
function GetUnitSilhouetteTexture(unitTag) end

---@param unitTag string
---@return number stealthState # esoui type: `integer`
function GetUnitStealthState(unitTag) end

---@param unitTag string
---@return string title
function GetUnitTitle(unitTag) end

---@param unitTag string
---@return number type # esoui type: `integer`
function GetUnitType(unitTag) end

---@param unitTag string
---@return number zoneId # esoui type: `integer`
---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function GetUnitWorldPosition(unitTag) end

---@param unitTag string
---@return number exp # esoui type: `integer`
function GetUnitXP(unitTag) end

---@param unitTag string
---@return number maxExp # esoui type: `integer`
function GetUnitXPMax(unitTag) end

---@param unitTag string
---@return string zoneName
function GetUnitZone(unitTag) end

---@param unitTag string
---@return number? zoneIndex # esoui type: `luaindex:nilable`
function GetUnitZoneIndex(unitTag) end

---@param mapId number # esoui type: `integer`
---@return number normalizedOffsetX
---@return number normalizedOffsetZ
---@return number normalizedWidth
---@return number normalizedHeight
function GetUniversallyNormalizedMapInfo(mapId) end

---@return number universalStyleId # esoui type: `integer`
function GetUniversalStyleId() end

---@return number? level # esoui type: `integer:nilable`
function GetUpcomingLevelUpRewardLevel() end

---@param index number # esoui type: `luaindex`
---@return number recipeListIndex # esoui type: `luaindex`
---@return number recipeIndex # esoui type: `luaindex`
function GetUpdatedRecipeIndices(index) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param skillLineRank number # esoui type: `luaindex`
---@return number? availableSkillRank # esoui type: `integer:nilable`
function GetUpgradeSkillHighestRankAvailableAtSkillLineRank(skillType, skillLineIndex, skillIndex, skillLineRank) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param urlType ApprovedURLType
---@return string urlText
function GetURLTextByType(urlType) end

---@param index number # esoui type: `luaindex`
---@return number validItemStyle # esoui type: `integer`
function GetValidItemStyleId(index) end

---@param triggerType GamepadVibrationTrigger
---@return number durationMS # esoui type: `integer`
---@return number coarseMotor
---@return number fineMotor
---@return number leftTriggerMotor
---@return number rightTriggerMotor
---@return boolean foundInfo # esoui type: `bool`
---@return string debugSourceInfo
function GetVibrationInfoFromTrigger(triggerType) end

---@param hotbarCategory HotBarCategory
---@return ActiveWeaponPair weaponPair
function GetWeaponPairFromHotbarCategory(hotbarCategory) end

---@return number level # esoui type: `integer`
function GetWeaponSwapUnlockedLevel() end

---@param depth number
---@return number frustumWidth
---@return number frustumHeight
function GetWorldDimensionsOfViewFrustumAtDepth(depth) end

---@param worldEventInstanceId number # esoui type: `integer`
---@return number worldEventId # esoui type: `integer`
function GetWorldEventId(worldEventInstanceId) end

---@param worldEventInstanceId number # esoui type: `integer`
---@param unitTag string
---@return MapDisplayPinType pinType
function GetWorldEventInstanceUnitPinType(worldEventInstanceId, unitTag) end

---@param worldEventInstanceId number # esoui type: `integer`
---@param unitIndex number # esoui type: `luaindex`
---@return string unitTag
function GetWorldEventInstanceUnitTag(worldEventInstanceId, unitIndex) end

---@param worldEventInstanceId number # esoui type: `integer`
---@return WorldEventLocationContext locationContext
function GetWorldEventLocationContext(worldEventInstanceId) end

---@param worldEventInstanceId number # esoui type: `integer`
---@return number zoneIndex # esoui type: `luaindex`
---@return number poiIndex # esoui type: `luaindex`
function GetWorldEventPOIInfo(worldEventInstanceId) end

---@param worldEventId number # esoui type: `integer`
---@return WorldEventType worldEventType
function GetWorldEventType(worldEventId) end

---@return string worldName
function GetWorldName() end

---@param actorCategory GameplayActorCategory
---@return Bag bagId
function GetWornBagForGameplayActorCategory(actorCategory) end

---@param wornBagId Bag
---@param equipSlot EquipSlot
---@return boolean slotHasItem # esoui type: `bool`
---@return string icon # esoui type: `textureName`
---@return boolean isHeldSlot # esoui type: `bool`
---@return boolean isHeldNow # esoui type: `bool`
---@return boolean isLocked # esoui type: `bool`
function GetWornItemInfo(wornBagId, equipSlot) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activitiyIndex number # esoui type: `luaindex`
---@return number activityId # esoui type: `integer`
function GetZoneActivityIdForZoneCompletionType(zoneId, zoneCompletionType, activitiyIndex) end

---@param zoneIndex number # esoui type: `luaindex`
---@return string description
function GetZoneDescription(zoneIndex) end

---@param zoneId number # esoui type: `integer`
---@return string description
function GetZoneDescriptionById(zoneId) end

---@param zoneIndex number # esoui type: `luaindex`
---@return number zoneId # esoui type: `integer`
function GetZoneId(zoneIndex) end

---@param zoneId number # esoui type: `integer`
---@return number zoneIndex # esoui type: `luaindex`
function GetZoneIndex(zoneId) end

---@param zoneId number # esoui type: `integer`
---@return string name
function GetZoneNameById(zoneId) end

---@param zoneIndex number # esoui type: `luaindex`
---@return string zoneName
function GetZoneNameByIndex(zoneIndex) end

---@return number? helpCategoryIndex # esoui type: `luaindex:nilable`
---@return number? helpIndex # esoui type: `luaindex:nilable`
function GetZoneStoriesHelpIndices() end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityId number # esoui type: `integer`
---@return string name
function GetZoneStoryActivityNameByActivityId(zoneId, zoneCompletionType, activityId) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityIndex number # esoui type: `luaindex`
---@return string name
function GetZoneStoryActivityNameByActivityIndex(zoneId, zoneCompletionType, activityIndex) end

---@param zoneId number # esoui type: `integer`
---@return string backgroundFile # esoui type: `textureName`
function GetZoneStoryGamepadBackground(zoneId) end

---@param zoneId number # esoui type: `integer`
---@return string backgroundFile # esoui type: `textureName`
function GetZoneStoryKeyboardBackground(zoneId) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityId number # esoui type: `integer`
---@return string description
function GetZoneStoryShortDescriptionByActivityId(zoneId, zoneCompletionType, activityId) end

---@param zoneId number # esoui type: `integer`
---@return number zoneStoryZoneId # esoui type: `integer`
function GetZoneStoryZoneIdForZoneId(zoneId) end

function GroupDisband() end

---@param unitTag string
function GroupInvite(unitTag) end

---@param characterOrDisplayName string
function GroupInviteByName(characterOrDisplayName) end

---@param unitTag string
function GroupKick(unitTag) end

---@param characterOrDisplayName string
function GroupKickByName(characterOrDisplayName) end

function GroupLeave() end

---@param unitTag string
function GroupPromote(unitTag) end

---@param guildName string
---@param guildAlliance Alliance
function GuildCreate(guildName, guildAlliance) end

---@param guildId number # esoui type: `integer`
---@param displayName string
function GuildDemote(guildId, displayName) end

---@return number numResults # esoui type: `integer`
function GuildFinderGetNumSearchResults() end

---@param index number # esoui type: `luaindex`
---@return number guildId # esoui type: `integer`
function GuildFinderGetSearchResultGuildId(index) end

---@return boolean isOnCooldown # esoui type: `bool`
function GuildFinderIsSearchOnCooldown() end

---@return number? searchId # esoui type: `integer:nilable`
function GuildFinderRequestSearch() end

---@param guildId number # esoui type: `integer`
---@param displayName string
---@return boolean inviteSent # esoui type: `bool`
function GuildInvite(guildId, displayName) end

---@param guildId number # esoui type: `integer`
---@param bidAmount number # esoui type: `integer`
function GuildKioskBid(guildId, bidAmount) end

---@param guildId number # esoui type: `integer`
function GuildKioskPurchase(guildId) end

---@param guildId number # esoui type: `integer`
function GuildLeave(guildId) end

---@param guildId number # esoui type: `integer`
---@param displayName string
function GuildPromote(guildId, displayName) end

---@param guildId number # esoui type: `integer`
---@param displayName string
function GuildRemove(guildId, displayName) end

---@param guildId number # esoui type: `integer`
---@param displayName string
---@param rankIndex number # esoui type: `luaindex`
function GuildSetRank(guildId, displayName, rankIndex) end

---@param guildId number # esoui type: `integer`
---@param displayName string
function GuildUninvite(guildId, displayName) end

---@param renderX number
---@param renderY number
---@param renderZ number
---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function GuiRender3DPositionToWorldPosition(renderX, renderY, renderZ) end

---@return boolean hasAcceptedReadyCheck # esoui type: `bool`
function HasAcceptedLFGReadyCheck() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasActivationHighlight(actionSlotIndex, hotbarCategory) end

---@return boolean hasActiveCompanion # esoui type: `bool`
function HasActiveCompanion() end

---@return boolean hasfindReplacementNotification # esoui type: `bool`
function HasActivityFindReplacementNotification() end

---@param eulaType EULAType
---@return boolean hasAgreed # esoui type: `bool`
function HasAgreedToEULA(eulaType) end

---@return boolean hasNotification # esoui type: `bool`
function HasAllianceLockPendingNotification() end

---@return boolean canEdit # esoui type: `bool`
function HasAnyEditingPermissionsForCurrentHouse() end

---@param bagId Bag
---@param excludeStolenItems boolean # esoui type: `bool`
---@return boolean hasJunk # esoui type: `bool`
function HasAnyJunk(bagId, excludeStolenItems) end

---@return boolean hasAutoMapNavigationTarget # esoui type: `bool`
function HasAutoMapNavigationTarget() end

---@return boolean hasBlockedCompanion # esoui type: `bool`
function HasBlockedCompanion() end

---@param nodeIndex number # esoui type: `luaindex`
---@return boolean hasCompletedPOI # esoui type: `bool`
function HasCompletedFastTravelNodePOI(nodeIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasCostFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasAccess # esoui type: `bool`
function HasCraftBagAccess() end

---@return boolean hasTransferNotification # esoui type: `bool`
function HasCraftBagAutoTransferNotification() end

---@return boolean hasFreeTrialNotification # esoui type: `bool`
function HasEsoPlusFreeTrialNotification() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasFallingFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasNotification # esoui type: `bool`
function HasGiftingGracePeriodStartedNotification() end

---@return boolean hasGiftingUnlockedNotification # esoui type: `bool`
function HasGiftingUnlockedNotification() end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@return boolean hasEverBeenRequested # esoui type: `bool`
function HasGuildHistoryCategoryEverBeenRequested(guildId, category) end

---@param guildId number # esoui type: `integer`
---@return boolean dataChanged # esoui type: `bool`
function HasGuildRecruitmentDataChanged(guildId) end

---@param text string
---@return number hashValue # esoui type: `integer`
function HashString(text) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean hasItemInSlot # esoui type: `bool`
function HasItemInSlot(bagId, slotIndex) end

---@param itemId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param itemTraitType ItemTraitType
---@param itemStyleId number # esoui type: `integer`
---@param targetFunctionalQuality ItemQuality
---@return boolean hasItem # esoui type: `bool`
function HasItemToImproveForWrit(itemId, materialItemId, itemTraitType, itemStyleId, targetFunctionalQuality) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasLeapKeepTargetFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasReadyCheckNotification # esoui type: `bool`
function HasLFGReadyCheckNotification() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasMountedFailure(actionSlotIndex, hotbarCategory) end

---@return boolean result # esoui type: `bool`
function HasMountSkin() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasNonCostStateFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasPendingCompanion # esoui type: `bool`
function HasPendingCompanion() end

---@return boolean hasPendingVote # esoui type: `bool`
function HasPendingGroupElectionVote() end

---@return boolean hasPendingChanges # esoui type: `bool`
function HasPendingHeraldryChanges() end

---@return boolean hasPendingReward # esoui type: `bool`
function HasPendingLevelUpReward() end

---@param setting HousePermissionSetting
---@return boolean hasSetting # esoui type: `bool`
function HasPermissionSettingForCurrentHouse(setting) end

---@param bagId Bag
---@return boolean hasPoison # esoui type: `bool`
function HasPoisonInBag(bagId) end

---@return boolean ended # esoui type: `bool`
function HasRaidEnded() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasRangeFailure(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasReincarnatingFailure(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasRequirementFailure(actionSlotIndex, hotbarCategory) end

---@param tutorialIndex number # esoui type: `luaindex`
---@return boolean seen # esoui type: `bool`
function HasSeenTutorial(tutorialIndex) end

---@return boolean hasShownAnnouncement # esoui type: `bool`
function HasShownMarketAnnouncement() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasStatusEffectFailure(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasSubzoneFailure(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasSwimmingFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasSynergy # esoui type: `bool`
function HasSynergyEffects() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasTargetFailure(actionSlotIndex, hotbarCategory) end

---@return boolean hasListing # esoui type: `bool`
function HasTradingHouseListings() end

---@return boolean unread # esoui type: `bool`
function HasUnreadMail() end

---@return boolean hasNextReward # esoui type: `bool`
function HasUpcomingLevelUpReward() end

---@param eulaType EULAType
---@return boolean hasViewed # esoui type: `bool`
function HasViewedEULA(eulaType) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean status # esoui type: `bool`
function HasWeaponSlotFailure(actionSlotIndex, hotbarCategory) end

---@param onlyConsiderWhileMoving boolean # esoui type: `bool`
function HideMouse(onlyConsiderWhileMoving) end

---@param aWorldX number # esoui type: `integer`
---@param aWorldY number # esoui type: `integer`
---@param aWorldZ number # esoui type: `integer`
function HousingEditorAdjustPrecisionEditingPosition(aWorldX, aWorldY, aWorldZ) end

---@param aPitchRadians number
---@param aYawRadians number
---@param aRollRadians number
function HousingEditorAdjustSelectedObjectRotation(aPitchRadians, aYawRadians, aRollRadians) end

---@return HousingRequestResult result
function HousingEditorAlignFurnitureToSurface() end

---@return HousingRequestResult result
function HousingEditorAlignSelectedObjectToSurface() end

---@return HousingRequestResult result
function HousingEditorAlignSelectedPathNodeToSurface() end

---@return HousingRequestResult result
function HousingEditorBeginLinkingTargettedFurniture() end

---@param index number # esoui type: `luaindex`
---@return HousingRequestResult result
function HousingEditorBeginPlaceNewPathNode(index) end

---@param aAxis AxisTypes
---@param aOffsetRadians number
---@param aInitialPitchRadians number
---@param aInitialYawRadians number
---@param aInitialRollRadians number
---@return number pitchRadians
---@return number yawRadians
---@return number rollRadians
function HousingEditorCalculateRotationAboutAxis(aAxis, aOffsetRadians, aInitialPitchRadians, aInitialYawRadians, aInitialRollRadians) end

---@param collectibleId number # esoui type: `integer`
---@return boolean canBePathed # esoui type: `bool`
function HousingEditorCanCollectibleBePathed(collectibleId) end

---@param furnitureId number # esoui type: `id64`
---@return boolean canBePathed # esoui type: `bool`
function HousingEditorCanFurnitureBePathed(furnitureId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function HousingEditorCanPlaceCollectible(collectibleId) end

---@return HousingRequestResult result
function HousingEditorCanRemoveAllChildrenFromPendingFurniture() end

---@return HousingRequestResult result
function HousingEditorCanRemoveParentFromPendingFurniture() end

---@return boolean hasTarget # esoui type: `bool`
function HousingEditorCanSelectTargettedFurniture() end

---@param aWorldX1 number # esoui type: `integer`
---@param aWorldY1 number # esoui type: `integer`
---@param aWorldZ1 number # esoui type: `integer`
---@param aWorldX2 number # esoui type: `integer`
---@param aWorldY2 number # esoui type: `integer`
---@param aWorldZ2 number # esoui type: `integer`
---@return number aClippedWorldX1 # esoui type: `integer`
---@return number aClippedWorldY1 # esoui type: `integer`
---@return number aClippedWorldZ1 # esoui type: `integer`
---@return number aClippedWorldX2 # esoui type: `integer`
---@return number aClippedWorldY2 # esoui type: `integer`
---@return number aClippedWorldZ2 # esoui type: `integer`
function HousingEditorClipLineSegmentToViewFrustum(aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2) end

---@param collectibleId number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function HousingEditorCreateCollectibleFurnitureForPlacement(collectibleId) end

---@param marketProductId number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function HousingEditorCreateFurnitureForPlacementFromMarketProduct(marketProductId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function HousingEditorCreateItemFurnitureForPlacement(bagId, slotIndex) end

---@return HousingRequestResult result
function HousingEditorEditTargettedFurniturePath() end

function HousingEditorEndCurrentPreview() end

function HousingEditorEndLocalPlayerPairedFurnitureInteraction() end

---@param furnitureId number # esoui type: `id64`
---@return number minLocalX
---@return number minLocalY
---@return number minLocalZ
---@return number maxLocalX
---@return number maxLocalY
---@return number maxLocalZ
function HousingEditorGetFurnitureLocalBounds(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number pitchRadians
---@return number yawRadians
---@return number rollRadians
function HousingEditorGetFurnitureOrientation(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return PathFollowType followType
function HousingEditorGetFurniturePathFollowType(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return FurniturePathState pathState
function HousingEditorGetFurniturePathState(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number minWorldX # esoui type: `integer`
---@return number minWorldY # esoui type: `integer`
---@return number minWorldZ # esoui type: `integer`
---@return number maxWorldX # esoui type: `integer`
---@return number maxWorldY # esoui type: `integer`
---@return number maxWorldZ # esoui type: `integer`
function HousingEditorGetFurnitureWorldBounds(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number centerX
---@return number centerY
---@return number centerZ
function HousingEditorGetFurnitureWorldCenter(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number offsetX
---@return number offsetY
---@return number offsetZ
function HousingEditorGetFurnitureWorldOffset(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function HousingEditorGetFurnitureWorldPosition(furnitureId) end

---@return HousingPendingLinkRelationship result
function HousingEditorGetLinkRelationshipFromSelectedChildToPendingFurniture() end

---@param furnitureId number # esoui type: `id64`
---@return number numNodes # esoui type: `integer`
function HousingEditorGetNumPathNodesForFurniture(furnitureId) end

---@return number numPathNodes # esoui type: `integer`
function HousingEditorGetNumPathNodesInSelectedFurniture() end

---@param pathDelayTime HousingPathDelayTime
---@return number timeMS # esoui type: `integer`
function HousingEditorGetPathNodeDelayTimeFromValue(pathDelayTime) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return number pitchRadians
---@return number yawRadians
---@return number rollRadians
function HousingEditorGetPathNodeOrientation(furnitureId, index) end

---@param timeMS number # esoui type: `integer`
---@return HousingPathDelayTime pathDelayTime
function HousingEditorGetPathNodeValueFromDelayTime(timeMS) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function HousingEditorGetPathNodeWorldPosition(furnitureId, index) end

---@return HousingRequestResult result
function HousingEditorGetPendingBadLinkResult() end

---@return HousingEditorPlacementType placementType
function HousingEditorGetPlacementType() end

---@return number aMovementCentimeters # esoui type: `integer`
function HousingEditorGetPrecisionMoveUnits() end

---@return HousingEditorPrecisionPlacementMode precisionPlacementMode
function HousingEditorGetPrecisionPlacementMode() end

---@return number aRotationRadians
function HousingEditorGetPrecisionRotateUnits() end

---@param aScreenX number # esoui type: `integer`
---@param aScreenY number # esoui type: `integer`
---@param aWorldX1 number # esoui type: `integer`
---@param aWorldY1 number # esoui type: `integer`
---@param aWorldZ1 number # esoui type: `integer`
---@param aWorldX2 number # esoui type: `integer`
---@param aWorldY2 number # esoui type: `integer`
---@param aWorldZ2 number # esoui type: `integer`
---@param aWorldX3 number # esoui type: `integer`
---@param aWorldY3 number # esoui type: `integer`
---@param aWorldZ3 number # esoui type: `integer`
---@return number aWorldX # esoui type: `integer`
---@return number aWorldY # esoui type: `integer`
---@return number aWorldZ # esoui type: `integer`
function HousingEditorGetScreenPointWorldPlaneIntersection(aScreenX, aScreenY, aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2, aWorldX3, aWorldY3, aWorldZ3) end

---@return number? furnitureId # esoui type: `id64:nilable`
function HousingEditorGetSelectedFurnitureId() end

---@return boolean conformToGround # esoui type: `bool`
function HousingEditorGetSelectedFurniturePathConformToGround() end

---@return PathFollowType followType
function HousingEditorGetSelectedFurniturePathFollowType() end

---@return FurniturePathState pathState
function HousingEditorGetSelectedFurniturePathState() end

---@return number stackCount # esoui type: `integer`
function HousingEditorGetSelectedFurnitureStackCount() end

---@return number pitchRadians
---@return number yawRadians
---@return number rollRadians
function HousingEditorGetSelectedObjectOrientation() end

---@return number centerX
---@return number centerY
---@return number centerZ
function HousingEditorGetSelectedObjectWorldCenter() end

---@return number worldX # esoui type: `integer`
---@return number worldY # esoui type: `integer`
---@return number worldZ # esoui type: `integer`
function HousingEditorGetSelectedObjectWorldPosition() end

---@return number timeMS # esoui type: `integer`
function HousingEditorGetSelectedPathNodeDelayTime() end

---@return number furnitureId # esoui type: `id64`
function HousingEditorGetSelectedPathNodeFurnitureId() end

---@return number pathIndex # esoui type: `luaindex`
function HousingEditorGetSelectedPathNodeIndex() end

---@return HousingPathMovementSpeed movementSpeed
function HousingEditorGetSelectedPathNodeSpeed() end

---@param furnitureId number # esoui type: `id64`
---@return number nodeIndex # esoui type: `luaindex`
function HousingEditorGetStartingNodeIndexForPath(furnitureId) end

---@return number furnitureId # esoui type: `id64`
---@return number? pathIndex # esoui type: `luaindex:nilable`
function HousingEditorGetTargetInfo() end

---@return boolean hasTarget # esoui type: `bool`
function HousingEditorHasSelectablePathNode() end

---@return boolean isInteracting # esoui type: `bool`
function HousingEditorIsLocalPlayerInPairedFurnitureInteraction() end

---@return boolean placingNewNode # esoui type: `bool`
function HousingEditorIsPlacingNewNode() end

---@return boolean isSelectingAnyObject # esoui type: `bool`
function HousingEditorIsSelectingHousingObject() end

---@return boolean enabled # esoui type: `bool`
function HousingEditorIsSurfaceDragModeEnabled() end

function HousingEditorJumpToSafeLocation() end

---@param aAxis AxisTypes
---@param aMovementForce number
function HousingEditorMoveSelectedObject(aAxis, aMovementForce) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return number timeMS # esoui type: `integer`
function HousingEditorPathNodeDelayTime(furnitureId, index) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return HousingPathMovementSpeed movementSpeed
function HousingEditorPathNodeSpeed(furnitureId, index) end

---@return HousingRequestResult result
function HousingEditorPerformPendingLinkOperation() end

---@param houseTemplateId number # esoui type: `integer`
function HousingEditorPreviewTemplate(houseTemplateId) end

---@param aPushDistance number
function HousingEditorPushSelectedObject(aPushDistance) end

---@return HousingRequestResult result
function HousingEditorReleaseSelectedPathNode() end

---@return HousingRequestResult result
function HousingEditorRemoveAllChildrenFromPendingFurniture() end

---@return HousingRequestResult result
function HousingEditorRemoveParentFromPendingFurniture() end

---@param furnitureId number # esoui type: `id64`
---@param newState FurniturePathState
---@param newFollowType PathFollowType
---@param newConformToGround boolean # esoui type: `bool`
---@return HousingRequestResult result
function HousingEditorRequestChangeFurniturePathData(furnitureId, newState, newFollowType, newConformToGround) end

---@param furnitureId number # esoui type: `id64`
---@param pitchRadians number
---@param yawRadians number
---@param rollRadians number
---@return HousingRequestResult result
function HousingEditorRequestChangeOrientation(furnitureId, pitchRadians, yawRadians, rollRadians) end

---@param furnitureId number # esoui type: `id64`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return HousingRequestResult result
function HousingEditorRequestChangePosition(furnitureId, worldX, worldY, worldZ) end

---@param furnitureId number # esoui type: `id64`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@param pitchRadians number
---@param yawRadians number
---@param rollRadians number
---@return HousingRequestResult result
function HousingEditorRequestChangePositionAndOrientation(furnitureId, worldX, worldY, worldZ, pitchRadians, yawRadians, rollRadians) end

---@param furnitureId number # esoui type: `id64`
---@param objectStateIndex? number # esoui type: `integer:nilable`
---@return HousingRequestResult result
function HousingEditorRequestChangeState(furnitureId, objectStateIndex) end

---@param furnitureId number # esoui type: `id64`
---@return HousingRequestResult result
function HousingEditorRequestClearFurnitureParent(furnitureId) end

---@param collectibleId number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@param pitchRadians number
---@param yawRadians number
---@param rollRadians number
---@return HousingRequestResult result
function HousingEditorRequestCollectiblePlacement(collectibleId, worldX, worldY, worldZ, pitchRadians, yawRadians, rollRadians) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@param headingRadians number
---@param speed HousingPathMovementSpeed
---@param reachDestinationDelayTime number # esoui type: `integer`
---@return HousingRequestResult result
function HousingEditorRequestInsertPathNode(furnitureId, index, worldX, worldY, worldZ, headingRadians, speed, reachDestinationDelayTime) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@param pitchRadians number
---@param yawRadians number
---@param rollRadians number
---@return HousingRequestResult result
function HousingEditorRequestItemPlacement(bagId, slotIndex, worldX, worldY, worldZ, pitchRadians, yawRadians, rollRadians) end

---@param mode HousingEditorMode
---@return HousingRequestResult result
function HousingEditorRequestModeChange(mode) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@param headingRadians number
---@param speed HousingPathMovementSpeed
---@param reachDestinationDelayTime number # esoui type: `integer`
---@return HousingRequestResult result
function HousingEditorRequestModifyPathNode(furnitureId, index, worldX, worldY, worldZ, headingRadians, speed, reachDestinationDelayTime) end

---@return HousingRequestResult result
function HousingEditorRequestPlaceSelectedPathNode() end

---@param furnitureId number # esoui type: `id64`
---@return HousingRequestResult result
function HousingEditorRequestRemoveFurniture(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return HousingRequestResult result
function HousingEditorRequestRemovePathNode(furnitureId, index) end

---@return HousingRequestResult result
function HousingEditorRequestRemoveSelectedFurniture() end

---@return HousingRequestResult result
function HousingEditorRequestRemoveSelectedPathNode() end

---@param furnitureId number # esoui type: `id64`
---@param collectiblieId number # esoui type: `integer`
---@return HousingRequestResult result
function HousingEditorRequestReplacePathCollectible(furnitureId, collectiblieId) end

---@return HousingRequestResult result
function HousingEditorRequestRestartAllFurniturePaths() end

---@return HousingRequestResult result
function HousingEditorRequestSelectedPlacement() end

---@param childFurnitureId number # esoui type: `id64`
---@param parentFurnitureId number # esoui type: `id64`
---@return HousingRequestResult result
function HousingEditorRequestSetFurnitureParent(childFurnitureId, parentFurnitureId) end

---@param furnitureId number # esoui type: `id64`
---@param startingIndex number # esoui type: `luaindex`
---@return HousingRequestResult result
function HousingEditorRequestSetStartingNodeIndex(furnitureId, startingIndex) end

---@param rotationForce number
---@return HousingRequestResult result
function HousingEditorRotatePathNode(rotationForce) end

---@param aAxis AxisTypes
---@param aRotationForce number
function HousingEditorRotateSelectedObject(aAxis, aRotationForce) end

---@param furnitureId number # esoui type: `id64`
---@return HousingRequestResult result
function HousingEditorSelectFurnitureById(furnitureId) end

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return HousingRequestResult result
function HousingEditorSelectPathNodeByIndex(furnitureId, index) end

---@return HousingRequestResult result
function HousingEditorSelectTargettedFurniture() end

---@return HousingRequestResult result
function HousingEditorSelectTargettedPathNode() end

---@return HousingRequestResult result
function HousingEditorSelectTargetUnderReticle() end

---@param placementType HousingEditorPlacementType
function HousingEditorSetPlacementType(placementType) end

---@param aMovementCentimeters number # esoui type: `integer`
function HousingEditorSetPrecisionMoveUnits(aMovementCentimeters) end

---@param placementMode HousingEditorPrecisionPlacementMode
function HousingEditorSetPrecisionPlacementMode(placementMode) end

---@param aRotationRadians number
function HousingEditorSetPrecisionRotateUnits(aRotationRadians) end

---@param newPathType PathFollowType
---@return HousingRequestResult result
function HousingEditorSetSelectedFurniturePathFollowType(newPathType) end

function HousingEditorStraightenSelectedObject() end

function HousingEditorTogglePlacementType() end

function HousingEditorTogglePrecisionPlacementMode() end

---@return HousingRequestResult result
function HousingEditorToggleSelectedFurniturePathConformToGround() end

---@return HousingRequestResult result
function HousingEditorToggleSelectedFurniturePathState() end

---@return HousingRequestResult result
function HousingEditorToggleSelectedPathNodeDelayTime() end

---@return HousingRequestResult result
function HousingEditorToggleSelectedPathNodeSpeed() end

function HousingEditorToggleSurfaceDragMode() end

---@param id number # esoui type: `id64`
---@return string stringDesc
function Id64ToString(id) end

---@param itemToImproveBagId Bag
---@param itemToImproveSlotIndex number # esoui type: `integer`
---@param numBoostersToUse number # esoui type: `integer`
function ImproveSmithingItem(itemToImproveBagId, itemToImproveSlotIndex, numBoostersToUse) end

function InitializePendingDyes() end

---@param guildId number # esoui type: `integer`
function InitializePendingGuildRanks(guildId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param bag Bag
---@param slotIndex number # esoui type: `integer`
function InitiateConfirmUseInventoryItem(bag, slotIndex) end

---@param layerName string
---@param activeLayerIndex number # esoui type: `luaindex`
function InsertActionLayerByName(layerName, activeLayerIndex) end

---@param layerName string
---@param existingLayerName string
function InsertNamedActionLayerAbove(layerName, existingLayerName) end

---@return boolean is64Bit # esoui type: `bool`
function Is64BitClient() end

---@param abilityId number # esoui type: `integer`
---@return boolean isAbilityDurationToggled # esoui type: `bool`
function IsAbilityDurationToggled(abilityId) end

---@param abilityId number # esoui type: `integer`
---@return boolean isPassive # esoui type: `bool`
function IsAbilityPassive(abilityId) end

---@param abilityId number # esoui type: `integer`
---@return boolean isPermanent # esoui type: `bool`
function IsAbilityPermanent(abilityId) end

---@param abilityId number # esoui type: `integer`
---@return boolean isUltimate # esoui type: `bool`
function IsAbilityUltimate(abilityId) end

---@param achievementId number # esoui type: `integer`
---@return boolean completed # esoui type: `bool`
function IsAchievementComplete(achievementId) end

---@return boolean isRespeccable # esoui type: `bool`
function IsActionBarRespeccable() end

---@param layerName string
---@return boolean active # esoui type: `bool`
function IsActionLayerActiveByName(layerName) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean isLocked # esoui type: `bool`
function IsActionSlotLocked(actionSlotIndex, hotbarCategory) end

---@param equipSlot EquipSlot
---@return boolean isActiveCombatRelatedEquipSlot # esoui type: `bool`
function IsActiveCombatRelatedEquipmentSlot(equipSlot) end

---@return boolean isActiveDisplayEnabled # esoui type: `bool`
function IsActiveDisplayEnabledOnPlatform() end

---@return boolean isInBattleground # esoui type: `bool`
function IsActiveWorldBattleground() end

---@return boolean isWorldGroupOwnable # esoui type: `bool`
function IsActiveWorldGroupOwnable() end

---@param activityId number # esoui type: `integer`
---@return boolean isActivityAvailableFromPlayerLocation # esoui type: `bool`
function IsActivityAvailableFromPlayerLocation(activityId) end

---@param activity LFGActivity
---@return boolean isEligible # esoui type: `bool`
function IsActivityEligibleForDailyReward(activity) end

---@return boolean isActive # esoui type: `bool`
function IsAgentChatActive() end

---@param reagentBagId Bag
---@param reagentSlotIndex number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@return boolean isKnown # esoui type: `bool`
function IsAlchemyItemTraitKnown(reagentBagId, reagentSlotIndex, traitIndex) end

---@param itemType ItemType
---@return boolean isAlchemySolvent # esoui type: `bool`
function IsAlchemySolvent(itemType) end

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param targetItemId number # esoui type: `integer`
---@param targetMaterialItemId number # esoui type: `integer`
---@return boolean isCorrectSolvent # esoui type: `bool`
function IsAlchemySolventForItemAndMaterialId(solventBagId, solventSlotIndex, targetItemId, targetMaterialItemId) end

---@return boolean isAltDown # esoui type: `bool`
function IsAltKeyDown() end

---@param antiquityId number # esoui type: `integer`
---@return boolean allowsRepeats # esoui type: `bool`
function IsAntiquityRepeatable(antiquityId) end

---@return boolean isAnyGroupMemberInDungeon # esoui type: `bool`
function IsAnyGroupMemberInDungeon() end

---@return boolean isPlaying # esoui type: `bool`
function IsAnyVideoPlaying() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean effectivenessReduced # esoui type: `bool`
function IsArmorEffectivenessReduced(bagId, slotIndex) end

---@param battlegroundContext number # esoui type: `integer`
---@return boolean isAssigned # esoui type: `bool`
function IsAssignedBattlegroundContext(battlegroundContext) end

---@return boolean isCrafting # esoui type: `bool`
function IsAwaitingCraftingProcessResponse() end

---@return boolean isBankOpen # esoui type: `bool`
function IsBankOpen() end

---@return boolean isAvailable # esoui type: `bool`
function IsBankUpgradeAvailable() end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isInBattleground # esoui type: `bool`
function IsBattlegroundObjective(keepId, objectiveId, battlegroundContext) end

---@return boolean active # esoui type: `bool`
function IsBlockActive() end

---@return boolean isCapsLockOn # esoui type: `bool`
function IsCapsLockOn() end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isCaptured # esoui type: `bool`
function IsCaptureAreaObjectiveCaptured(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isCarried # esoui type: `bool`
function IsCarryableObjectiveCarriedByLocalPlayer(keepId, objectiveId, battlegroundContext) end

---@param chamberIndex number # esoui type: `luaindex`
---@return boolean solved # esoui type: `bool`
function IsChamberSolved(chamberIndex) end

---@param championSkillId number # esoui type: `integer`
---@return boolean isRoot # esoui type: `bool`
function IsChampionSkillClusterRoot(championSkillId) end

---@param championSkillId number # esoui type: `integer`
---@return boolean isRoot # esoui type: `bool`
function IsChampionSkillRootNode(championSkillId) end

---@return boolean unlocked # esoui type: `bool`
function IsChampionSystemUnlocked() end

---@param chapterUpgradeId number # esoui type: `integer`
---@return boolean isChapterOwned # esoui type: `bool`
function IsChapterOwned(chapterUpgradeId) end

---@param chapterUpgradeId number # esoui type: `integer`
---@return boolean isPreRelease # esoui type: `bool`
function IsChapterPreRelease(chapterUpgradeId) end

---@param characterName string
---@return boolean inGroup # esoui type: `bool`
function IsCharacterInGroup(characterName) end

---@return boolean canPreview # esoui type: `bool`
function IsCharacterPreviewingAvailable() end

---@param category ChatChannelCategories
---@return boolean enabled # esoui type: `bool`
function IsChatBubbleCategoryEnabled(category) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
---@param chatCategory ChatChannelCategories
---@return boolean enabled # esoui type: `bool`
function IsChatContainerTabCategoryEnabled(chatContainerIndex, tabIndex, chatCategory) end

---@return boolean isEnabled # esoui type: `bool`
function IsChatLogEnabled() end

---@return boolean enabled # esoui type: `bool`
function IsChatSystemAvailableForCurrentPlatform() end

---@return boolean systemAvailable # esoui type: `bool`
function IsChromaSystemAvailable() end

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
---@return boolean isActive # esoui type: `bool`
function IsCollectibleActive(collectibleId, actorCategory) end

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
---@return boolean isCollectibleAvailable # esoui type: `bool`
function IsCollectibleAvailableToActorCategory(collectibleId, actorCategory) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isBlacklisted # esoui type: `bool`
function IsCollectibleBlacklisted(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isBlocked # esoui type: `bool`
function IsCollectibleBlocked(collectibleId) end

---@param collectibleCategoryType CollectibleCategoryType
---@return boolean isPlaceable # esoui type: `bool`
function IsCollectibleCategoryPlaceableFurniture(collectibleCategoryType) end

---@param collectibleCategoryType CollectibleCategoryType
---@return boolean isSlottable # esoui type: `bool`
function IsCollectibleCategorySlottable(collectibleCategoryType) end

---@param collectibleCategoryType CollectibleCategoryType
---@param actorCategory GameplayActorCategory
---@return boolean isDefault # esoui type: `bool`
function IsCollectibleCategoryTypeSetToDefault(collectibleCategoryType, actorCategory) end

---@param collectibleCategoryType CollectibleCategoryType
---@param actorCategory GameplayActorCategory
---@return boolean isUsable # esoui type: `bool`
function IsCollectibleCategoryUsable(collectibleCategoryType, actorCategory) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isDynamicallyHidden # esoui type: `bool`
function IsCollectibleDynamicallyHidden(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isNew # esoui type: `bool`
function IsCollectibleNew(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean owned # esoui type: `bool`
function IsCollectibleOwnedByDefId(collectibleId) end

---@param actorCategory GameplayActorCategory
---@param collectibleId number # esoui type: `integer`
---@return boolean isPresent # esoui type: `bool`
function IsCollectiblePresentInEffectivelyEquippedOutfit(actorCategory, collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isPurchasable # esoui type: `bool`
function IsCollectiblePurchasable(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isRenameable # esoui type: `bool`
function IsCollectibleRenameable(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isSlottable # esoui type: `bool`
function IsCollectibleSlottable(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isUnlocked # esoui type: `bool`
function IsCollectibleUnlocked(collectibleId) end

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
---@return boolean isUsable # esoui type: `bool`
function IsCollectibleUsable(collectibleId, actorCategory) end

---@param collectibleId number # esoui type: `integer`
---@return boolean isValidForPlayer # esoui type: `bool`
function IsCollectibleValidForPlayer(collectibleId) end

---@return boolean isCommandDown # esoui type: `bool`
function IsCommandKeyDown() end

---@param abilityId number # esoui type: `integer`
---@return boolean isUnlocked # esoui type: `bool`
function IsCompanionAbilityUnlocked(abilityId) end

---@return boolean isConsoleUI # esoui type: `bool`
function IsConsoleUI() end

---@return boolean isCtrlDown # esoui type: `bool`
function IsControlKeyDown() end

---@param number number # esoui type: `integer`
---@return boolean isSingular # esoui type: `bool`
function IsCountSingularForm(number) end

---@return boolean creatingForFirstTime # esoui type: `bool`
function IsCreatingHeraldryForFirstTime() end

---@param currencyType CurrencyType
---@param currencyLocation CurrencyLocation
---@return boolean isCapped # esoui type: `bool`
function IsCurrencyCapped(currencyType, currencyLocation) end

---@param currencyType CurrencyType
---@return boolean defaultIsLowercase # esoui type: `bool`
function IsCurrencyDefaultNameLowercase(currencyType) end

---@param currencyType CurrencyType
---@return boolean isValidCurrency # esoui type: `bool`
function IsCurrencyValid(currencyType) end

---@return boolean isTimed # esoui type: `bool`
function IsCurrentBattlegroundStateTimed() end

---@return boolean isComplete # esoui type: `bool`
function IsCurrentLFGActivityComplete() end

---@return boolean currentlyCustomizing # esoui type: `bool`
function IsCurrentlyCustomizingHeraldry() end

---@return boolean isPreviewing # esoui type: `bool`
function IsCurrentlyPreviewing() end

---@param collectibleId number # esoui type: `integer`
---@return boolean isPreviewing # esoui type: `bool`
function IsCurrentlyPreviewingFurnitureCollectible(collectibleId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isPreviewing # esoui type: `bool`
function IsCurrentlyPreviewingInventoryItem(bagId, slotIndex) end

---@param furnitureId number # esoui type: `id64`
---@return boolean isPreviewing # esoui type: `bool`
function IsCurrentlyPreviewingPlacedFurniture(furnitureId) end

---@return boolean isSearching # esoui type: `bool`
function IsCurrentlySearchingForGroup() end

---@return boolean isCutsceneActive # esoui type: `bool`
function IsCutsceneActive() end

---@param rewardIndex number # esoui type: `luaindex`
---@return boolean isClaimed # esoui type: `bool`
function IsDailyLoginRewardInCurrentMonthClaimed(rewardIndex) end

---@param displayName string
---@return boolean isDecorated # esoui type: `bool`
function IsDecoratedDisplayName(displayName) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@return boolean isLoaded # esoui type: `bool`
function IsDeferredSettingLoaded(system, settingId) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@return boolean isLoaded # esoui type: `bool`
function IsDeferredSettingLoading(system, settingId) end

---@param diggingActiveSkill DiggingActiveSkills
---@return boolean isUnlocked # esoui type: `bool`
function IsDiggingActiveSkillUnlocked(diggingActiveSkill) end

---@return boolean isGameActive # esoui type: `bool`
function IsDiggingGameActive() end

---@return boolean isGameOver # esoui type: `bool`
function IsDiggingGameOver() end

---@param digSiteId number # esoui type: `integer`
---@return boolean isAssociated # esoui type: `bool`
function IsDigSiteAssociatedWithTrackedAntiquity(digSiteId) end

---@return boolean isLimited # esoui type: `bool`
function IsDigSpotRadarLimited() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param displayName string
---@return boolean isInTable # esoui type: `bool`
function IsDisplayNameInItemBoPAccountTable(bagId, slotIndex, displayName) end

---@return boolean duelingDeath # esoui type: `bool`
function IsDuelingDeath() end

---@param dyeIndex number # esoui type: `luaindex`
---@return boolean isKnown # esoui type: `bool`
function IsDyeIndexKnown(dyeIndex) end

---@return boolean isInline # esoui type: `bool`
function IsEncounterLogAbilityInfoInline() end

---@return boolean isEnabled # esoui type: `bool`
function IsEncounterLogEnabled() end

---@return boolean isVerbose # esoui type: `bool`
function IsEncounterLogVerboseFormat() end

---@return boolean availableForAccount # esoui type: `bool`
function IsEnlightenedAvailableForAccount() end

---@return boolean availableForCharacter # esoui type: `bool`
function IsEnlightenedAvailableForCharacter() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isEquipable # esoui type: `bool`
---@return number resultErrorCodeIfFailed # esoui type: `integer`
function IsEquipable(bagId, slotIndex) end

---@param equipSlotVisualCategory EquipSlotVisualCategory
---@param actorCategory GameplayActorCategory
---@return boolean isHidden # esoui type: `bool`
function IsEquipSlotVisualCategoryHidden(equipSlotVisualCategory, actorCategory) end

---@return boolean isESOPlusSubscriber # esoui type: `bool`
function IsESOPlusSubscriber() end

---@return boolean enabled # esoui type: `bool`
function IsFeedbackGatheringEnabled() end

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return boolean isGuildOwned # esoui type: `bool`
function IsForwardCampGuildOwned(battlegroundContext, index) end

---@param charOrDisplayName string
---@return boolean isFriend # esoui type: `bool`
function IsFriend(charOrDisplayName) end

---@return boolean isActive # esoui type: `bool`
function IsGameCameraActive() end

---@return boolean isClickableFixture # esoui type: `bool`
function IsGameCameraClickableFixture() end

---@return boolean isClickableFixtureActive # esoui type: `bool`
function IsGameCameraClickableFixtureActive() end

---@return boolean isUnitMonster # esoui type: `bool`
function IsGameCameraInteractableUnitMonster() end

---@return boolean valid # esoui type: `bool`
function IsGameCameraPreferredTargetValid() end

---@return boolean valid # esoui type: `bool`
function IsGameCameraSiegeControlled() end

---@return boolean active # esoui type: `bool`
function IsGameCameraUIModeActive() end

---@return boolean attackable # esoui type: `bool`
function IsGameCameraUnitHighlightedAttackable() end

---@param showOption HelpShowOptions
---@return boolean isGamepadOption # esoui type: `bool`
function IsGamepadHelpOption(showOption) end

---@return boolean gamepadTouchpadActive # esoui type: `bool`
function IsGamepadTouchpadActive() end

---@return boolean isGamepadUISupported # esoui type: `bool`
function IsGamepadUISupported() end

---@param recipientName string
---@return GiftBoxActionResult result
function IsGiftRecipientNameValid(recipientName) end

---@param unitTag string
---@return boolean isGroupCompanionUnitTag # esoui type: `bool`
function IsGroupCompanionUnitTag(unitTag) end

---@return boolean isGroupCrossAlliance # esoui type: `bool`
function IsGroupCrossAlliance() end

---@param unitTag string
---@return boolean inRemoteRegion # esoui type: `bool`
function IsGroupMemberInRemoteRegion(unitTag) end

---@param unitTag string
---@return boolean isInSameInstance # esoui type: `bool`
function IsGroupMemberInSameInstanceAsPlayer(unitTag) end

---@param unitTag string
---@return boolean isInSameWorld # esoui type: `bool`
function IsGroupMemberInSameWorldAsPlayer(unitTag) end

---@return boolean isAvailable # esoui type: `bool`
function IsGroupModificationAvailable() end

---@return boolean isPassenger # esoui type: `bool`
function IsGroupMountPassenger() end

---@param characterOrDisplayName string
---@return boolean isPassenger # esoui type: `bool`
function IsGroupMountPassengerForTarget(characterOrDisplayName) end

---@return boolean isVeteran # esoui type: `bool`
function IsGroupUsingVeteranDifficulty() end

---@return boolean isGuildBankOpen # esoui type: `bool`
function IsGuildBankOpen() end

---@param guildId number # esoui type: `integer`
---@param accountName string
---@return GuildBlacklistResponse result
function IsGuildBlacklistAccountNameValid(guildId, accountName) end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@return boolean isQueued # esoui type: `bool`
function IsGuildHistoryCategoryRequestQueued(guildId, category) end

---@param guildId number # esoui type: `integer`
---@param rankIndex number # esoui type: `luaindex`
---@return boolean isGuildMaster # esoui type: `bool`
function IsGuildRankGuildMaster(guildId, rankIndex) end

---@return boolean isGUIResizing # esoui type: `bool`
function IsGUIResizing() end

---@return boolean isHeronUI # esoui type: `bool`
function IsHeronUI() end

---@param bagId Bag
---@return boolean isHouseBankBag # esoui type: `bool`
function IsHouseBankBag(bagId) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@param setting HousePermissionSetting
---@return boolean isPermissionEnabled # esoui type: `bool`
function IsHousingPermissionEnabled(houseId, permissionCategory, index, setting) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@return boolean isMarkedForDelete # esoui type: `bool`
function IsHousingPermissionMarkedForDelete(houseId, permissionCategory, index) end

---@param charOrDisplayName string
---@return boolean isIgnored # esoui type: `bool`
function IsIgnored(charOrDisplayName) end

---@param campaignId number # esoui type: `integer`
---@return boolean isImperialCityCampaign # esoui type: `bool`
function IsImperialCityCampaign(campaignId) end

---@return boolean isInAvAZone # esoui type: `bool`
function IsInAvAZone() end

---@return boolean inCampaign # esoui type: `bool`
function IsInCampaign() end

---@return boolean isInCyrodiil # esoui type: `bool`
function IsInCyrodiil() end

---@return boolean inGamepadPreferredMode # esoui type: `bool`
function IsInGamepadPreferredMode() end

---@return boolean isPlacementMode # esoui type: `bool`
function IsInHousingEditorPlacementMode() end

---@return boolean isInImperialCity # esoui type: `bool`
function IsInImperialCity() end

---@return boolean isInJusticeZone # esoui type: `bool`
function IsInJusticeEnabledZone() end

---@return boolean isInLFGGroup # esoui type: `bool`
function IsInLFGGroup() end

---@return boolean isInOutlawZone # esoui type: `bool`
function IsInOutlawZone() end

---@param instantUnlockId number # esoui type: `integer`
---@return boolean isServiceToken # esoui type: `bool`
function IsInstantUnlockRewardServiceToken(instantUnlockId) end

---@param instantUnlockId number # esoui type: `integer`
---@return boolean isUpgrade # esoui type: `bool`
function IsInstantUnlockRewardUpgrade(instantUnlockId) end

---@return boolean isInteracting # esoui type: `bool`
function IsInteracting() end

---@return boolean isAssistant # esoui type: `bool`
function IsInteractingWithMyAssistant() end

---@return boolean interactingWithCompanion # esoui type: `bool`
function IsInteractingWithMyCompanion() end

---@return boolean isActive # esoui type: `bool`
function IsInteractionCameraActive() end

---@return boolean isPending # esoui type: `bool`
function IsInteractionPending() end

---@return boolean enabled # esoui type: `bool`
function IsInteractionUsingInteractCamera() end

---@return boolean isInternalBuild # esoui type: `bool`
function IsInternalBuild() end

---@return boolean isInTutorialZone # esoui type: `bool`
function IsInTutorialZone() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param guiName string
---@return boolean isInUI # esoui type: `bool`
function IsInUI(guiName) end

---@param equipSlot EquipSlot
---@return boolean hasPairedPoison # esoui type: `bool`
function IsItemAffectedByPairedPoison(equipSlot) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isBoPAndTradeable # esoui type: `bool`
function IsItemBoPAndTradeable(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isBound # esoui type: `bool`
function IsItemBound(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean rechargeable # esoui type: `bool`
function IsItemChargeable(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean consumable # esoui type: `bool`
function IsItemConsumable(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean dyeable # esoui type: `bool`
function IsItemDyeable(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean enchantable # esoui type: `bool`
function IsItemEnchantable(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean enchantment # esoui type: `bool`
function IsItemEnchantment(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isFromCrownCrate # esoui type: `bool`
function IsItemFromCrownCrate(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isFromCrownStore # esoui type: `bool`
function IsItemFromCrownStore(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean junk # esoui type: `bool`
function IsItemJunk(bagId, slotIndex) end

---@param itemLink string
---@return boolean isBook # esoui type: `bool`
function IsItemLinkBook(itemLink) end

---@param itemLink string
---@return boolean isKnown # esoui type: `bool`
function IsItemLinkBookKnown(itemLink) end

---@param itemLink string
---@return boolean isPartOfCollection # esoui type: `bool`
function IsItemLinkBookPartOfCollection(itemLink) end

---@param itemLink string
---@return boolean isBound # esoui type: `bool`
function IsItemLinkBound(itemLink) end

---@param itemLink string
---@return boolean isConsumable # esoui type: `bool`
function IsItemLinkConsumable(itemLink) end

---@param itemLink string
---@return boolean itemIsContainer # esoui type: `bool`
function IsItemLinkContainer(itemLink) end

---@param itemLink string
---@return boolean isCrafted # esoui type: `bool`
function IsItemLinkCrafted(itemLink) end

---@param itemLink string
---@return boolean isEnchantingRune # esoui type: `bool`
function IsItemLinkEnchantingRune(itemLink) end

---@param itemLink string
---@return boolean itemNotDeconstructable # esoui type: `bool`
function IsItemLinkForcedNotDeconstructable(itemLink) end

---@param itemLink string
---@return boolean isFromCrownCrate # esoui type: `bool`
function IsItemLinkFromCrownCrate(itemLink) end

---@param itemLink string
---@return boolean isFromCrownStore # esoui type: `bool`
function IsItemLinkFromCrownStore(itemLink) end

---@param itemLink string
---@return boolean isFurnitureRecipe # esoui type: `bool`
function IsItemLinkFurnitureRecipe(itemLink) end

---@param itemLink string
---@return boolean onlyUsableFromQuickslot # esoui type: `bool`
function IsItemLinkOnlyUsableFromQuickslot(itemLink) end

---@param itemLink string
---@return boolean isPlaceableFurniture # esoui type: `bool`
function IsItemLinkPlaceableFurniture(itemLink) end

---@param itemLink string
---@return boolean isPrioritySell # esoui type: `bool`
function IsItemLinkPrioritySell(itemLink) end

---@param itemLink string
---@return boolean isRecipeKnown # esoui type: `bool`
function IsItemLinkRecipeKnown(itemLink) end

---@param itemLink string
---@return boolean isReconstructed # esoui type: `bool`
function IsItemLinkReconstructed(itemLink) end

---@param itemLink string
---@return boolean isSetCollectionPiece # esoui type: `bool`
function IsItemLinkSetCollectionPiece(itemLink) end

---@param itemLink string
---@return boolean itemStackable # esoui type: `bool`
function IsItemLinkStackable(itemLink) end

---@param itemLink string
---@return boolean itemStolen # esoui type: `bool`
function IsItemLinkStolen(itemLink) end

---@param itemLink string
---@return boolean isUnique # esoui type: `bool`
function IsItemLinkUnique(itemLink) end

---@param itemLink string
---@return boolean isUniqueEquipped # esoui type: `bool`
function IsItemLinkUniqueEquipped(itemLink) end

---@param itemLink string
---@return boolean isVendorTrash # esoui type: `bool`
function IsItemLinkVendorTrash(itemLink) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isNonCrownRepairKit # esoui type: `bool`
function IsItemNonCrownRepairKit(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isNonGroupRepairKit # esoui type: `bool`
function IsItemNonGroupRepairKit(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isPlaceable # esoui type: `bool`
function IsItemPlaceableFurniture(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean playerLocked # esoui type: `bool`
function IsItemPlayerLocked(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isPrioritySell # esoui type: `bool`
function IsItemPrioritySell(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isReconstructed # esoui type: `bool`
function IsItemReconstructed(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isRepairKit # esoui type: `bool`
function IsItemRepairKit(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean canBeSold # esoui type: `bool`
function IsItemSellableOnTradingHouse(bagId, slotIndex) end

---@param pieceId number # esoui type: `integer`
---@return boolean isUnlocked # esoui type: `bool`
function IsItemSetCollectionPieceUnlocked(pieceId) end

---@param itemSetId number # esoui type: `integer`
---@param slot number # esoui type: `id64`
---@return boolean isNew # esoui type: `bool`
function IsItemSetCollectionSlotNew(itemSetId, slot) end

---@param itemSetId number # esoui type: `integer`
---@param slot number # esoui type: `id64`
---@return boolean isUnlocked # esoui type: `bool`
function IsItemSetCollectionSlotUnlocked(itemSetId, slot) end

---@param soulGemType SoulGemType
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean isSoulGem # esoui type: `bool`
function IsItemSoulGem(soulGemType, bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean itemStolen # esoui type: `bool`
function IsItemStolen(bagId, slotIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param pendingTrait ItemTraitType
---@return boolean isKnown # esoui type: `bool`
function IsItemTraitKnownForRetraitResult(bagId, slotIndex, pendingTrait) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return boolean usable # esoui type: `bool`
---@return boolean usableOnlyFromActionSlot # esoui type: `bool`
function IsItemUsable(bagId, slotIndex) end

---@param questIndex number # esoui type: `luaindex`
---@return boolean isInCurrentZone # esoui type: `bool`
function IsJournalQuestInCurrentMapZone(questIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return boolean isInTrackedZoneStory # esoui type: `bool`
function IsJournalQuestIndexInTrackedZoneStory(journalQuestIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@return boolean isEnding # esoui type: `bool`
function IsJournalQuestStepEnding(journalQuestIndex, stepIndex) end

---@return boolean isJusticeEnabled # esoui type: `bool`
function IsJusticeEnabled() end

---@param aZoneIndex number # esoui type: `luaindex`
---@return boolean isBountyEnabled # esoui type: `bool`
function IsJusticeEnabledForZone(aZoneIndex) end

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isPassable # esoui type: `bool`
function IsKeepPassable(keepId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@return boolean isKeepTravelBlockedByDaedricArtifact # esoui type: `bool`
function IsKeepTravelBlockedByDaedricArtifact(keepId) end

---@param keepType KeepType
---@return boolean isCapturable # esoui type: `bool`
function IsKeepTypeCapturable(keepType) end

---@param keepType KeepType
---@return boolean isClaimable # esoui type: `bool`
function IsKeepTypeClaimable(keepType) end

---@param keepType KeepType
---@return boolean isPassable # esoui type: `bool`
function IsKeepTypePassable(keepType) end

---@param showOption HelpShowOptions
---@return boolean isKeyboardOption # esoui type: `bool`
function IsKeyboardHelpOption(showOption) end

---@return boolean isKeyboardUISupported # esoui type: `bool`
function IsKeyboardUISupported() end

---@param key KeyCode
---@return boolean isKeyChord # esoui type: `bool`
function IsKeyCodeChordKey(key) end

---@param key KeyCode
---@return boolean isGamepadKey # esoui type: `bool`
function IsKeyCodeGamepadKey(key) end

---@param key KeyCode
---@return boolean isKeyHold # esoui type: `bool`
function IsKeyCodeHoldKey(key) end

---@param key KeyCode
---@return boolean isKeyboardKey # esoui type: `bool`
function IsKeyCodeKeyboardKey(key) end

---@param key KeyCode
---@return boolean isMouseKey # esoui type: `bool`
function IsKeyCodeMouseKey(key) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param key KeyCode
---@return boolean isKeyDown # esoui type: `bool`
function IsKeyDown(key) end

---@return boolean isKillOnSight # esoui type: `bool`
function IsKillOnSight() end

---@param sourceRewardId number # esoui type: `integer`
---@param choiceRewardId number # esoui type: `integer`
---@return boolean isSelectedChoice # esoui type: `bool`
function IsLevelUpRewardChoiceSelected(sourceRewardId, choiceRewardId) end

---@param level number # esoui type: `integer`
---@return boolean isRewardMilestone # esoui type: `bool`
function IsLevelUpRewardMilestoneForLevel(level) end

---@param rewardId number # esoui type: `integer`
---@return boolean isValid # esoui type: `bool`
function IsLevelUpRewardValidForPlayer(rewardId) end

---@param battlegroundContext number # esoui type: `integer`
---@return boolean isLocal # esoui type: `bool`
function IsLocalBattlegroundContext(battlegroundContext) end

---@return boolean isFull # esoui type: `bool`
function IsLocalMailboxFull() end

---@param equipSlot EquipSlot
---@return boolean locked # esoui type: `bool`
function IsLockedWeaponSlot(equipSlot) end

---@return boolean isLooting # esoui type: `bool`
function IsLooting() end

---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@return boolean isDisabled # esoui type: `bool`
function IsLTODisabledForMarketProductCategory(displayGroup, topLevelIndex, categoryIndex) end

---@return boolean isMacUI # esoui type: `bool`
function IsMacUI() end

---@param mailId number # esoui type: `id64`
---@return boolean isReturnable # esoui type: `bool`
function IsMailReturnable(mailId) end

---@param locationIndex number # esoui type: `luaindex`
---@param tooltipLineIndex number # esoui type: `luaindex`
---@return boolean isVisible # esoui type: `bool`
function IsMapLocationTooltipLineVisible(locationIndex, tooltipLineIndex) end

---@param locationIndex number # esoui type: `luaindex`
---@return boolean isVisible # esoui type: `bool`
function IsMapLocationVisible(locationIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean isFeatured # esoui type: `bool`
function IsMarketProductFeatured(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return boolean isGiftable # esoui type: `bool`
function IsMarketProductGiftable(marketProductId, presentationIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean isNew # esoui type: `bool`
function IsMarketProductNew(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean isPurchased # esoui type: `bool`
function IsMarketProductPurchased(marketProductId) end

---@param thresholdIndex? number # esoui type: `luaindex:nilable`
---@return boolean isAtMaxThreshold # esoui type: `bool`
function IsMaxTelvarStoneMultiplierThreshold(thresholdIndex) end

---@return boolean minspec # esoui type: `bool`
function IsMinSpecMachine() end

---@return boolean mounted # esoui type: `bool`
function IsMounted() end

---@return boolean insideClient # esoui type: `bool`
function IsMouseWithinClientArea() end

---@return boolean isNearBoundary # esoui type: `bool`
function IsNearDuelBoundary() end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isEnabled # esoui type: `bool`
function IsObjectiveEnabled(keepId, objectiveId, battlegroundContext) end

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return boolean isVisible # esoui type: `bool`
function IsObjectiveObjectVisible(keepId, objectiveId, battlegroundContext) end

---@param outfitStyleId number # esoui type: `integer`
---@return boolean isArmor # esoui type: `bool`
function IsOutfitStyleArmor(outfitStyleId) end

---@param outfitStyleId number # esoui type: `integer`
---@return boolean isWeapon # esoui type: `bool`
function IsOutfitStyleWeapon(outfitStyleId) end

---@return boolean isOwner # esoui type: `bool`
function IsOwnerOfCurrentHouse() end

---@return boolean isValid # esoui type: `bool`
function IsPendingInteractionConfirmationValid() end

---@return boolean activated # esoui type: `bool`
function IsPlayerActivated() end

---@param guildIndex number # esoui type: `integer`
---@return boolean allowed # esoui type: `bool`
function IsPlayerAllowedToEditHeraldry(guildIndex) end

---@return boolean isAllowed # esoui type: `bool`
---@return number errorStringId # esoui type: `integer`
function IsPlayerAllowedToOpenCrownCrates() end

---@return boolean isPlayerControlling # esoui type: `bool`
function IsPlayerControllingSiegeWeapon() end

---@param emoteId number # esoui type: `integer`
---@return boolean isOverridden # esoui type: `bool`
function IsPlayerEmoteOverridden(emoteId) end

---@return boolean isPlayerEscorting # esoui type: `bool`
function IsPlayerEscortingRam() end

---@return boolean isGroundTargeting # esoui type: `bool`
function IsPlayerGroundTargeting() end

---@param guildId number # esoui type: `integer`
---@return boolean isGuildMaster # esoui type: `bool`
function IsPlayerGuildMaster(guildId) end

---@return boolean isInAvAWorld # esoui type: `bool`
function IsPlayerInAvAWorld() end

---@param characterOrDisplayName string
---@return boolean inGroup # esoui type: `bool`
function IsPlayerInGroup(characterOrDisplayName) end

---@param guildId number # esoui type: `integer`
---@return boolean isInGuild # esoui type: `bool`
function IsPlayerInGuild(guildId) end

---@return boolean inRaid # esoui type: `bool`
function IsPlayerInRaid() end

---@return boolean isInRaidStagingArea # esoui type: `bool`
function IsPlayerInRaidStagingArea() end

---@return boolean isInReviveCounterRaid # esoui type: `bool`
function IsPlayerInReviveCounterRaid() end

---@param pinType MapDisplayPinType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
---@return boolean isPlayerInside # esoui type: `bool`
function IsPlayerInsidePinArea(pinType, param1, param2, param3) end

---@return boolean areThey # esoui type: `bool`
function IsPlayerInteractingWithObject() end

---@return boolean isInWerewolfForm # esoui type: `bool`
function IsPlayerInWerewolfForm() end

---@return boolean moving # esoui type: `bool`
function IsPlayerMoving() end

---@return boolean isStunned # esoui type: `bool`
function IsPlayerStunned() end

---@return boolean tryingToMove # esoui type: `bool`
function IsPlayerTryingToMove() end

---@param marketProductId number # esoui type: `integer`
---@return boolean isBeingPreviewed # esoui type: `bool`
function IsPreviewingMarketProduct(marketProductId) end

---@param rewardId number # esoui type: `integer`
---@return boolean isPreviewing # esoui type: `bool`
function IsPreviewingReward(rewardId) end

---@param houseId number # esoui type: `integer`
---@return boolean isPrimaryHouse # esoui type: `bool`
function IsPrimaryHouse(houseId) end

---@param functionName string
---@return boolean isPrivate # esoui type: `bool`
function IsPrivateFunction(functionName) end

---@return boolean isActive # esoui type: `bool`
function IsProgrammableCameraActive() end

---@param functionName string
---@return boolean isProtected # esoui type: `bool`
function IsProtectedFunction(functionName) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
---@return boolean isQueued # esoui type: `bool`
function IsQueuedForCampaign(campaignId, queueAsGroup) end

---@return boolean queuedForRespawn # esoui type: `bool`
function IsQueuedForCyclicRespawn() end

---@return boolean inProgress # esoui type: `bool`
function IsRaidInProgress() end

---@param mailId number # esoui type: `id64`
---@return boolean isReady # esoui type: `bool`
function IsReadMailInfoReady(mailId) end

---@param equipSlot EquipSlot
---@return boolean isBound # esoui type: `bool`
function IsRestyleEquipmentSlotBound(equipSlot) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return boolean isDyeable # esoui type: `bool`
function IsRestyleSlotDataDyeable(restyleMode, restyleSetIndex, restyleSlot) end

---@param restyleMode RestyleMode
---@param restyleSlotType number # esoui type: `integer`
---@return boolean isDyeable # esoui type: `bool`
function IsRestyleSlotTypeDyeable(restyleMode, restyleSlotType) end

---@return boolean resurrectPending # esoui type: `bool`
function IsResurrectPending() end

---@return boolean isHidden # esoui type: `bool`
function IsReticleHidden() end

---@return boolean isInProgress # esoui type: `bool`
function IsScryingInProgress() end

---@param slotIndex number # esoui type: `luaindex`
---@param eventType SCTEventType
---@return boolean isShown # esoui type: `bool`
function IsSCTSlotEventTypeShown(slotIndex, eventType) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@return boolean isDeferred # esoui type: `bool`
function IsSettingDeferred(system, settingId) end

---@return boolean isSettingTemplate # esoui type: `bool`
function IsSettingTemplate() end

---@return boolean isShiftDown # esoui type: `bool`
function IsShiftKeyDown() end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return boolean isAutoGrant # esoui type: `bool`
function IsSkillAbilityAutoGrant(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return boolean isPassive # esoui type: `bool`
function IsSkillAbilityPassive(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return boolean isPurchased # esoui type: `bool`
function IsSkillAbilityPurchased(skillType, skillLineIndex, skillIndex) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return boolean isUltimate # esoui type: `bool`
function IsSkillAbilityUltimate(skillType, skillLineIndex, skillIndex) end

---@return boolean isSkillBuildAdvancedMode # esoui type: `bool`
function IsSkillBuildAdvancedMode() end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean consumable # esoui type: `bool`
function IsSlotItemConsumable(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean locked # esoui type: `bool`
function IsSlotLocked(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean isSoulTrap # esoui type: `bool`
function IsSlotSoulTrap(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean toggledOn # esoui type: `bool`
function IsSlotToggled(actionSlotIndex, hotbarCategory) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean useable # esoui type: `bool`
function IsSlotUsable(actionSlotIndex) end

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return boolean used # esoui type: `bool`
function IsSlotUsed(actionSlotIndex, hotbarCategory) end

---@param tradeskillType TradeskillType
---@return boolean isSmithingType # esoui type: `bool`
function IsSmithingCraftingType(tradeskillType) end

---@param itemStyleId number # esoui type: `integer`
---@param patternIndex number # esoui type: `luaindex`
---@return boolean known # esoui type: `bool`
function IsSmithingStyleKnown(itemStyleId, patternIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param traitItemIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsSmithingTraitItemValidForPattern(patternIndex, traitItemIndex) end

---@param patternIndex number # esoui type: `luaindex`
---@param traitType ItemTraitType
---@return boolean known # esoui type: `bool`
function IsSmithingTraitKnownForPattern(patternIndex, traitType) end

---@return boolean isEmpty # esoui type: `bool`
function IsStoreEmpty() end

---@return boolean isStuckFixPending # esoui type: `bool`
function IsStuckFixPending() end

---@return boolean isSupported # esoui type: `bool`
function IsSubmitFeedbackSupported() end

---@return boolean usesHDR # esoui type: `bool`
function IsSystemUsingHDR() end

---@return boolean same # esoui type: `bool`
function IsTargetSameAsLastValidTarget() end

---@return boolean available # esoui type: `bool`
function IsTimedActivitySystemAvailable() end

---@return boolean isAvailable # esoui type: `bool`
function IsTrackingDataAvailable() end

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return boolean isBoPAndTradeable # esoui type: `bool`
function IsTradeItemBoPAndTradeable(who, tradeIndex) end

---@param itemId number # esoui type: `integer`
---@param traitType ItemTraitType
---@return boolean isKnown # esoui type: `bool`
function IsTraitKnownForItem(itemId, traitType) end

---@return boolean isTrespassing # esoui type: `bool`
function IsTrespassing() end

---@param tutorialIndex number # esoui type: `luaindex`
---@return boolean isActionRequired # esoui type: `bool`
function IsTutorialActionRequired(tutorialIndex) end

---@return boolean beingArrested # esoui type: `bool`
function IsUnderArrest() end

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@return boolean isBonusEnabled # esoui type: `bool`
function IsUnderpopBonusEnabled(campaignId, alliance) end

---@param unitTag string
---@return boolean isActivelyEngaged # esoui type: `bool`
function IsUnitActivelyEngaged(unitTag) end

---@param unitTag string
---@return boolean attackable # esoui type: `bool`
function IsUnitAttackable(unitTag) end

---@param unitTag string
---@return boolean isBattleLeveled # esoui type: `bool`
function IsUnitBattleLeveled(unitTag) end

---@param unitTag string
---@return boolean isBeingResurrected # esoui type: `bool`
function IsUnitBeingResurrected(unitTag) end

---@param unitTag string
---@return boolean isChampion # esoui type: `bool`
function IsUnitChampion(unitTag) end

---@param unitTag string
---@return boolean isChampBattleLeveled # esoui type: `bool`
function IsUnitChampionBattleLeveled(unitTag) end

---@param unitTag string
---@return boolean isDead # esoui type: `bool`
function IsUnitDead(unitTag) end

---@param unitTag string
---@return boolean isDead # esoui type: `bool`
function IsUnitDeadOrReincarnating(unitTag) end

---@param unitTag string
---@return boolean isFalling # esoui type: `bool`
function IsUnitFalling(unitTag) end

---@param unitTag string
---@return boolean isOnFriendList # esoui type: `bool`
function IsUnitFriend(unitTag) end

---@param unitTag string
---@return boolean isFollowing # esoui type: `bool`
function IsUnitFriendlyFollower(unitTag) end

---@param unitTag string
---@return boolean isGrouped # esoui type: `bool`
function IsUnitGrouped(unitTag) end

---@param unitTag string
---@return boolean isGroupLeader # esoui type: `bool`
function IsUnitGroupLeader(unitTag) end

---@param unitTag string
---@return boolean isGuildKiosk # esoui type: `bool`
function IsUnitGuildKiosk(unitTag) end

---@param unitTag string
---@return boolean isIgnored # esoui type: `bool`
function IsUnitIgnored(unitTag) end

---@param unitTag string
---@return boolean isInAir # esoui type: `bool`
function IsUnitInAir(unitTag) end

---@param unitTag string
---@return boolean isInCombat # esoui type: `bool`
function IsUnitInCombat(unitTag) end

---@param unitTag string
---@return boolean isInDungeon # esoui type: `bool`
function IsUnitInDungeon(unitTag) end

---@param unitTag string
---@return boolean result # esoui type: `bool`
function IsUnitInGroupSupportRange(unitTag) end

---@param unitTag string
---@return boolean isInspectableSiege # esoui type: `bool`
function IsUnitInspectableSiege(unitTag) end

---@param unitTag string
---@return boolean isInvulnerableGuard # esoui type: `bool`
function IsUnitInvulnerableGuard(unitTag) end

---@param unitTag string
---@return boolean isJusticeGuard # esoui type: `bool`
function IsUnitJusticeGuard(unitTag) end

---@param unitTag string
---@return boolean isLivestock # esoui type: `bool`
function IsUnitLivestock(unitTag) end

---@param unitTag string
---@return boolean isOnline # esoui type: `bool`
function IsUnitOnline(unitTag) end

---@param unitTag string
---@return boolean isPlayer # esoui type: `bool`
function IsUnitPlayer(unitTag) end

---@param unitTag string
---@return boolean isPvPFlagged # esoui type: `bool`
function IsUnitPvPFlagged(unitTag) end

---@param unitTag string
---@return boolean isReincarnating # esoui type: `bool`
function IsUnitReincarnating(unitTag) end

---@param unitTag string
---@return boolean isResurrectable # esoui type: `bool`
function IsUnitResurrectableByPlayer(unitTag) end

---@param unitTag string
---@return boolean isSoloOrGroupLeader # esoui type: `bool`
function IsUnitSoloOrGroupLeader(unitTag) end

---@param unitTag string
---@return boolean isSwimming # esoui type: `bool`
function IsUnitSwimming(unitTag) end

---@param unitTag string
---@return boolean isVeteranDifficulty # esoui type: `bool`
function IsUnitUsingVeteranDifficulty(unitTag) end

---@param unitTag string
---@return boolean isBreadcrumb # esoui type: `bool`
function IsUnitWorldMapPositionBreadcrumbed(unitTag) end

---@return boolean isAdjusting # esoui type: `bool`
function IsUserAdjustingClientWindow() end

---@param abilityIndex number # esoui type: `luaindex`
---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsValidAbilityForSlot(abilityIndex, actionSlotIndex) end

---@param collectibleId number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsValidCollectibleForSlot(collectibleId, actionSlotIndex) end

---NOTE! Uses variable returns...
---@param collectibleName string
---@return NamingError violationCode
function IsValidCollectibleName(collectibleName) end

---NOTE! Uses variable returns...
---@param guildName string
---@return NamingError violationCode
function IsValidGuildName(guildName) end

---@param bagId Bag
---@param bagSlotId number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsValidItemForSlot(bagId, bagSlotId, actionSlotIndex) end

---@param itemId number # esoui type: `integer`
---@param itemQualityDefId number # esoui type: `integer`
---@param itemRequiredLevel number # esoui type: `integer`
---@param itemInstanceData number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsValidItemForSlotByItemInfo(itemId, itemQualityDefId, itemRequiredLevel, itemInstanceData, actionSlotIndex) end

---@param name string
---@return boolean isValid # esoui type: `bool`
function IsValidName(name) end

---NOTE! Uses variable returns...
---@param outfitName string
---@return NamingError violationCode
function IsValidOutfitName(outfitName) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@return boolean isValid # esoui type: `bool`
function IsValidQuestIndex(journalQuestIndex) end

---@param questItemId number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
---@return boolean valid # esoui type: `bool`
function IsValidQuestItemForSlot(questItemId, actionSlotIndex) end

---@return boolean isVirtualKeyboardOnScreen # esoui type: `bool`
function IsVirtualKeyboardOnScreen() end

---@param skillLineId number # esoui type: `integer`
---@return boolean isWerewolfSkillLine # esoui type: `bool`
function IsWerewolfSkillLineById(skillLineId) end

---@return boolean isActivelyTracking # esoui type: `bool`
function IsZoneStoryActivelyTracking() end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityIndex number # esoui type: `luaindex`
---@return boolean isActivityComplete # esoui type: `bool`
function IsZoneStoryActivityComplete(zoneId, zoneCompletionType, activityIndex) end

---@param zoneId number # esoui type: `integer`
---@return boolean isComplete # esoui type: `bool`
function IsZoneStoryComplete(zoneId) end

---@param zoneId number # esoui type: `integer`
---@return boolean isStarted # esoui type: `bool`
function IsZoneStoryStarted(zoneId) end

---@param zoneId number # esoui type: `integer`
---@return boolean isZoneAvailable # esoui type: `bool`
---@return string errorString
function IsZoneStoryZoneAvailable(zoneId) end

---@param itemSetId number # esoui type: `integer`
---@return boolean hasNewPieces # esoui type: `bool`
function ItemSetCollectionHasNewPieces(itemSetId) end

function JoinRespawnQueue() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function JumpAscendStart() end

---@param displayName string
function JumpToFriend(displayName) end

function JumpToGroupLeader() end

---@param characterOrDisplayName string
function JumpToGroupMember(characterOrDisplayName) end

---@param name string
function JumpToGuildMember(name) end

---@param displayName string
function JumpToHouse(displayName) end

---@param displayName string
---@param houseId number # esoui type: `integer`
function JumpToSpecificHouse(displayName, houseId) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
function LaunderItem(bagId, slotIndex, quantity) end

function LeaveBattleground() end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
function LeaveCampaignQueue(campaignId, queueAsGroup) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function LeftAndRightMouseDownInWorld() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function LeftAndRightMouseUpInWorld() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function LeftMouseDownInWorld() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function LeftMouseUpInWorld() end

---@param stringToLowercase string
---@return string lowerCasedString
function LocaleAwareToLower(stringToLowercase) end

---@param stringToUppercase string
---@return string upperCasedString
function LocaleAwareToUpper(stringToUppercase) end

---@param locked boolean # esoui type: `bool`
function LockCameraRotation(locked) end

function Logout() end

---@param ignoreStolenItems boolean # esoui type: `bool`
function LootAll(ignoreStolenItems) end

---@param type CurrencyType
function LootCurrency(type) end

---@param lootId number # esoui type: `integer`
function LootItemById(lootId) end

function LootMoney() end

---@param sourceRwardId number # esoui type: `integer`
---@param choiceRewardId number # esoui type: `integer`
function MakeLevelUpRewardChoice(sourceRwardId, choiceRewardId) end

---@param messageOrigin SceneManagerMessageOrigin
---@param requestType RemoteSceneRequestType
---@param sceneName string
function MakeRemoteSceneRequest(messageOrigin, requestType, sceneName) end

---@return SetMapResultCode setMapResult
function MapZoomOut() end

function MarkAllianceLockPendingNotificationSeen() end

---@param eulaType EULAType
function MarkEULAAsViewed(eulaType) end

---@param searchText string
---@return number? taskId # esoui type: `integer:nilable`
function MatchTradingHouseItemNames(searchText) end

---@param antiquityId number # esoui type: `integer`
---@param zoneId? number # esoui type: `integer:nilable`
---@return AntiquityScryingResult scryingResult
function MeetsAntiquityRequirementsForScrying(antiquityId, zoneId) end

---@param antiquityId number # esoui type: `integer`
---@return boolean meetsSkillRequirements # esoui type: `bool`
function MeetsAntiquitySkillRequirementsForScrying(antiquityId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function MoveBackwardStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function MoveBackwardStop() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function MoveForwardStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function MoveForwardStop() end

---@param messageOrigin SceneManagerMessageOrigin
---@param sceneName string
---@param sequenceNumber number # esoui type: `integer`
function NotifyThatFollowerFinishedFragmentTransition(messageOrigin, sceneName, sequenceNumber) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function OnMarketClose() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function OnMarketPurchaseMoreCrowns() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param actionSlotIndex number # esoui type: `luaindex`
function OnSlotDown(actionSlotIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param actionSlotIndex number # esoui type: `luaindex`
function OnSlotDownAndUp(actionSlotIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param actionSlotIndex number # esoui type: `luaindex`
function OnSlotUp(actionSlotIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param moveIndex SpecialMove
function OnSpecialMoveKeyDown(moveIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param moveIndex SpecialMove
function OnSpecialMoveKeyPressed(moveIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param moveIndex SpecialMove
function OnSpecialMoveKeyUp(moveIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function OnWeaponSwap() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function OnWeaponSwapToSet1() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function OnWeaponSwapToSet2() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param chapterId number # esoui type: `integer`
---@param isCollectorsEdition boolean # esoui type: `bool`
---@param source ChapterUpgradeSource
function OpenChapterUpgradeURL(chapterId, isCollectorsEdition, source) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
function OpenMarket(displayGroup) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param urlType ApprovedURLType
function OpenURLByType(urlType) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function PerformAttack() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function PerformInterrupt() end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param abilityIndex number # esoui type: `luaindex`
function PickupAbility(abilityIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
function PickupAbilityBySkillLine(skillType, skillLineIndex, skillIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param actionSlot number # esoui type: `luaindex`
function PickupAction(actionSlot) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param championSkillId number # esoui type: `integer`
function PickupChampionSkillById(championSkillId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param collectibleId number # esoui type: `integer`
function PickupCollectible(collectibleId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param abilityId number # esoui type: `integer`
function PickupCompanionAbilityById(abilityId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param slotIndex number # esoui type: `integer`
---@param bagId Bag
function PickupEquippedItem(slotIndex, bagId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param count number # esoui type: `integer`
function PickupInventoryItem(bagId, slotIndex, count) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
function PickupQuestItem(journalQuestIndex, stepIndex, conditionIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
function PickupQuestTool(journalQuestIndex, toolIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param entryIndex number # esoui type: `luaindex`
function PickupStoreBuybackItem(entryIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param entryIndex number # esoui type: `luaindex`
function PickupStoreItem(entryIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param tradeIndex number # esoui type: `luaindex`
function PickupTradeItem(tradeIndex) end

---@param pingType MapDisplayPinType
---@param mapDisplayType MapDisplayType
---@param normalizedX number
---@param normalizedZ number
function PingMap(pingType, mapDisplayType, normalizedX, normalizedZ) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param actionSlot number # esoui type: `luaindex`
function PlaceInActionBar(actionSlot) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param attachmentSlot number # esoui type: `luaindex`
function PlaceInAttachmentSlot(attachmentSlot) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param slot number # esoui type: `integer`
function PlaceInEquipSlot(slot) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function PlaceInInventory(bagId, slotIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
function PlaceInStoreWindow() end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param tradeIndex? number # esoui type: `luaindex:nilable`
function PlaceInTradeWindow(tradeIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
function PlaceInTradingHouse() end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
function PlaceInTransfer() end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param target string
function PlaceInUnitFrame(target) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
function PlaceInWorldLeftClick() end

---@param string string
---@param searchFor string
---@return boolean found # esoui type: `bool`
---@return number startIndex # esoui type: `integer`
---@return number endIndex # esoui type: `integer`
function PlainStringFind(string, searchFor) end

---@param crownCrateId number # esoui type: `integer`
---@param crownCrateTierParticleEffects CrownCrateParticleEffects
function PlayCrownCrateSpecificParticleSoundAndVibration(crownCrateId, crownCrateTierParticleEffects) end

---@param crownCrateTierId number # esoui type: `integer`
---@param crownCrateTierParticleEffects CrownCrateTierParticleEffects
function PlayCrownCrateTierSpecificParticleSoundAndVibration(crownCrateTierId, crownCrateTierParticleEffects) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param index number # esoui type: `luaindex`
function PlayDefaultQuickChat(index) end

---@param emoteIndex number # esoui type: `luaindex`
function PlayEmoteByIndex(emoteIndex) end

---@return boolean hasLevelUpgrades # esoui type: `bool`
function PlayerHasAttributeUpgrades() end

function PlayGiftClaimFanfare() end

function PlayGiftThankedFanfare() end

---@param itemSoundCategory ItemUISoundCategory
---@param itemSoundAction ItemUISoundAction
function PlayItemSound(itemSoundCategory, itemSoundAction) end

---@param audioModelType number # esoui type: `integer`
---@param closeLootWindow boolean # esoui type: `bool`
function PlayLootSound(audioModelType, closeLootWindow) end

---@param soundName string
function PlaySound(soundName) end

---@param filename string
---@param playImmediately boolean # esoui type: `bool`
---@param skipMode VideoSkipMode
---@param subtitleId number # esoui type: `integer`
---@param playInBackground boolean # esoui type: `bool`
---@param loopPlayback boolean # esoui type: `bool`
---@param mutePlayback boolean # esoui type: `bool`
function PlayVideo(filename, playImmediately, skipMode, subtitleId, playInBackground, loopPlayback, mutePlayback) end

---@param videoDataId number # esoui type: `integer`
---@param playImmediately boolean # esoui type: `bool`
---@param skipMode VideoSkipMode
function PlayVideoById(videoDataId, playImmediately, skipMode) end

function PopActionLayer() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function PrepareAttack() end

---@param respecNeeded boolean # esoui type: `bool`
function PrepareChampionPurchaseRequest(respecNeeded) end

function PrepareDeconstructMessage() end

---@param allocationMode SkillPointAllocationMode
---@param respecPaymentType SkillRespecPaymentType
function PrepareSkillPointAllocationRequest(allocationMode, respecPaymentType) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param collectibleDefId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
---@param dyeBrushId number # esoui type: `integer`
function PreviewCollectible(collectibleDefId, variation, dyeBrushId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param collectibleDefId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
function PreviewCollectibleAsFurniture(collectibleDefId, variation) end

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param styleIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@param useUniversalStyleItem boolean # esoui type: `bool`
---@param dyeBrushId number # esoui type: `integer`
function PreviewCraftItem(patternIndex, materialIndex, materialQuantity, styleIndex, traitIndex, useUniversalStyleItem, dyeBrushId) end

---@param dyeStampId number # esoui type: `integer`
---@param itemType ItemUseType
function PreviewDyeStamp(dyeStampId, itemType) end

---@param itemLink string
function PreviewDyeStampByItemLink(itemLink) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
function PreviewFurnitureMarketProduct(marketProductId, variation) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
function PreviewInventoryItem(bagId, slotIndex, variation) end

---@param itemLink string
---@param variation number # esoui type: `luaindex`
function PreviewItemLink(itemLink, variation) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
function PreviewMarketProduct(marketProductId, variation) end

---@param furnitureId number # esoui type: `id64`
---@param variation number # esoui type: `luaindex`
function PreviewPlacedFurniture(furnitureId, variation) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
function PreviewProvisionerItemAsFurniture(recipeListIndex, recipeIndex, variation) end

---@param rewardId number # esoui type: `integer`
---@param variation number # esoui type: `luaindex`
function PreviewReward(rewardId, variation) end

---@param entryIndex number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
---@param dyeBrushId number # esoui type: `integer`
function PreviewStoreEntry(entryIndex, variation, dyeBrushId) end

---@param index number # esoui type: `luaindex`
---@param variation number # esoui type: `luaindex`
function PreviewTradingHouseSearchResultItem(index, variation) end

---@param normalizedClickX number
---@param normalizedClickY number
---@return SetMapResultCode setMapResult
function ProcessMapClick(normalizedClickX, normalizedClickY) end

---@param health number # esoui type: `integer`
---@param magicka number # esoui type: `integer`
---@param stamina number # esoui type: `integer`
function PurchaseAttributes(health, magicka, stamina) end

---@param layerName string
function PushActionLayerByName(layerName) end

function QueryBattlegroundLeaderboardData() end

function QueryCampaignLeaderboardData() end

function QueryCampaignSelectionData() end

function QueryHomeShowLeaderboardData() end

function QueryRaidLeaderboardData() end

---@param amount number # esoui type: `integer`
function QueueCOD(amount) end

---@param craftingResult TradeskillResult
function QueueCraftingErrorAfterResultReceived(craftingResult) end

---@param campaignId number # esoui type: `integer`
---@param queueAsGroup boolean # esoui type: `bool`
function QueueForCampaign(campaignId, queueAsGroup) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param attachmentSlot number # esoui type: `luaindex`
---@return number itemAttachmentResult # esoui type: `integer`
function QueueItemAttachment(bagId, slotIndex, attachmentSlot) end

---@param amount number # esoui type: `integer`
function QueueMoneyAttachment(amount) end

function Quit() end

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@param bookIndex number # esoui type: `luaindex`
---@return string body
---@return BookMedium medium
---@return boolean showTitle # esoui type: `bool`
function ReadLoreBook(categoryIndex, collectionIndex, bookIndex) end

---@param mailId number # esoui type: `id64`
---@return string body
function ReadMail(mailId) end

function RedoLastHousingEditorCommand() end

function RefreshCardsInCrownCrateNPCsHand() end

function RefreshSettings() end

function RegisterForAssignedCampaignData() end

---@param displayName string
function RejectFriendRequest(displayName) end

---@param guildId number # esoui type: `integer`
function RejectGuildInvite(guildId) end

function Release() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ReleaseGameCameraSiegeControlled() end

function ReleaseInteractionKeepForGuild() end

---@param guildId number # esoui type: `integer`
function ReleaseKeepForGuild(guildId) end

---@param guiName string
function ReloadUI(guiName) end

---@param layerName string
function RemoveActionLayerByName(layerName) end

---@param chatContainerIndex number # esoui type: `luaindex`
function RemoveChatContainer(chatContainerIndex) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
function RemoveChatContainerTab(chatContainerIndex, tabIndex) end

---@param notificationId number # esoui type: `integer`
function RemoveCollectibleNotification(notificationId) end

---@param collectibleId number # esoui type: `integer`
function RemoveCollectibleNotificationByCollectibleId(collectibleId) end

---@param displayName string
function RemoveFriend(displayName) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GuildBlacklistResponse result
function RemoveFromGuildBlacklist(guildId, index) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@param removeFromAllHouses boolean # esoui type: `bool`
function RemoveHousingPermission(houseId, permissionCategory, index, removeFromAllHouses) end

---@param displayName string
function RemoveIgnore(displayName) end

function RemoveMapAntiquityDigSitePins() end

---@param pinType MapDisplayPinType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function RemoveMapPin(pinType, param1, param2, param3) end

---@param pinType MapDisplayPinType
function RemoveMapPinsByType(pinType) end

---@param startType MapDisplayPinType
---@param endType MapDisplayPinType
---@param param1? number # esoui type: `integer:nilable`
---@param param2? number # esoui type: `integer:nilable`
---@param param3? number # esoui type: `integer:nilable`
function RemoveMapPinsInRange(startType, endType, param1, param2, param3) end

---@param journalQuestIndex number # esoui type: `luaindex`
function RemoveMapQuestPins(journalQuestIndex) end

function RemoveMapZoneStoryPins() end

---@param feedbackId number # esoui type: `integer`
function RemovePendingFeedback(feedbackId) end

function RemovePlayerWaypoint() end

---@param attachmentSlot number # esoui type: `luaindex`
function RemoveQueuedItemAttachment(attachmentSlot) end

---@param notificationId number # esoui type: `integer`
function RemoveRaidScoreNotification(notificationId) end

function RemoveRallyPoint() end

---@param questName string
function RemoveScriptedEventInviteForQuest(questName) end

---@param collectibleId number # esoui type: `integer`
---@param name string
function RenameCollectible(collectibleId, name) end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param name string
function RenameOutfit(actorCategory, outfitIndex, name) end

function RepairAll() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function RepairItem(bagId, slotIndex) end

---@param itemToRepairBagId Bag
---@param itemToRepairSlotIndex number # esoui type: `integer`
---@param repairKitToConsumeBagId Bag
---@param repairKitToConsumeSlotIndex number # esoui type: `integer`
function RepairItemWithRepairKit(itemToRepairBagId, itemToRepairSlotIndex, repairKitToConsumeBagId, repairKitToConsumeSlotIndex) end

---@param impact CustomerServiceSubmitFeedbackImpacts
---@param category CustomerServiceSubmitFeedbackCategories
---@param subcategory CustomerServiceSubmitFeedbackSubcategories
---@param details string
---@param description string
---@param takeScreenshot boolean # esoui type: `bool`
function ReportFeedback(impact, category, subcategory, details, description, takeScreenshot) end

---@param antiquityId number # esoui type: `integer`
---@return AntiquityAbandonResult abandonResult
function RequestAbandonAntiquity(antiquityId) end

function RequestAntiquityDiggingExit() end

function RequestAntiquityDiggingExit() end

function RequestEndCutscene() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param wornBagId Bag
---@param equipSlot EquipSlot
function RequestEquipItem(bagId, slotIndex, wornBagId, equipSlot) end

function RequestEventAnnouncements() end

---@param charOrDisplayName string
---@param message string
function RequestFriend(charOrDisplayName, message) end

---@return boolean requested # esoui type: `bool`
function RequestGuildFinderAccountApplications() end

---@param guildId number # esoui type: `integer`
---@return boolean requested # esoui type: `bool`
function RequestGuildFinderAttributesForGuild(guildId) end

---@param guildId number # esoui type: `integer`
---@return SocialActionResult result
function RequestGuildKioskActiveBids(guildId) end

---@param itemDefId number # esoui type: `integer`
---@param itemTrait ItemTraitType
---@param itemQuality ItemQuality
---@param currencyType CurrencyType
function RequestItemReconstruction(itemDefId, itemTrait, itemQuality, currencyType) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param itemTrait ItemTraitType
function RequestItemTraitChange(bagId, slotIndex, itemTrait) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return number? taskId # esoui type: `integer:nilable`
function RequestJournalQuestConditionAssistance(journalQuestIndex, stepIndex, conditionIndex) end

---@param houseId number # esoui type: `integer`
---@param jumpOutside boolean # esoui type: `bool`
function RequestJumpToHouse(houseId, jumpOutside) end

---@param houseTemplateId number # esoui type: `integer`
function RequestJumpToHousePreviewWithTemplate(houseTemplateId) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
function RequestLoadDeferredSetting(system, settingId) end

function RequestMarketAnnouncement() end

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@param queueRequestIfOnCooldown boolean # esoui type: `bool`
---@return boolean requested # esoui type: `bool`
function RequestMoreGuildHistoryCategoryEvents(guildId, category, queueRequestIfOnCooldown) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param sourceBag Bag
---@param sourceSlot number # esoui type: `integer`
---@param destBag Bag
---@param destSlot number # esoui type: `integer`
---@param stackCount number # esoui type: `integer`
function RequestMoveItem(sourceBag, sourceSlot, destBag, destSlot, stackCount) end

---@param guildId number # esoui type: `integer`
function RequestOfflineGuildMembers(guildId) end

function RequestOpenHouseStore() end

function RequestOpenMailbox() end

---@param URL string
function RequestOpenUnsafeURL(URL) end

---@param bag Bag
---@param slot number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
---@param postingPrice number # esoui type: `integer`
function RequestPostItemOnTradingHouse(bag, slot, quantity, postingPrice) end

---@param marketProductId number # esoui type: `integer`
---@param presentationIndex number # esoui type: `luaindex`
---@param isGift boolean # esoui type: `bool`
function RequestPurchaseMarketProduct(marketProductId, presentationIndex, isGift) end

---@param mailId number # esoui type: `id64`
---@return RequestReadMailResult result
function RequestReadMail(mailId) end

function RequestReframeLocalPlayerInGameCamera() end

---@param giftId number # esoui type: `id64`
function RequestResendGift(giftId) end

function RequestScryingExit() end

---@param source MarketOpenOperation
---@param chapterUpgradeId number # esoui type: `integer`
function RequestShowMarketChapterUpgrade(source, chapterUpgradeId) end

function RequestTradingHouseListings() end

---@param wornBagId Bag
---@param equipSlot EquipSlot
function RequestUnequipItem(wornBagId, equipSlot) end

---@param index number # esoui type: `luaindex`
---@return boolean rescinded # esoui type: `bool`
function RescindGuildFinderApplication(index) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function ResearchSmithingTrait(bagId, slotIndex) end

function ResetAllBindsToDefault() end

function ResetAllTutorials() end

---@param battlegroundContext BattlegroundQueryContextType
---@param currentHistoryPercent number
---@return boolean requiresRebuild # esoui type: `bool`
function ResetCampaignHistoryWindow(battlegroundContext, currentHistoryPercent) end

---@param category ChatChannelCategories
function ResetChatCategoryColorToDefault(category) end

---@param chatContainerIndex number # esoui type: `luaindex`
function ResetChatContainerColorsToDefault(chatContainerIndex) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
function ResetChatContainerTabToDefault(chatContainerIndex, tabIndex) end

function ResetChatFontSizeToDefault() end

function ResetChatter() end

function ResetCustomerServiceTicket() end

function ResetGamepadBindsToDefault() end

function ResetHousingEditorTrackedFurnitureOrNode() end

function ResetKeyboardBindsToDefault() end

function ResetSCTDataToDefaults() end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
function ResetSettingToDefault(system, settingId) end

---@param system SettingSystemType
function ResetToDefaultSettings(system) end

function ResetVideoCancelConfirmation() end

---@param index number # esoui type: `luaindex`
function RespawnAtForwardCamp(index) end

---@param keepId number # esoui type: `integer`
function RespawnAtKeep(keepId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param useItem boolean # esoui type: `bool`
function RespondToConfirmUseInventoryItemRequest(useItem) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param destroyItem boolean # esoui type: `bool`
function RespondToDestroyRequest(destroyItem) end

---@param shouldSendGift boolean # esoui type: `bool`
function RespondToSendPartiallyOwnedGift(shouldSendGift) end

---@param giftId number # esoui type: `id64`
---@param note string
function ReturnGift(giftId, note) end

---@param mailId number # esoui type: `id64`
function ReturnMail(mailId) end

---@param hasActiveAppearance boolean # esoui type: `bool`
function RevertToSavedHeraldry(hasActiveAppearance) end

function Revive() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function RightMouseDownInWorld() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function RightMouseUpInWorld() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function RollDodgeStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function RollDodgeStop() end

---NOTE! Uses variable returns...
---@param guildId number # esoui type: `integer`
---@return GuildMetaDataAttribute neededRequiredFields
function SaveGuildRecruitmentPendingChanges(guildId) end

---@param errorType SaveLoadDialogError
---@param result SaveLoadDialogAnswer
function SaveLoadDialogResult(errorType, result) end

---@return boolean success # esoui type: `bool`
function SavePendingGuildRanks() end

---@param antiquityId number # esoui type: `integer`
function ScryForAntiquity(antiquityId) end

---@param optionIndex number # esoui type: `luaindex`
function SelectChatterOption(optionIndex) end

---@param guildId number # esoui type: `integer`
function SelectGuildBank(guildId) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param actionSlotIndex number # esoui type: `luaindex`
function SelectLastSlottedItem(actionSlotIndex) end

---@param status PlayerStatus
function SelectPlayerStatus(status) end

---@param skillBuildId number # esoui type: `integer`
---@param isAdvancedMode boolean # esoui type: `bool`
function SelectSkillBuild(skillBuildId, isAdvancedMode) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param abilityIndex number # esoui type: `luaindex`
---@param actionSlotIndex number # esoui type: `luaindex`
function SelectSlotAbility(abilityIndex, actionSlotIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param bagId Bag
---@param bagSlotId number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
function SelectSlotItem(bagId, bagSlotId, actionSlotIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param actionType ActionBarSlotType
---@param actionId number # esoui type: `integer`
---@param actionSlotIndex number # esoui type: `luaindex`
function SelectSlotSimpleAction(actionType, actionId, actionSlotIndex) end

---@param titleIndex? number # esoui type: `luaindex:nilable`
function SelectTitle(titleIndex) end

---@param guildId number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function SelectTradingHouseGuildId(guildId) end

function SellAllJunk() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
function SellInventoryItem(bagId, slotIndex, quantity) end

function SendAllCachedSettingMessages() end

function SendChampionPurchaseRequest() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param message string
---@param channelId number # esoui type: `integer`
---@param target string
function SendChatMessage(message, channelId, target) end

---@param crateId number # esoui type: `integer`
function SendCrownCrateOpenRequest(crateId) end

---@return boolean wasMessageSent # esoui type: `bool`
function SendDeconstructMessage() end

---@param messageOrigin SceneManagerMessageOrigin
---@param syncType RemoteSceneSyncType
---@param currentSceneName string
---@param nextSceneName string
---@param sequenceNumber number # esoui type: `integer`
---@param currentSceneFragmentsComplete boolean # esoui type: `bool`
function SendLeaderToFollowerSync(messageOrigin, syncType, currentSceneName, nextSceneName, sequenceNumber, currentSceneFragmentsComplete) end

function SendLFMRequest() end

---@param to string
---@param subject string
---@param body string
function SendMail(to, subject, body) end

---@param useFlatCurrency boolean # esoui type: `bool`
---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param outfitSlot OutfitSlot
---@param collectibleId number # esoui type: `integer`
---@param itemMaterialIndex number # esoui type: `luaindex`
---@param primaryDyeId number # esoui type: `integer`
---@param secondaryDyeId number # esoui type: `integer`
---@param accentDyeId number # esoui type: `integer`
function SendOutfitChangeRequest(useFlatCurrency, actorCategory, outfitIndex, outfitSlot, collectibleId, itemMaterialIndex, primaryDyeId, secondaryDyeId, accentDyeId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function SendPlayerStuck() end

---@param response PledgeOfMaraResponse
function SendPledgeOfMaraResponse(response) end

function SendSkillPointAllocationRequest() end

---@param controlName string
function Set3DRenderSpaceToCurrentCamera(controlName) end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param advise boolean # esoui type: `bool`
function SetAdviseSkillLine(skillType, skillLineIndex, advise) end

---@param enabled boolean # esoui type: `bool`
---@param option CameraOptionsPreview
function SetCameraOptionsPreviewModeEnabled(enabled, option) end

---@param category ChatChannelCategories
---@param enabled boolean # esoui type: `bool`
function SetChatBubbleCategoryEnabled(category, enabled) end

---@param category ChatChannelCategories
---@param red number
---@param green number
---@param blue number
function SetChatCategoryColor(category, red, green, blue) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param bgRed number
---@param bgGreen number
---@param bgBlue number
---@param bgMinAlpha number
---@param bgMaxAlpha number
function SetChatContainerColors(chatContainerIndex, bgRed, bgGreen, bgBlue, bgMinAlpha, bgMaxAlpha) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
---@param chatCategory ChatChannelCategories
---@param enabled boolean # esoui type: `bool`
function SetChatContainerTabCategoryEnabled(chatContainerIndex, tabIndex, chatCategory, enabled) end

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
---@param name string
---@param isLocked boolean # esoui type: `bool`
---@param isInteractable boolean # esoui type: `bool`
---@param areTimestampsEnabled boolean # esoui type: `bool`
function SetChatContainerTabInfo(chatContainerIndex, tabIndex, name, isLocked, isInteractable, areTimestampsEnabled) end

---@param fontSize number # esoui type: `integer`
function SetChatFontSize(fontSize) end

---@param isEnabled boolean # esoui type: `bool`
function SetChatLogEnabled(isEnabled) end

---@param collectibleCategoryType CollectibleCategoryType
---@param actorCategory GameplayActorCategory
function SetCollectibleCategoryTypeToDefault(collectibleCategoryType, actorCategory) end

---@param show boolean # esoui type: `bool`
function SetCrownCrateNPCVisible(show) end

---@param active boolean # esoui type: `bool`
function SetCrownCrateUIMenuActive(active) end

---@param actionSlotIndex number # esoui type: `luaindex`
function SetCurrentQuickslot(actionSlotIndex) end

---@param volume number
---@param lerpTime number
function SetCurrentVideoPlaybackVolume(volume, lerpTime) end

---@param enabled boolean # esoui type: `bool`
function SetCursorItemSoundsEnabled(enabled) end

---@param body string
function SetCustomerServiceTicketBody(body) end

---@param category CustomerServiceTicketCategory
function SetCustomerServiceTicketCategory(category) end

---@param itemName string
---@param itemId number # esoui type: `integer`
function SetCustomerServiceTicketItemTarget(itemName, itemId) end

---@param itemLink string
function SetCustomerServiceTicketItemTargetByLink(itemLink) end

---@param displayName string
function SetCustomerServiceTicketPlayerTarget(displayName) end

---@param questName string
function SetCustomerServiceTicketQuestTarget(questName) end

---@param CVarName string
---@param value string
function SetCVar(CVarName, value) end

---@param isInline boolean # esoui type: `bool`
function SetEncounterLogAbilityInfoInline(isInline) end

---@param isEnabled boolean # esoui type: `bool`
function SetEncounterLogEnabled(isEnabled) end

---@param verbose boolean # esoui type: `bool`
function SetEncounterLogVerboseFormat(verbose) end

---@param lureIndex number # esoui type: `luaindex`
function SetFishingLure(lureIndex) end

---@param waitTimeMs number # esoui type: `integer`
function SetFlashWaitTime(waitTimeMs) end

---@param alpha number
function SetFloatingMarkerGlobalAlpha(alpha) end

---@param markerType MapDisplayPinType
---@param size number
---@param primaryTexturePath string
---@param secondaryTexturePath string
---@param primaryPulses boolean # esoui type: `bool`
---@param secondaryPulses boolean # esoui type: `bool`
function SetFloatingMarkerInfo(markerType, size, primaryTexturePath, secondaryTexturePath, primaryPulses, secondaryPulses) end

---@param normalizedScreenX number
---@param normalizedScreenY number
function SetFrameInteractionTarget(normalizedScreenX, normalizedScreenY) end

---@param enabled boolean # esoui type: `bool`
function SetFrameLocalPlayerInGameCamera(enabled) end

---@param lookAtDistanceFactor? number # esoui type: `number:nilable`
function SetFrameLocalPlayerLookAtDistanceFactor(lookAtDistanceFactor) end

---@param normalizedScreenX number
---@param normalizedScreenY number
function SetFrameLocalPlayerTarget(normalizedScreenX, normalizedScreenY) end

---@param screenType GameCameraFramingScreenType
function SetFramingScreenType(screenType) end

---@param friendIndex number # esoui type: `luaindex`
---@param note string
function SetFriendNote(friendIndex, note) end

---@param effectType FullscreenEffectType
---@param param1 number
---@param param2 number
---@param immediateUpdate boolean # esoui type: `bool`
function SetFullscreenEffect(effectType, param1, param2, immediateUpdate) end

---@param active boolean # esoui type: `bool`
function SetGameCameraUIMode(active) end

---@param gamepadFontSize number # esoui type: `integer`
function SetGamepadChatFontSize(gamepadFontSize) end

---@param consumed boolean # esoui type: `bool`
function SetGamepadLeftStickConsumedByUI(consumed) end

---@param consumed boolean # esoui type: `bool`
function SetGamepadRightStickConsumedByUI(consumed) end

---@param durationMs number # esoui type: `integer`
---@param firstMotor number
---@param secondMotor number
---@param thirdMotor number
---@param fourthMotor number
---@param debugSourceInfo string
function SetGamepadVibration(durationMs, firstMotor, secondMotor, thirdMotor, fourthMotor, debugSourceInfo) end

---@param guiName string
---@param hidden boolean # esoui type: `bool`
function SetGuiHidden(guiName, hidden) end

---@param attribute GuildMetaDataAttribute
---@param value number # esoui type: `integer`
---@param useValue boolean # esoui type: `bool`
function SetGuildApplicationAttributeValue(attribute, value, useValue) end

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@param note string
---@return GuildBlacklistResponse result
function SetGuildBlacklistNote(guildId, index, note) end

---@param guildId number # esoui type: `integer`
---@param description string
function SetGuildDescription(guildId, description) end

---@param activity GuildActivityAttributeValue
---@param hasActivity boolean # esoui type: `bool`
function SetGuildFinderActivityFilterValue(activity, hasActivity) end

---@param alliance Alliance
---@param hasAlliance boolean # esoui type: `bool`
function SetGuildFinderAllianceFilterValue(alliance, hasAlliance) end

---@param minChampionPoints number # esoui type: `integer`
---@param maxChampionPoints number # esoui type: `integer`
function SetGuildFinderChampionPointsFilterValues(minChampionPoints, maxChampionPoints) end

---@param focus GuildFocusAttributeValue
function SetGuildFinderFocusSearchFilter(focus) end

---@param hasTrader boolean # esoui type: `bool`
function SetGuildFinderHasTradersSearchFilter(hasTrader) end

---@param language GuildLanguageAttributeValue
---@param hasLanguage boolean # esoui type: `bool`
function SetGuildFinderLanguageFilterValue(language, hasLanguage) end

---@param personality GuildPersonalityAttributeValue
---@param hasPersonality boolean # esoui type: `bool`
function SetGuildFinderPersonalityFilterValue(personality, hasPersonality) end

---@param startTime number # esoui type: `integer`
---@param endTime number # esoui type: `integer`
function SetGuildFinderPlayTimeFilters(startTime, endTime) end

---@param role LFGRole
---@param hasRole boolean # esoui type: `bool`
function SetGuildFinderRoleFilterValue(role, hasRole) end

---@param size GuildSizeAttributeValue
---@param hasSize boolean # esoui type: `bool`
function SetGuildFinderSizeFilterValue(size, hasSize) end

---@param guildId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@param note string
function SetGuildMemberNote(guildId, memberIndex, note) end

---@param guildId number # esoui type: `integer`
---@param motd string
function SetGuildMotD(guildId, motd) end

---@param guildId number # esoui type: `integer`
---@param activity GuildActivityAttributeValue
---@param selected boolean # esoui type: `bool`
function SetGuildRecruitmentActivityValue(guildId, activity, selected) end

---@param guildId number # esoui type: `integer`
---@param endTimeHours number # esoui type: `integer`
function SetGuildRecruitmentEndTime(guildId, endTimeHours) end

---@param guildId number # esoui type: `integer`
---@param headerMessage string
---@return UpdateGuildMetaDataResponse response
function SetGuildRecruitmentHeaderMessage(guildId, headerMessage) end

---@param guildId number # esoui type: `integer`
---@param language GuildLanguageAttributeValue
function SetGuildRecruitmentLanguage(guildId, language) end

---@param guildId number # esoui type: `integer`
---@param minimumCP number # esoui type: `integer`
function SetGuildRecruitmentMinimumCP(guildId, minimumCP) end

---@param guildId number # esoui type: `integer`
---@param personality GuildPersonalityAttributeValue
function SetGuildRecruitmentPersonality(guildId, personality) end

---@param guildId number # esoui type: `integer`
---@param primaryFocus GuildFocusAttributeValue
function SetGuildRecruitmentPrimaryFocus(guildId, primaryFocus) end

---@param guildId number # esoui type: `integer`
---@param recruitmentMessage string
---@return UpdateGuildMetaDataResponse response
function SetGuildRecruitmentRecruitmentMessage(guildId, recruitmentMessage) end

---@param guildId number # esoui type: `integer`
---@param recruitmentStatus GuildRecruitmentStatusAttributeValue
function SetGuildRecruitmentRecruitmentStatus(guildId, recruitmentStatus) end

---@param guildId number # esoui type: `integer`
---@param role LFGRole
---@param selected boolean # esoui type: `bool`
function SetGuildRecruitmentRoleValue(guildId, role, selected) end

---@param guildId number # esoui type: `integer`
---@param secondaryFocus GuildFocusAttributeValue
function SetGuildRecruitmentSecondaryFocus(guildId, secondaryFocus) end

---@param guildId number # esoui type: `integer`
---@param startTimeHours number # esoui type: `integer`
function SetGuildRecruitmentStartTime(guildId, startTimeHours) end

---@param stage HealthWarningStage
function SetHealthWarningStage(stage) end

---@param placedFurnitureId number # esoui type: `id64`
function SetHousingEditorTrackedFurnitureId(placedFurnitureId) end

---@param placedFurnitureId number # esoui type: `id64`
---@param pathIndex number # esoui type: `luaindex`
function SetHousingEditorTrackedPathNode(placedFurnitureId, pathIndex) end

---@param houseId number # esoui type: `integer`
---@param permissionCategory HousePermissionUserGroup
---@param index number # esoui type: `luaindex`
---@param preset HousePermissionPresetSetting
---@param setForAllHouses boolean # esoui type: `bool`
function SetHousingPermissionPreset(houseId, permissionCategory, index, preset, setForAllHouses) end

---@param houseId number # esoui type: `integer`
function SetHousingPrimaryHouse(houseId) end

---@param ignoreIndex number # esoui type: `luaindex`
---@param note string
function SetIgnoreNote(ignoreIndex, note) end

---@param enabled boolean # esoui type: `bool`
function SetInteractionUsingInteractCamera(enabled) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param junk boolean # esoui type: `bool`
function SetItemIsJunk(bagId, slotIndex, junk) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param playerLocked boolean # esoui type: `bool`
function SetItemIsPlayerLocked(bagId, slotIndex, playerLocked) end

---@param desiredFloorIndex number # esoui type: `luaindex`
---@return SetMapResultCode setMapResult
function SetMapFloor(desiredFloorIndex) end

---@param pinType MapDisplayPinType
---@param assisted boolean # esoui type: `bool`
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function SetMapPinAssisted(pinType, assisted, param1, param2, param3) end

---@param pinType MapDisplayPinType
---@param continuousUpdate boolean # esoui type: `bool`
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function SetMapPinContinuousPositionUpdate(pinType, continuousUpdate, param1, param2, param3) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param trackingLevel TrackingLevel
function SetMapQuestPinsTrackingLevel(journalQuestIndex, trackingLevel) end

---@return SetMapResultCode setMapResult
function SetMapToAutoMapNavigationTargetPosition() end

---@param digSiteId number # esoui type: `integer`
---@return SetMapResultCode setMapResult
function SetMapToDigSitePosition(digSiteId) end

---@param mapId number # esoui type: `integer`
---@return SetMapResultCode setMapResult
function SetMapToMapId(mapId) end

---@param index number # esoui type: `luaindex`
---@return SetMapResultCode setMapResult
function SetMapToMapListIndex(index) end

---@return SetMapResultCode setMapResult
function SetMapToPlayerLocation() end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return SetMapResultCode setMapResult
function SetMapToQuestCondition(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@return SetMapResultCode setMapResult
function SetMapToQuestStepEnding(journalQuestIndex, stepIndex) end

---@param questIndex number # esoui type: `luaindex`
---@return SetMapResultCode setMapResult
function SetMapToQuestZone(questIndex) end

---@param fontName string
---@param fontStyle FontStyle
function SetNameplateGamepadFont(fontName, fontStyle) end

---@param fontName string
---@param fontStyle FontStyle
function SetNameplateKeyboardFont(fontName, fontStyle) end

---@param overrideMusicMode OverrideMusicMode
function SetOverrideMusicMode(overrideMusicMode) end

---@param offsetX number # esoui type: `integer`
---@param offsetY number # esoui type: `integer`
---@param offsetWidth number # esoui type: `integer`
---@param offsetHeight number # esoui type: `integer`
function SetOverscanOffsets(offsetX, offsetY, offsetWidth, offsetHeight) end

---@param backgroundCategoryIndex number # esoui type: `luaindex`
---@param backgroundStyleIndex number # esoui type: `luaindex`
---@param backgroundPrimaryColorIndex number # esoui type: `luaindex`
---@param backgroundSecondaryColorIndex number # esoui type: `luaindex`
---@param crestCategoryIndex number # esoui type: `luaindex`
---@param crestStyleIndex number # esoui type: `luaindex`
---@param crestColorIndex number # esoui type: `luaindex`
function SetPendingHeraldryIndices(backgroundCategoryIndex, backgroundStyleIndex, backgroundPrimaryColorIndex, backgroundSecondaryColorIndex, crestCategoryIndex, crestStyleIndex, crestColorIndex) end

---@param isConfirmed boolean # esoui type: `bool`
function SetPendingInteractionConfirmed(isConfirmed) end

---@param bag Bag
---@param slot number # esoui type: `integer`
---@param quantity number # esoui type: `integer`
function SetPendingItemPost(bag, slot, quantity) end

---@param index number # esoui type: `luaindex`
function SetPendingItemPurchase(index) end

---@param itemUniqueId number # esoui type: `id64`
---@param purchasePrice number # esoui type: `integer`
function SetPendingItemPurchaseByItemUniqueId(itemUniqueId, purchasePrice) end

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlotType number # esoui type: `integer`
---@param primaryDyeId number # esoui type: `integer`
---@param secondaryDyeId number # esoui type: `integer`
---@param accentDyeId number # esoui type: `integer`
function SetPendingSlotDyes(restyleMode, restyleSetIndex, restyleSlotType, primaryDyeId, secondaryDyeId, accentDyeId) end

---@param pinType MapDisplayPinType
---@param red number
---@param green number
---@param blue number
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function SetPinTint(pinType, red, green, blue, param1, param2, param3) end

---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function SetPlayerWaypointByWorldLocation(worldX, worldY, worldZ) end

---@param openingWidthUI number
---@param openingHeightUI number
---@param cameraAngleRadians number
function SetPreviewDynamicFramingOpening(openingWidthUI, openingHeightUI, cameraAngleRadians) end

---@param sunlightAzimuthRadians number
---@param sunlightAltitudeRadians number
function SetPreviewInEmptyWorld(sunlightAzimuthRadians, sunlightAltitudeRadians) end

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
function SetPreviewingOutfitIndexInPreviewCollection(actorCategory, outfitIndex) end

---@param actorCategory GameplayActorCategory
function SetPreviewingUnequippedOutfitInPreviewCollection(actorCategory) end

---@param restyleMode RestyleMode
function SetRestylePreviewMode(restyleMode) end

---@param dyeSetIndex number # esoui type: `luaindex`
---@param primaryDyeId number # esoui type: `integer`
---@param secondaryDyeId number # esoui type: `integer`
---@param accentDyeId number # esoui type: `integer`
function SetSavedDyeSetDyes(dyeSetIndex, primaryDyeId, secondaryDyeId, accentDyeId) end

---@param timeline userdata # esoui type: `object`
---@param offsetX number
function SetSCTAnimationOffsetX(timeline, offsetX) end

---@param timeline userdata # esoui type: `object`
---@param offsetY number
function SetSCTAnimationOffsetY(timeline, offsetY) end

---@param SCTCloudId number # esoui type: `integer`
---@param animationOverlapPercent number
function SetSCTCloudAnimationOverlapPercent(SCTCloudId, animationOverlapPercent) end

---@param eventType SCTEventType
---@param SCTEventVisualInfoId number # esoui type: `integer`
function SetSCTEventVisualInfo(eventType, SCTEventVisualInfoId) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param hideWhenValueIsZero boolean # esoui type: `bool`
function SetSCTEventVisualInfoHideWhenValueIsZero(SCTEventVisualInfoId, hideWhenValueIsZero) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@param r number
---@param g number
---@param b number
function SetSCTEventVisualInfoTextColor(SCTEventVisualInfoId, textType, r, g, b) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@param keyboardFontSize number # esoui type: `integer`
---@param gamepadFontSize number # esoui type: `integer`
function SetSCTEventVisualInfoTextFontSizes(SCTEventVisualInfoId, textType, keyboardFontSize, gamepadFontSize) end

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@param format string
function SetSCTEventVisualInfoTextFormat(SCTEventVisualInfoId, textType, format) end

---@param fontName string
---@param fontStyle FontStyle
function SetSCTGamepadFont(fontName, fontStyle) end

---@param fontName string
---@param fontStyle FontStyle
function SetSCTKeyboardFont(fontName, fontStyle) end

---@param slotIndex number # esoui type: `luaindex`
---@param minSpacingMS number # esoui type: `integer`
function SetSCTSlotAnimationMinimumSpacing(slotIndex, minSpacingMS) end

---@param slotIndex number # esoui type: `luaindex`
---@param animationTimelineName string
function SetSCTSlotAnimationTimeline(slotIndex, animationTimelineName) end

---@param slotIndex number # esoui type: `luaindex`
---@param topEdgeUIOffsetBuffer number
---@param bottomEdgeUIOffsetBuffer number
function SetSCTSlotClamping(slotIndex, topEdgeUIOffsetBuffer, bottomEdgeUIOffsetBuffer) end

---@param slotIndex number # esoui type: `luaindex`
---@param defaultScale number
---@param critScale number
function SetSCTSlotEventControlScales(slotIndex, defaultScale, critScale) end

---@param slotIndex number # esoui type: `luaindex`
---@param eventType SCTEventType
---@param isShown boolean # esoui type: `bool`
function SetSCTSlotEventTypeShown(slotIndex, eventType, isShown) end

---@param slotIndex number # esoui type: `luaindex`
---@param eventType SCTEventType
---@param SCTEventVisualInfoId number # esoui type: `integer`
function SetSCTSlotEventVisualInfo(slotIndex, eventType, SCTEventVisualInfoId) end

---@param slotIndex number # esoui type: `luaindex`
---@param SCTCloudId number # esoui type: `integer`
function SetSCTSlotGamepadCloud(slotIndex, SCTCloudId) end

---@param slotIndex number # esoui type: `luaindex`
---@param SCTCloudId number # esoui type: `integer`
function SetSCTSlotKeyboardCloud(slotIndex, SCTCloudId) end

---@param slotIndex number # esoui type: `luaindex`
---@param SCTAnchorType SCTUnitAnchorType
---@param anchorPoint AnchorPosition
---@param UIOffsetX number
---@param UIOffsetY number
---@param cameraOffsetRight number
---@param cameraOffsetUp number
function SetSCTSlotPosition(slotIndex, SCTAnchorType, anchorPoint, UIOffsetX, UIOffsetY, cameraOffsetRight, cameraOffsetUp) end

---@param slotIndex number # esoui type: `luaindex`
---@param showForFriendly boolean # esoui type: `bool`
---@param showForNeutral boolean # esoui type: `bool`
---@param showForEnemy boolean # esoui type: `bool`
function SetSCTSlotSourceReputationTypes(slotIndex, showForFriendly, showForNeutral, showForEnemy) end

---@param slotIndex number # esoui type: `luaindex`
---@param showForFriendly boolean # esoui type: `bool`
---@param showForNeutral boolean # esoui type: `bool`
---@param showForEnemy boolean # esoui type: `bool`
function SetSCTSlotTargetReputationTypes(slotIndex, showForFriendly, showForNeutral, showForEnemy) end

---@param slotIndex number # esoui type: `luaindex`
---@param zoomedInCameraDistanceThreshold number
---@param zoomedInUIOffsetX number
---@param zoomedInUIOffsetY number
function SetSCTSlotZoomedInPosition(slotIndex, zoomedInCameraDistanceThreshold, zoomedInUIOffsetX, zoomedInUIOffsetY) end

---@param userName string
---@param isIgnoredThisSession boolean # esoui type: `bool`
function SetSessionIgnore(userName, isIgnoredThisSession) end

---@param system SettingSystemType
---@param settingId number # esoui type: `integer`
---@param value string
---@param setOptions SetOptions
function SetSetting(system, settingId, value, setOptions) end

---@param shouldRenderWorld boolean # esoui type: `bool`
function SetShouldRenderWorld(shouldRenderWorld) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param showHiddenGear boolean # esoui type: `bool`
function SetShowHiddenGearOnActivePreviewRules(showHiddenGear) end

---@param trackType TrackedDataType
---@param tracked boolean # esoui type: `bool`
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@return boolean success # esoui type: `bool`
function SetTracked(trackType, tracked, param1, param2) end

---@param antiquityId number # esoui type: `integer`
function SetTrackedAntiquityId(antiquityId) end

---@param trackType TrackedDataType
---@param assisted boolean # esoui type: `bool`
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
function SetTrackedIsAssisted(trackType, assisted, param1, param2) end

---@param filterType TradingHouseFilterType
---@param values? number # esoui type: `integer:nilable`
---@return boolean success # esoui type: `bool`
function SetTradingHouseFilter(filterType, values) end

---@param filterType TradingHouseFilterType
---@param minValue? number # esoui type: `integer:nilable`
---@param maxValue? number # esoui type: `integer:nilable`
---@return boolean success # esoui type: `bool`
function SetTradingHouseFilterRange(filterType, minValue, maxValue) end

---@param tutorialIndex number # esoui type: `luaindex`
function SetTutorialSeen(tutorialIndex) end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function SetupDyeStampPreview(bagId, slotIndex) end

---@param isVeteranDifficulty boolean # esoui type: `bool`
function SetVeteranDifficulty(isVeteranDifficulty) end

---@param cancelAll boolean # esoui type: `bool`
function SetVideoCancelAllOnCancelAny(cancelAll) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
---@param pitchRadians number
---@param yawRadians number
---@param rollRadians number
function SetWorldParticleEffectOrientation(particleEffectId, pitchRadians, yawRadians, rollRadians) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
---@param worldX number
---@param worldY number
---@param worldZ number
function SetWorldParticleEffectPosition(particleEffectId, worldX, worldY, worldZ) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
---@param scale number
function SetWorldParticleEffectScale(particleEffectId, scale) end

---@param journalQuestIndex number # esoui type: `luaindex`
function ShareQuest(journalQuestIndex) end

---@param abilityId number # esoui type: `integer`
---@return boolean showAsUsable # esoui type: `bool`
function ShouldAbilityShowAsUsableWithDuration(abilityId) end

---@param activityId number # esoui type: `integer`
---@return boolean forceFullPanelKeyboard # esoui type: `bool`
function ShouldActivityForceFullPanelKeyboard(activityId) end

---@param activitySetId number # esoui type: `integer`
---@return boolean forceFullPanelKeyboard # esoui type: `bool`
function ShouldActivitySetForceFullPanelKeyboard(activitySetId) end

---@param characterName string
---@return boolean shouldDisplay # esoui type: `bool`
function ShouldDisplayGuildMemberRemoveAlert(characterName) end

---@param guildId number # esoui type: `integer`
---@return boolean shouldDisplay # esoui type: `bool`
function ShouldDisplaySelfKickedFromGuildAlert(guildId) end

---@param itemLink string
---@return boolean shouldHideLevel # esoui type: `bool`
function ShouldHideTooltipRequiredLevel(itemLink) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param marketProductId number # esoui type: `integer`
---@return boolean shouldShowNotice # esoui type: `bool`
function ShouldMarketProductShowClaimGiftNotice(marketProductId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param urlType ApprovedURLType
---@return boolean urlOpensInOverlay # esoui type: `bool`
function ShouldOpenURLTypeInOverlay(urlType) end

---@param currencyType CurrencyType
---@return boolean shouldShowInLootHistory # esoui type: `bool`
function ShouldShowCurrencyInLootHistory(currencyType) end

---@param eulaType EULAType
---@return boolean shouldShow # esoui type: `bool`
function ShouldShowEULA(eulaType) end

---@param source MarketOpenOperation
function ShowEsoPlusPage(source) end

---@param marketProductSearchString string
---@param source MarketOpenOperation
function ShowMarketAndSearch(marketProductSearchString, source) end

---@param marketProductId number # esoui type: `integer`
---@param source MarketOpenOperation
function ShowMarketProduct(marketProductId, source) end

---@param onlyConsiderWhileMoving boolean # esoui type: `bool`
function ShowMouse(onlyConsiderWhileMoving) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param chapterId number # esoui type: `integer`
---@param isCollectorsEdition boolean # esoui type: `bool`
---@param source ChapterUpgradeSource
function ShowPlatformESOChapterUpgradeUI(chapterId, isCollectorsEdition, source) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ShowPlatformESOCrownPacksUI() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ShowPlatformESOPlusSubscriptionUI() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ShowPlatformStoreUI() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function SiegeWeaponFire() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function SiegeWeaponPackUp() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function SiegeWeaponRelease() end

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param actionSlotIndex number # esoui type: `luaindex`
function SlotSkillAbilityInSlot(skillType, skillLineIndex, skillIndex, actionSlotIndex) end

---NOTE! Uses variable returns...
---@param delims string
---@param stringToSplit string
---@return string strings
function SplitString(delims, stringToSplit) end

---@param bagId Bag
function StackBag(bagId) end

---@param searchString string
function StartAchievementSearch(searchString) end

---@param searchString string
function StartAntiquitySearch(searchString) end

---@param taskId number # esoui type: `integer`
function StartBackgroundListFilter(taskId) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StartBlock() end

---@param searchString string
function StartCollectibleSearch(searchString) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StartCommandPet() end

---@param searchString string
function StartDyesSearch(searchString) end

---@return ActivityQueueResult result
function StartGroupFinderSearch() end

---@param searchString string
function StartHelpSearch(searchString) end

---@param guildIndex number # esoui type: `integer`
function StartHeraldryCustomization(guildIndex) end

---@param searchString string
function StartItemSetCollectionSearch(searchString) end

---@param animationTimeline userdata # esoui type: `object`
---@param animationTarget MapPinAnimationTarget
---@param limitToMapType ControlType
---@param pinType MapDisplayPinType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
---@param playOffset number # esoui type: `integer`
---@param ignoreBreadcrumbs boolean # esoui type: `bool`
---@return boolean played # esoui type: `bool`
function StartMapPinAnimation(animationTimeline, animationTarget, limitToMapType, pinType, param1, param2, param3, playOffset, ignoreBreadcrumbs) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StartMouseSiegeWeaponAim() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param chamberIndex number # esoui type: `luaindex`
---@return boolean succesfullyStarted # esoui type: `bool`
function StartSettingChamber(chamberIndex) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StartSoulGemResurrection() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param UIWorldEffect UIWorldEffect
function StartWorldEffectOnPlayer(UIWorldEffect) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
function StartWorldParticleEffect(particleEffectId) end

function StopAllMovement() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StopBlock() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StopCommandPet() end

---@param pinType MapDisplayPinType
---@param param1 number # esoui type: `integer`
---@param param2 number # esoui type: `integer`
---@param param3 number # esoui type: `integer`
function StopMapPinAnimation(pinType, param1, param2, param3) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StopMouseSiegeWeaponAim() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StopSettingChamber() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param particleEffectId number # esoui type: `integer`
function StopWorldParticleEffect(particleEffectId) end

function StowAllVirtualItems() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StrafeLeftStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StrafeLeftStop() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StrafeRightStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function StrafeRightStop() end

---@param stringId string
---@return number id # esoui type: `id64`
function StringToId64(stringId) end

---@return boolean success # esoui type: `bool`
function SubmitCustomerServiceTicket() end

---@param guildId number # esoui type: `integer`
---@param applicationMessage string
---@return GuildApplicationResponse applicationResult
function SubmitGuildFinderApplication(guildId, applicationMessage) end

---@param giftId number # esoui type: `id64`
---@param note string
function TakeGift(giftId, note) end

---@param mailId number # esoui type: `id64`
function TakeMailAttachedItems(mailId) end

---@param mailId number # esoui type: `id64`
function TakeMailAttachedMoney(mailId) end

function TakeScreenshot() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ToggleAutoRun() end

function ToggleFullScreen() end

function ToggleGameCameraFirstPerson() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ToggleGameCameraPadlockTarget() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ToggleMount() end

function TogglePlayerWield() end

function ToggleShowIngameGui() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function ToggleWalk() end

---@param assistedPinType MapDisplayPinType
---@return MapDisplayPinType trackedPinType
function TrackedQuestPinForAssisted(assistedPinType) end

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param setAutoMapNavigationTarget boolean # esoui type: `bool`
---@return boolean foundActivityToTrack # esoui type: `bool`
function TrackNextActivityForZoneStory(zoneId, zoneCompletionType, setAutoMapNavigationTarget) end

function TradeAccept() end

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param tradeIndex? number # esoui type: `luaindex:nilable`
function TradeAddItem(bagId, slotIndex, tradeIndex) end

function TradeCancel() end

function TradeEdit() end

---@param target string
function TradeInvite(target) end

function TradeInviteAccept() end

---@param playerName string
function TradeInviteByName(playerName) end

function TradeInviteCancel() end

function TradeInviteDecline() end

---@param tradeIndex number # esoui type: `luaindex`
function TradeRemoveItem(tradeIndex) end

---@param amount number # esoui type: `integer`
function TradeSetMoney(amount) end

---@param trainTypeIndex RidingTrainType
function TrainRiding(trainTypeIndex) end

---@param fromChatContainerIndex number # esoui type: `luaindex`
---@param fromTabIndex number # esoui type: `luaindex`
---@param toChatContainerIndex number # esoui type: `luaindex`
---@param toTabIndex number # esoui type: `luaindex`
function TransferChatContainerTab(fromChatContainerIndex, fromTabIndex, toChatContainerIndex, toTabIndex) end

---@param currencyType CurrencyType
---@param amount number # esoui type: `integer`
---@param fromLocation CurrencyLocation
---@param toLocation CurrencyLocation
function TransferCurrency(currencyType, amount, fromLocation, toLocation) end

---@param slotId number # esoui type: `integer`
function TransferFromGuildBank(slotId) end

---@param sourceBagId Bag
---@param sourceSlotIndex number # esoui type: `integer`
function TransferToGuildBank(sourceBagId, sourceSlotIndex) end

---@param destinationKeepId number # esoui type: `integer`
function TravelToKeep(destinationKeepId) end

---@param event CrownCrateEvent
---@param rewardIndex? number # esoui type: `luaindex:nilable`
function TriggerCrownCrateNPCAnimation(event, rewardIndex) end

---@param triggerType TutorialTrigger
function TriggerTutorial(triggerType) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function TurnLeftStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function TurnLeftStop() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function TurnRightStart() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function TurnRightStop() end

---@param campaignUnassignType CampaignUnassignRequestType
function UnassignCampaignForPlayer(campaignUnassignType) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
function UnbindAllKeysFromAction(layerIndex, categoryIndex, actionIndex) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@param bindingIndex number # esoui type: `luaindex`
function UnbindKeyFromAction(layerIndex, categoryIndex, actionIndex, bindingIndex) end

---@param displayName string
---@return string undecoratedDisplayName
function UndecorateDisplayName(displayName) end

function UndoLastHousingEditorCommand() end

---@param actorCategory GameplayActorCategory
function UnequipOutfit(actorCategory) end

function UnregisterForAssignedCampaignData() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
---@param displayGroup MarketDisplayGroup
function UpdateMarketDisplayGroup(displayGroup) end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function UpdatePlayerPresenceInformation() end

---@deprecated
---*Access modifier* is `Private`.\
---This function cannot be used by addons.
function UpdatePlayerPresenceName() end

---@param role LFGRole
function UpdateSelectedLFGRole(role) end

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
function UseCollectible(collectibleId, actorCategory) end

---*Access modifier* is `Protected`.\
---This function cannot be used while player is in combat.
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
function UseItem(bagId, slotIndex) end

---@param characterOrDisplayName string
function UseMountAsPassenger(characterOrDisplayName) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
function UseQuestItem(journalQuestIndex, stepIndex, conditionIndex) end

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
function UseQuestTool(journalQuestIndex, toolIndex) end

---@param giftIds number # esoui type: `id64`
function ViewGifts(giftIds) end

---@return boolean consumed # esoui type: `bool`
function WasGamepadLeftStickConsumedByOverlay() end

---@return boolean? successful # esoui type: `bool:nilable`
function WasRaidSuccessful() end

---@param visualSlot VisualSlot
---@param actorCategory GameplayActorCategory
---@return VisualLayer highestPriorityVisualLayerThatIsShowing
function WhatIsVisualSlotShowing(visualSlot, actorCategory) end

---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return number renderX
---@return number renderY
---@return number renderZ
function WorldPositionToGuiRender3DPosition(worldX, worldY, worldZ) end

---@param championSkillId number # esoui type: `integer`
---@param pendingPoints number # esoui type: `integer`
---@return boolean unlocked # esoui type: `bool`
function WouldChampionSkillNodeBeUnlocked(championSkillId, pendingPoints) end

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
---@return boolean isHidden # esoui type: `bool`
---@return VisualLayer highestPriorityVisualLayerThatIsShowing
function WouldCollectibleBeHidden(collectibleId, actorCategory) end

---@param equipSlot EquipSlot
---@param actorCategory GameplayActorCategory
---@return boolean isHidden # esoui type: `bool`
---@return VisualLayer highestPriorityVisualLayerThatIsShowing
function WouldEquipmentBeHidden(equipSlot, actorCategory) end

---@param outfitIndex number # esoui type: `luaindex`
---@param actorCategory GameplayActorCategory
---@return boolean isHidden # esoui type: `bool`
---@return VisualLayer highestPriorityVisualLayerThatIsShowing
function WouldOutfitBeHidden(outfitIndex, actorCategory) end

---@param normalizedClickX number
---@param normalizedClickY number
---@return boolean wouldProcess # esoui type: `bool`
---@return number? resultingMapIndex # esoui type: `luaindex:nilable`
function WouldProcessMapClick(normalizedClickX, normalizedClickY) end

---@param string string
---@return number length # esoui type: `integer`
function ZoUTF8StringLength(string) end

