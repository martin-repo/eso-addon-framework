--[[
This file was generated by 'EsoLuaGenerator' at '2021-09-04 16:42:29' using API version '101031'.
]]

---@class Pack
EsoAddonFramework_Framework_Eso_Pack = { }

---@class AbbreviateNumberPack
---@field AbbreviatedValue number
---@field Suffix string

---@param number number # esoui type: `integer`
---@param precision NumberAbbreviationPrecision
---@param useUppercaseSuffix boolean # esoui type: `bool`
---@return AbbreviateNumberPack # Packed output from *AbbreviateNumber*
function EsoAddonFramework_Framework_Eso_Pack.AbbreviateNumber(number, precision, useUppercaseSuffix)
    local data = {AbbreviateNumber(number, precision, useUppercaseSuffix)}
    return {
        AbbreviatedValue = data[1],
        Suffix = data[2]
    }
end

---@class AreDyeChannelsDyeableForOutfitSlotDataPack
---@field Primary boolean # esoui type: `bool`
---@field Secondary boolean # esoui type: `bool`
---@field Accent boolean # esoui type: `bool`

---@param actorCategory GameplayActorCategory
---@param outfitSlot OutfitSlot
---@param collectibleId number # esoui type: `integer`
---@return AreDyeChannelsDyeableForOutfitSlotDataPack # Packed output from *AreDyeChannelsDyeableForOutfitSlotData*
function EsoAddonFramework_Framework_Eso_Pack.AreDyeChannelsDyeableForOutfitSlotData(actorCategory, outfitSlot, collectibleId)
    local data = {AreDyeChannelsDyeableForOutfitSlotData(actorCategory, outfitSlot, collectibleId)}
    return {
        Primary = data[1],
        Secondary = data[2],
        Accent = data[3]
    }
end

---@class AreItemDyeChannelsDyeablePack
---@field Primary boolean # esoui type: `bool`
---@field Secondary boolean # esoui type: `bool`
---@field Accent boolean # esoui type: `bool`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return AreItemDyeChannelsDyeablePack # Packed output from *AreItemDyeChannelsDyeable*
function EsoAddonFramework_Framework_Eso_Pack.AreItemDyeChannelsDyeable(bagId, slotIndex)
    local data = {AreItemDyeChannelsDyeable(bagId, slotIndex)}
    return {
        Primary = data[1],
        Secondary = data[2],
        Accent = data[3]
    }
end

---@class AreRestyleSlotDyeChannelsDyeablePack
---@field Primary boolean # esoui type: `bool`
---@field Secondary boolean # esoui type: `bool`
---@field Accent boolean # esoui type: `bool`

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return AreRestyleSlotDyeChannelsDyeablePack # Packed output from *AreRestyleSlotDyeChannelsDyeable*
function EsoAddonFramework_Framework_Eso_Pack.AreRestyleSlotDyeChannelsDyeable(restyleMode, restyleSetIndex, restyleSlot)
    local data = {AreRestyleSlotDyeChannelsDyeable(restyleMode, restyleSetIndex, restyleSlot)}
    return {
        Primary = data[1],
        Secondary = data[2],
        Accent = data[3]
    }
end

---@class CanJumpToGroupMemberPack
---@field CanJump boolean # esoui type: `bool`
---@field Result JumpToPlayerResult

---@param unitTag string
---@return CanJumpToGroupMemberPack # Packed output from *CanJumpToGroupMember*
function EsoAddonFramework_Framework_Eso_Pack.CanJumpToGroupMember(unitTag)
    local data = {CanJumpToGroupMember(unitTag)}
    return {
        CanJump = data[1],
        Result = data[2]
    }
end

---@class CanJumpToPlayerInZonePack
---@field CanJump boolean # esoui type: `bool`
---@field Result JumpToPlayerResult

---@param zoneId number # esoui type: `integer`
---@return CanJumpToPlayerInZonePack # Packed output from *CanJumpToPlayerInZone*
function EsoAddonFramework_Framework_Eso_Pack.CanJumpToPlayerInZone(zoneId)
    local data = {CanJumpToPlayerInZone(zoneId)}
    return {
        CanJump = data[1],
        Result = data[2]
    }
end

---@class CanPlayerChangeGroupDifficultyPack
---@field CanChange boolean # esoui type: `bool`
---@field Reason GroupDifficultyChangeReason

---@return CanPlayerChangeGroupDifficultyPack # Packed output from *CanPlayerChangeGroupDifficulty*
function EsoAddonFramework_Framework_Eso_Pack.CanPlayerChangeGroupDifficulty()
    local data = {CanPlayerChangeGroupDifficulty()}
    return {
        CanChange = data[1],
        Reason = data[2]
    }
end

---@class CanSmithingStyleBeUsedOnPatternPack
---@field CanBeUsed boolean # esoui type: `bool`
---@field LevelRequirement number # esoui type: `integer`
---@field ChampionPointsRequirement number # esoui type: `integer`

---@param itemStyleId number # esoui type: `integer`
---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@return CanSmithingStyleBeUsedOnPatternPack # Packed output from *CanSmithingStyleBeUsedOnPattern*
function EsoAddonFramework_Framework_Eso_Pack.CanSmithingStyleBeUsedOnPattern(itemStyleId, patternIndex, materialIndex, materialQuantity)
    local data = {CanSmithingStyleBeUsedOnPattern(itemStyleId, patternIndex, materialIndex, materialQuantity)}
    return {
        CanBeUsed = data[1],
        LevelRequirement = data[2],
        ChampionPointsRequirement = data[3]
    }
end

---@class ChromaGetCustomEffectCellColorPack
---@field Red number
---@field Green number
---@field Blue number

---@param deviceType ChromaDeviceType
---@param rowIndex number # esoui type: `luaindex`
---@param columnIndex number # esoui type: `luaindex`
---@return ChromaGetCustomEffectCellColorPack # Packed output from *ChromaGetCustomEffectCellColor*
function EsoAddonFramework_Framework_Eso_Pack.ChromaGetCustomEffectCellColor(deviceType, rowIndex, columnIndex)
    local data = {ChromaGetCustomEffectCellColor(deviceType, rowIndex, columnIndex)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3]
    }
end

---@class ChromaGetCustomEffectDimensionsPack
---@field NumRows number # esoui type: `integer`
---@field NumColumn number # esoui type: `integer`

---@param deviceType ChromaDeviceType
---@return ChromaGetCustomEffectDimensionsPack # Packed output from *ChromaGetCustomEffectDimensions*
function EsoAddonFramework_Framework_Eso_Pack.ChromaGetCustomEffectDimensions(deviceType)
    local data = {ChromaGetCustomEffectDimensions(deviceType)}
    return {
        NumRows = data[1],
        NumColumn = data[2]
    }
end

---@class CompareBagItemToCurrentlyEquippedPack
---@field DerivedStat DerivedStats
---@field StatDelta number # esoui type: `integer`

---NOTE! Uses variable returns...
---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@param equipSlot EquipSlot
---@return CompareBagItemToCurrentlyEquippedPack # Packed output from *CompareBagItemToCurrentlyEquipped*
function EsoAddonFramework_Framework_Eso_Pack.CompareBagItemToCurrentlyEquipped(bagId, slotIndex, equipSlot)
    local data = {CompareBagItemToCurrentlyEquipped(bagId, slotIndex, equipSlot)}
    return {
        DerivedStat = data[1],
        StatDelta = data[2]
    }
end

---@class CompareItemLinkToCurrentlyEquippedPack
---@field DerivedStat DerivedStats
---@field StatDelta number # esoui type: `integer`

---NOTE! Uses variable returns...
---@param itemLink string
---@param equipSlot EquipSlot
---@return CompareItemLinkToCurrentlyEquippedPack # Packed output from *CompareItemLinkToCurrentlyEquipped*
function EsoAddonFramework_Framework_Eso_Pack.CompareItemLinkToCurrentlyEquipped(itemLink, equipSlot)
    local data = {CompareItemLinkToCurrentlyEquipped(itemLink, equipSlot)}
    return {
        DerivedStat = data[1],
        StatDelta = data[2]
    }
end

---@class ConvertItemGlyphTierRangeToRequiredLevelRangePack
---@field MinRequiredLevel number # esoui type: `integer`
---@field MaxRequiredLevel number # esoui type: `integer`

---@param isChampionRank boolean # esoui type: `bool`
---@param minTierLevel? number # esoui type: `integer:nilable`
---@param maxTierLevel? number # esoui type: `integer:nilable`
---@return ConvertItemGlyphTierRangeToRequiredLevelRangePack # Packed output from *ConvertItemGlyphTierRangeToRequiredLevelRange*
function EsoAddonFramework_Framework_Eso_Pack.ConvertItemGlyphTierRangeToRequiredLevelRange(isChampionRank, minTierLevel, maxTierLevel)
    local data = {ConvertItemGlyphTierRangeToRequiredLevelRange(isChampionRank, minTierLevel, maxTierLevel)}
    return {
        MinRequiredLevel = data[1],
        MaxRequiredLevel = data[2]
    }
end

---@class DeclineGuildApplicationPack
---@field DeclinedResult GuildProcessApplicationResponse
---@field BlacklistResult GuildBlacklistResponse

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@param declineMessage string
---@param blacklistApplicant boolean # esoui type: `bool`
---@param blacklistMessage string
---@return DeclineGuildApplicationPack # Packed output from *DeclineGuildApplication*
function EsoAddonFramework_Framework_Eso_Pack.DeclineGuildApplication(guildId, index, declineMessage, blacklistApplicant, blacklistMessage)
    local data = {DeclineGuildApplication(guildId, index, declineMessage, blacklistApplicant, blacklistMessage)}
    return {
        DeclinedResult = data[1],
        BlacklistResult = data[2]
    }
end

---@class DoesAntiquityPassVisibilityRequirementsPack
---@field IsVisible boolean # esoui type: `bool`
---@field ErrorStringId number # esoui type: `integer`

---@param antiquityId number # esoui type: `integer`
---@return DoesAntiquityPassVisibilityRequirementsPack # Packed output from *DoesAntiquityPassVisibilityRequirements*
function EsoAddonFramework_Framework_Eso_Pack.DoesAntiquityPassVisibilityRequirements(antiquityId)
    local data = {DoesAntiquityPassVisibilityRequirements(antiquityId)}
    return {
        IsVisible = data[1],
        ErrorStringId = data[2]
    }
end

---@class FormatAchievementLinkTimestampPack
---@field Date string
---@field Time string

---@param timestamp string
---@return FormatAchievementLinkTimestampPack # Packed output from *FormatAchievementLinkTimestamp*
function EsoAddonFramework_Framework_Eso_Pack.FormatAchievementLinkTimestamp(timestamp)
    local data = {FormatAchievementLinkTimestamp(timestamp)}
    return {
        Date = data[1],
        Time = data[2]
    }
end

---@class FormatTimeMillisecondsPack
---@field FormattedTimeString string
---@field NextUpdateTimeInMilliseconds number # esoui type: `integer`

---@param timeValueInMilliseconds number # esoui type: `integer`
---@param formatType TimeFormatStyleCode
---@param precisionType TimeFormatPrecisionCode
---@param direction TimeFormatDirectionCode
---@return FormatTimeMillisecondsPack # Packed output from *FormatTimeMilliseconds*
function EsoAddonFramework_Framework_Eso_Pack.FormatTimeMilliseconds(timeValueInMilliseconds, formatType, precisionType, direction)
    local data = {FormatTimeMilliseconds(timeValueInMilliseconds, formatType, precisionType, direction)}
    return {
        FormattedTimeString = data[1],
        NextUpdateTimeInMilliseconds = data[2]
    }
end

---@class FormatTimeSecondsPack
---@field FormattedTimeString string
---@field NextUpdateTimeInSec number

---@param timeValueInSeconds number
---@param formatType TimeFormatStyleCode
---@param precisionType TimeFormatPrecisionCode
---@param direction TimeFormatDirectionCode
---@return FormatTimeSecondsPack # Packed output from *FormatTimeSeconds*
function EsoAddonFramework_Framework_Eso_Pack.FormatTimeSeconds(timeValueInSeconds, formatType, precisionType, direction)
    local data = {FormatTimeSeconds(timeValueInSeconds, formatType, precisionType, direction)}
    return {
        FormattedTimeString = data[1],
        NextUpdateTimeInSec = data[2]
    }
end

---@class GenerateAvAObjectiveConditionTooltipLinePack
---@field Text string
---@field InterfaceColorType InterfaceColorType
---@field Color number # esoui type: `integer`

---@param bgQueryType BattlegroundQueryContextType
---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param objectivePinTier ObjectivePinTier
---@return GenerateAvAObjectiveConditionTooltipLinePack # Packed output from *GenerateAvAObjectiveConditionTooltipLine*
function EsoAddonFramework_Framework_Eso_Pack.GenerateAvAObjectiveConditionTooltipLine(bgQueryType, keepId, objectiveId, objectivePinTier)
    local data = {GenerateAvAObjectiveConditionTooltipLine(bgQueryType, keepId, objectiveId, objectivePinTier)}
    return {
        Text = data[1],
        InterfaceColorType = data[2],
        Color = data[3]
    }
end

---@class GenerateMapPingTooltipLinePack
---@field Text string
---@field InterfaceColorType InterfaceColorType
---@field Color number # esoui type: `integer`

---@param mapPingType MapDisplayPinType
---@param unitTag string
---@return GenerateMapPingTooltipLinePack # Packed output from *GenerateMapPingTooltipLine*
function EsoAddonFramework_Framework_Eso_Pack.GenerateMapPingTooltipLine(mapPingType, unitTag)
    local data = {GenerateMapPingTooltipLine(mapPingType, unitTag)}
    return {
        Text = data[1],
        InterfaceColorType = data[2],
        Color = data[3]
    }
end

---@class GenerateQuestConditionTooltipLinePack
---@field Text string
---@field InterfaceColorType InterfaceColorType
---@field Color number # esoui type: `integer`

---@param questIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param useShortDescription boolean # esoui type: `bool`
---@return GenerateQuestConditionTooltipLinePack # Packed output from *GenerateQuestConditionTooltipLine*
function EsoAddonFramework_Framework_Eso_Pack.GenerateQuestConditionTooltipLine(questIndex, stepIndex, conditionIndex, useShortDescription)
    local data = {GenerateQuestConditionTooltipLine(questIndex, stepIndex, conditionIndex, useShortDescription)}
    return {
        Text = data[1],
        InterfaceColorType = data[2],
        Color = data[3]
    }
end

---@class GenerateQuestEndingTooltipLinePack
---@field Text string
---@field InterfaceColorType InterfaceColorType
---@field Color number # esoui type: `integer`

---@param questIndex number # esoui type: `luaindex`
---@return GenerateQuestEndingTooltipLinePack # Packed output from *GenerateQuestEndingTooltipLine*
function EsoAddonFramework_Framework_Eso_Pack.GenerateQuestEndingTooltipLine(questIndex)
    local data = {GenerateQuestEndingTooltipLine(questIndex)}
    return {
        Text = data[1],
        InterfaceColorType = data[2],
        Color = data[3]
    }
end

---@class GenerateUnitNameTooltipLinePack
---@field Text string
---@field InterfaceColorType InterfaceColorType
---@field Color number # esoui type: `integer`

---@param unitTag string
---@return GenerateUnitNameTooltipLinePack # Packed output from *GenerateUnitNameTooltipLine*
function EsoAddonFramework_Framework_Eso_Pack.GenerateUnitNameTooltipLine(unitTag)
    local data = {GenerateUnitNameTooltipLine(unitTag)}
    return {
        Text = data[1],
        InterfaceColorType = data[2],
        Color = data[3]
    }
end

---@class GetAbilityCastInfoPack
---@field Channeled boolean # esoui type: `bool`
---@field CastTime number # esoui type: `integer`
---@field ChannelTime number # esoui type: `integer`

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return GetAbilityCastInfoPack # Packed output from *GetAbilityCastInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityCastInfo(abilityId, overrideRank, casterUnitTag)
    local data = {GetAbilityCastInfo(abilityId, overrideRank, casterUnitTag)}
    return {
        Channeled = data[1],
        CastTime = data[2],
        ChannelTime = data[3]
    }
end

---@class GetAbilityCostPack
---@field Cost number # esoui type: `integer`
---@field Mechanic CombatMechanicType

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@return GetAbilityCostPack # Packed output from *GetAbilityCost*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityCost(abilityId, overrideRank)
    local data = {GetAbilityCost(abilityId, overrideRank)}
    return {
        Cost = data[1],
        Mechanic = data[2]
    }
end

---@class GetAbilityCostOverTimePack
---@field Cost number # esoui type: `integer`
---@field MechanicType CombatMechanicType
---@field ChargeFrequencyMS number # esoui type: `integer`

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@return GetAbilityCostOverTimePack # Packed output from *GetAbilityCostOverTime*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityCostOverTime(abilityId, overrideRank)
    local data = {GetAbilityCostOverTime(abilityId, overrideRank)}
    return {
        Cost = data[1],
        MechanicType = data[2],
        ChargeFrequencyMS = data[3]
    }
end

---@class GetAbilityInfoByIndexPack
---@field Name string
---@field Texture string
---@field Rank number # esoui type: `integer`
---@field ActionSlotType number # esoui type: `integer`
---@field Passive boolean # esoui type: `bool`
---@field ShowInSpellbook boolean # esoui type: `bool`

---@param abilityIndex number # esoui type: `luaindex`
---@return GetAbilityInfoByIndexPack # Packed output from *GetAbilityInfoByIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityInfoByIndex(abilityIndex)
    local data = {GetAbilityInfoByIndex(abilityIndex)}
    return {
        Name = data[1],
        Texture = data[2],
        Rank = data[3],
        ActionSlotType = data[4],
        Passive = data[5],
        ShowInSpellbook = data[6]
    }
end

---@class GetAbilityProgressionAbilityInfoPack
---@field Name string
---@field Texture string
---@field AbilityIndex number # esoui type: `luaindex`

---@param progressionIndex number # esoui type: `luaindex`
---@param morph number # esoui type: `integer`
---@param rank number # esoui type: `integer`
---@return GetAbilityProgressionAbilityInfoPack # Packed output from *GetAbilityProgressionAbilityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityProgressionAbilityInfo(progressionIndex, morph, rank)
    local data = {GetAbilityProgressionAbilityInfo(progressionIndex, morph, rank)}
    return {
        Name = data[1],
        Texture = data[2],
        AbilityIndex = data[3]
    }
end

---@class GetAbilityProgressionInfoPack
---@field Name string
---@field Morph number # esoui type: `integer`
---@field Rank number # esoui type: `integer`

---@param progressionIndex number # esoui type: `luaindex`
---@return GetAbilityProgressionInfoPack # Packed output from *GetAbilityProgressionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityProgressionInfo(progressionIndex)
    local data = {GetAbilityProgressionInfo(progressionIndex)}
    return {
        Name = data[1],
        Morph = data[2],
        Rank = data[3]
    }
end

---@class GetAbilityProgressionXPInfoPack
---@field LastRankXp number # esoui type: `integer`
---@field NextRankXP number # esoui type: `integer`
---@field CurrentXP number # esoui type: `integer`
---@field AtMorph boolean # esoui type: `bool`

---@param progressionIndex number # esoui type: `luaindex`
---@return GetAbilityProgressionXPInfoPack # Packed output from *GetAbilityProgressionXPInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityProgressionXPInfo(progressionIndex)
    local data = {GetAbilityProgressionXPInfo(progressionIndex)}
    return {
        LastRankXp = data[1],
        NextRankXP = data[2],
        CurrentXP = data[3],
        AtMorph = data[4]
    }
end

---@class GetAbilityProgressionXPInfoFromAbilityIdPack
---@field HasProgression boolean # esoui type: `bool`
---@field ProgressionIndex number # esoui type: `luaindex`
---@field LastRankXp number # esoui type: `integer`
---@field NextRankXP number # esoui type: `integer`
---@field CurrentXP number # esoui type: `integer`
---@field AtMorph boolean # esoui type: `bool`

---@param abilityId number # esoui type: `integer`
---@return GetAbilityProgressionXPInfoFromAbilityIdPack # Packed output from *GetAbilityProgressionXPInfoFromAbilityId*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityProgressionXPInfoFromAbilityId(abilityId)
    local data = {GetAbilityProgressionXPInfoFromAbilityId(abilityId)}
    return {
        HasProgression = data[1],
        ProgressionIndex = data[2],
        LastRankXp = data[3],
        NextRankXP = data[4],
        CurrentXP = data[5],
        AtMorph = data[6]
    }
end

---@class GetAbilityRangePack
---@field MinRangeCM number # esoui type: `integer`
---@field MaxRangeCM number # esoui type: `integer`

---@param abilityId number # esoui type: `integer`
---@param overrideRank? number # esoui type: `integer:nilable`
---@param casterUnitTag string
---@return GetAbilityRangePack # Packed output from *GetAbilityRange*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityRange(abilityId, overrideRank, casterUnitTag)
    local data = {GetAbilityRange(abilityId, overrideRank, casterUnitTag)}
    return {
        MinRangeCM = data[1],
        MaxRangeCM = data[2]
    }
end

---@class GetAbilityRolesPack
---@field IsTankRoleAbility boolean # esoui type: `bool`
---@field IsHealerRoleAbility boolean # esoui type: `bool`
---@field IsDamageRoleAbility boolean # esoui type: `bool`

---@param abilityId number # esoui type: `integer`
---@return GetAbilityRolesPack # Packed output from *GetAbilityRoles*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityRoles(abilityId)
    local data = {GetAbilityRoles(abilityId)}
    return {
        IsTankRoleAbility = data[1],
        IsHealerRoleAbility = data[2],
        IsDamageRoleAbility = data[3]
    }
end

---@class GetAbilityUpgradeLinesPack
---@field Label string
---@field OldValue string
---@field NewValue string

---NOTE! Uses variable returns...
---@param abilityId number # esoui type: `integer`
---@return GetAbilityUpgradeLinesPack # Packed output from *GetAbilityUpgradeLines*
function EsoAddonFramework_Framework_Eso_Pack.GetAbilityUpgradeLines(abilityId)
    local data = {GetAbilityUpgradeLines(abilityId)}
    return {
        Label = data[1],
        OldValue = data[2],
        NewValue = data[3]
    }
end

---@class GetAchievementCategoryInfoPack
---@field Name string
---@field NumSubCatgories number # esoui type: `integer`
---@field NumAchievements number # esoui type: `integer`
---@field EarnedPoints number # esoui type: `integer`
---@field TotalPoints number # esoui type: `integer`
---@field HidesPoints boolean # esoui type: `bool`

---@param topLevelIndex number # esoui type: `luaindex`
---@return GetAchievementCategoryInfoPack # Packed output from *GetAchievementCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementCategoryInfo(topLevelIndex)
    local data = {GetAchievementCategoryInfo(topLevelIndex)}
    return {
        Name = data[1],
        NumSubCatgories = data[2],
        NumAchievements = data[3],
        EarnedPoints = data[4],
        TotalPoints = data[5],
        HidesPoints = data[6]
    }
end

---@class GetAchievementCategoryKeyboardIconsPack
---@field NormalIcon string # esoui type: `textureName`
---@field PressedIcon string # esoui type: `textureName`
---@field MouseoverIcon string # esoui type: `textureName`

---@param categoryIndex number # esoui type: `luaindex`
---@return GetAchievementCategoryKeyboardIconsPack # Packed output from *GetAchievementCategoryKeyboardIcons*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementCategoryKeyboardIcons(categoryIndex)
    local data = {GetAchievementCategoryKeyboardIcons(categoryIndex)}
    return {
        NormalIcon = data[1],
        PressedIcon = data[2],
        MouseoverIcon = data[3]
    }
end

---@class GetAchievementCriterionPack
---@field Description string
---@field NumCompleted number # esoui type: `integer`
---@field NumRequired number # esoui type: `integer`

---@param achievementId number # esoui type: `integer`
---@param criterionIndex number # esoui type: `luaindex`
---@return GetAchievementCriterionPack # Packed output from *GetAchievementCriterion*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementCriterion(achievementId, criterionIndex)
    local data = {GetAchievementCriterion(achievementId, criterionIndex)}
    return {
        Description = data[1],
        NumCompleted = data[2],
        NumRequired = data[3]
    }
end

---@class GetAchievementInfoPack
---@field Name string
---@field Description string
---@field Points number # esoui type: `integer`
---@field Icon string # esoui type: `textureName`
---@field Completed boolean # esoui type: `bool`
---@field Date string
---@field Time string

---@param achievementId number # esoui type: `integer`
---@return GetAchievementInfoPack # Packed output from *GetAchievementInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementInfo(achievementId)
    local data = {GetAchievementInfo(achievementId)}
    return {
        Name = data[1],
        Description = data[2],
        Points = data[3],
        Icon = data[4],
        Completed = data[5],
        Date = data[6],
        Time = data[7]
    }
end

---@class GetAchievementRewardCollectiblePack
---@field HasRewardOfType boolean # esoui type: `bool`
---@field CollectibleId number # esoui type: `integer`

---@param achievementId number # esoui type: `integer`
---@return GetAchievementRewardCollectiblePack # Packed output from *GetAchievementRewardCollectible*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementRewardCollectible(achievementId)
    local data = {GetAchievementRewardCollectible(achievementId)}
    return {
        HasRewardOfType = data[1],
        CollectibleId = data[2]
    }
end

---@class GetAchievementRewardDyePack
---@field HasRewardOfType boolean # esoui type: `bool`
---@field DyeId number # esoui type: `integer`

---@param achievementId number # esoui type: `integer`
---@return GetAchievementRewardDyePack # Packed output from *GetAchievementRewardDye*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementRewardDye(achievementId)
    local data = {GetAchievementRewardDye(achievementId)}
    return {
        HasRewardOfType = data[1],
        DyeId = data[2]
    }
end

---@class GetAchievementRewardItemPack
---@field HasRewardOfType boolean # esoui type: `bool`
---@field ItemName string
---@field IconTextureName string
---@field DisplayQuality ItemDisplayQuality

---@param achievementId number # esoui type: `integer`
---@return GetAchievementRewardItemPack # Packed output from *GetAchievementRewardItem*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementRewardItem(achievementId)
    local data = {GetAchievementRewardItem(achievementId)}
    return {
        HasRewardOfType = data[1],
        ItemName = data[2],
        IconTextureName = data[3],
        DisplayQuality = data[4]
    }
end

---@class GetAchievementRewardTitlePack
---@field HasRewardOfType boolean # esoui type: `bool`
---@field TitleName string

---@param achievementId number # esoui type: `integer`
---@return GetAchievementRewardTitlePack # Packed output from *GetAchievementRewardTitle*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementRewardTitle(achievementId)
    local data = {GetAchievementRewardTitle(achievementId)}
    return {
        HasRewardOfType = data[1],
        TitleName = data[2]
    }
end

---@class GetAchievementsSearchResultPack
---@field CategoryIndex number # esoui type: `luaindex`
---@field SubcategoryIndex? number # esoui type: `luaindex:nilable`
---@field AchievementIndex number # esoui type: `luaindex`

---@param searchResultIndex number # esoui type: `luaindex`
---@return GetAchievementsSearchResultPack # Packed output from *GetAchievementsSearchResult*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementsSearchResult(searchResultIndex)
    local data = {GetAchievementsSearchResult(searchResultIndex)}
    return {
        CategoryIndex = data[1],
        SubcategoryIndex = data[2],
        AchievementIndex = data[3]
    }
end

---@class GetAchievementSubCategoryInfoPack
---@field Name string
---@field NumAchievements number # esoui type: `integer`
---@field EarnedPoints number # esoui type: `integer`
---@field TotalPoints number # esoui type: `integer`
---@field HidesPoints boolean # esoui type: `bool`

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex number # esoui type: `luaindex`
---@return GetAchievementSubCategoryInfoPack # Packed output from *GetAchievementSubCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAchievementSubCategoryInfo(topLevelIndex, subCategoryIndex)
    local data = {GetAchievementSubCategoryInfo(topLevelIndex, subCategoryIndex)}
    return {
        Name = data[1],
        NumAchievements = data[2],
        EarnedPoints = data[3],
        TotalPoints = data[4],
        HidesPoints = data[5]
    }
end

---@class GetActionBindingInfoPack
---@field KeyCode KeyCode
---@field Mod1 KeyCode
---@field Mod2 KeyCode
---@field Mod3 KeyCode
---@field Mod4 KeyCode

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@param bindingIndex number # esoui type: `luaindex`
---@return GetActionBindingInfoPack # Packed output from *GetActionBindingInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActionBindingInfo(layerIndex, categoryIndex, actionIndex, bindingIndex)
    local data = {GetActionBindingInfo(layerIndex, categoryIndex, actionIndex, bindingIndex)}
    return {
        KeyCode = data[1],
        Mod1 = data[2],
        Mod2 = data[3],
        Mod3 = data[4],
        Mod4 = data[5]
    }
end

---@class GetActionIndicesFromNamePack
---@field LayerIndex? number # esoui type: `luaindex:nilable`
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field ActionIndex? number # esoui type: `luaindex:nilable`

---@param actionName string
---@return GetActionIndicesFromNamePack # Packed output from *GetActionIndicesFromName*
function EsoAddonFramework_Framework_Eso_Pack.GetActionIndicesFromName(actionName)
    local data = {GetActionIndicesFromName(actionName)}
    return {
        LayerIndex = data[1],
        CategoryIndex = data[2],
        ActionIndex = data[3]
    }
end

---@class GetActionInfoPack
---@field ActionName string
---@field IsRebindable boolean # esoui type: `bool`
---@field IsHidden boolean # esoui type: `bool`

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@param actionIndex number # esoui type: `luaindex`
---@return GetActionInfoPack # Packed output from *GetActionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActionInfo(layerIndex, categoryIndex, actionIndex)
    local data = {GetActionInfo(layerIndex, categoryIndex, actionIndex)}
    return {
        ActionName = data[1],
        IsRebindable = data[2],
        IsHidden = data[3]
    }
end

---@class GetActionLayerCategoryInfoPack
---@field CategoryName string
---@field NumActions number # esoui type: `integer`

---@param layerIndex number # esoui type: `luaindex`
---@param categoryIndex number # esoui type: `luaindex`
---@return GetActionLayerCategoryInfoPack # Packed output from *GetActionLayerCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActionLayerCategoryInfo(layerIndex, categoryIndex)
    local data = {GetActionLayerCategoryInfo(layerIndex, categoryIndex)}
    return {
        CategoryName = data[1],
        NumActions = data[2]
    }
end

---@class GetActionLayerInfoPack
---@field LayerName string
---@field NumLayerCategories number # esoui type: `integer`

---@param layerIndex number # esoui type: `luaindex`
---@return GetActionLayerInfoPack # Packed output from *GetActionLayerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActionLayerInfo(layerIndex)
    local data = {GetActionLayerInfo(layerIndex)}
    return {
        LayerName = data[1],
        NumLayerCategories = data[2]
    }
end

---@class GetActiveAnnouncementMarketProductListingsForHouseTemplatePack
---@field MarketProductId number # esoui type: `integer`
---@field PresentationIndex number # esoui type: `luaindex`

---NOTE! Uses variable returns...
---@param houseTemplateId number # esoui type: `integer`
---@return GetActiveAnnouncementMarketProductListingsForHouseTemplatePack # Packed output from *GetActiveAnnouncementMarketProductListingsForHouseTemplate*
function EsoAddonFramework_Framework_Eso_Pack.GetActiveAnnouncementMarketProductListingsForHouseTemplate(houseTemplateId)
    local data = {GetActiveAnnouncementMarketProductListingsForHouseTemplate(houseTemplateId)}
    return {
        MarketProductId = data[1],
        PresentationIndex = data[2]
    }
end

---@class GetActiveCombatTipInfoPack
---@field Name string
---@field TipText string
---@field IconPath string

---@param activeCombatTipId number # esoui type: `integer`
---@return GetActiveCombatTipInfoPack # Packed output from *GetActiveCombatTipInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActiveCombatTipInfo(activeCombatTipId)
    local data = {GetActiveCombatTipInfo(activeCombatTipId)}
    return {
        Name = data[1],
        TipText = data[2],
        IconPath = data[3]
    }
end

---@class GetActiveCompanionLevelInfoPack
---@field Level number # esoui type: `integer`
---@field CurrentExperience number # esoui type: `integer`

---@return GetActiveCompanionLevelInfoPack # Packed output from *GetActiveCompanionLevelInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActiveCompanionLevelInfo()
    local data = {GetActiveCompanionLevelInfo()}
    return {
        Level = data[1],
        CurrentExperience = data[2]
    }
end

---@class GetActiveMarketProductListingsForHouseTemplatePack
---@field MarketProductId number # esoui type: `integer`
---@field PresentationIndex number # esoui type: `luaindex`

---NOTE! Uses variable returns...
---@param houseTemplateId number # esoui type: `integer`
---@param displayGroup MarketDisplayGroup
---@return GetActiveMarketProductListingsForHouseTemplatePack # Packed output from *GetActiveMarketProductListingsForHouseTemplate*
function EsoAddonFramework_Framework_Eso_Pack.GetActiveMarketProductListingsForHouseTemplate(houseTemplateId, displayGroup)
    local data = {GetActiveMarketProductListingsForHouseTemplate(houseTemplateId, displayGroup)}
    return {
        MarketProductId = data[1],
        PresentationIndex = data[2]
    }
end

---@class GetActiveWeaponPairInfoPack
---@field ActiveWeaponPair ActiveWeaponPair
---@field Locked boolean # esoui type: `bool`

---@return GetActiveWeaponPairInfoPack # Packed output from *GetActiveWeaponPairInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActiveWeaponPairInfo()
    local data = {GetActiveWeaponPairInfo()}
    return {
        ActiveWeaponPair = data[1],
        Locked = data[2]
    }
end

---@class GetActivityAverageRoleTimePack
---@field HasData boolean # esoui type: `bool`
---@field TimeSeconds number # esoui type: `integer`

---@param activityId number # esoui type: `integer`
---@param role LFGRole
---@return GetActivityAverageRoleTimePack # Packed output from *GetActivityAverageRoleTime*
function EsoAddonFramework_Framework_Eso_Pack.GetActivityAverageRoleTime(activityId, role)
    local data = {GetActivityAverageRoleTime(activityId, role)}
    return {
        HasData = data[1],
        TimeSeconds = data[2]
    }
end

---@class GetActivityInfoPack
---@field Name string
---@field LevelMin number # esoui type: `integer`
---@field LevelMax number # esoui type: `integer`
---@field ChampionPointsMin number # esoui type: `integer`
---@field ChampionPointsMax number # esoui type: `integer`
---@field GroupType LFGGroupType
---@field MinGroupSize number # esoui type: `integer`
---@field Description string
---@field SortOrder number # esoui type: `integer`

---@param activityId number # esoui type: `integer`
---@return GetActivityInfoPack # Packed output from *GetActivityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActivityInfo(activityId)
    local data = {GetActivityInfo(activityId)}
    return {
        Name = data[1],
        LevelMin = data[2],
        LevelMax = data[3],
        ChampionPointsMin = data[4],
        ChampionPointsMax = data[5],
        GroupType = data[6],
        MinGroupSize = data[7],
        Description = data[8],
        SortOrder = data[9]
    }
end

---@class GetActivityKeyboardDescriptionTexturesPack
---@field DescriptionTextureSmallKeyboard string # esoui type: `textureName`
---@field DescriptionTextureLargeKeyboard string # esoui type: `textureName`

---@param activityId number # esoui type: `integer`
---@return GetActivityKeyboardDescriptionTexturesPack # Packed output from *GetActivityKeyboardDescriptionTextures*
function EsoAddonFramework_Framework_Eso_Pack.GetActivityKeyboardDescriptionTextures(activityId)
    local data = {GetActivityKeyboardDescriptionTextures(activityId)}
    return {
        DescriptionTextureSmallKeyboard = data[1],
        DescriptionTextureLargeKeyboard = data[2]
    }
end

---@class GetActivityRequestIdsPack
---@field ActivityId number # esoui type: `integer`
---@field ActivitySetId number # esoui type: `integer`

---@param requestIndex number # esoui type: `luaindex`
---@return GetActivityRequestIdsPack # Packed output from *GetActivityRequestIds*
function EsoAddonFramework_Framework_Eso_Pack.GetActivityRequestIds(requestIndex)
    local data = {GetActivityRequestIds(requestIndex)}
    return {
        ActivityId = data[1],
        ActivitySetId = data[2]
    }
end

---@class GetActivitySetInfoPack
---@field Name string
---@field Description string
---@field SortOrder number # esoui type: `integer`

---@param activitySetId number # esoui type: `integer`
---@return GetActivitySetInfoPack # Packed output from *GetActivitySetInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetActivitySetInfo(activitySetId)
    local data = {GetActivitySetInfo(activitySetId)}
    return {
        Name = data[1],
        Description = data[2],
        SortOrder = data[3]
    }
end

---@class GetActivitySetKeyboardDescriptionTexturesPack
---@field DescriptionTextureSmallKeyboard string # esoui type: `textureName`
---@field DescriptionTextureLargeKeyboard string # esoui type: `textureName`

---@param activitySetId number # esoui type: `integer`
---@return GetActivitySetKeyboardDescriptionTexturesPack # Packed output from *GetActivitySetKeyboardDescriptionTextures*
function EsoAddonFramework_Framework_Eso_Pack.GetActivitySetKeyboardDescriptionTextures(activitySetId)
    local data = {GetActivitySetKeyboardDescriptionTextures(activitySetId)}
    return {
        DescriptionTextureSmallKeyboard = data[1],
        DescriptionTextureLargeKeyboard = data[2]
    }
end

---@class GetActivitySetRewardDataPack
---@field RewardUIDataId number # esoui type: `integer`
---@field XpReward number # esoui type: `integer`

---@param activitySetId number # esoui type: `integer`
---@return GetActivitySetRewardDataPack # Packed output from *GetActivitySetRewardData*
function EsoAddonFramework_Framework_Eso_Pack.GetActivitySetRewardData(activitySetId)
    local data = {GetActivitySetRewardData(activitySetId)}
    return {
        RewardUIDataId = data[1],
        XpReward = data[2]
    }
end

---@class GetActivityTypeAndIndexPack
---@field Activity LFGActivity
---@field Index number # esoui type: `luaindex`

---@param activityId number # esoui type: `integer`
---@return GetActivityTypeAndIndexPack # Packed output from *GetActivityTypeAndIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetActivityTypeAndIndex(activityId)
    local data = {GetActivityTypeAndIndex(activityId)}
    return {
        Activity = data[1],
        Index = data[2]
    }
end

---@class GetAdvancedStatCategoryInfoPack
---@field DisplayName string
---@field NumStats number # esoui type: `integer`

---@param categoryId number # esoui type: `integer`
---@return GetAdvancedStatCategoryInfoPack # Packed output from *GetAdvancedStatCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAdvancedStatCategoryInfo(categoryId)
    local data = {GetAdvancedStatCategoryInfo(categoryId)}
    return {
        DisplayName = data[1],
        NumStats = data[2]
    }
end

---@class GetAdvancedStatInfoPack
---@field StatType AdvancedStatDisplayType
---@field DisplayName string
---@field Description string
---@field FlatDescription string
---@field PercentDescription string

---@param categoryId number # esoui type: `integer`
---@param statIndex number # esoui type: `luaindex`
---@return GetAdvancedStatInfoPack # Packed output from *GetAdvancedStatInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAdvancedStatInfo(categoryId, statIndex)
    local data = {GetAdvancedStatInfo(categoryId, statIndex)}
    return {
        StatType = data[1],
        DisplayName = data[2],
        Description = data[3],
        FlatDescription = data[4],
        PercentDescription = data[5]
    }
end

---@class GetAdvancedStatValuePack
---@field DisplayFormat AdvancedStatDisplayFormat
---@field FlatValue? number # esoui type: `integer:nilable`
---@field PercentValue? number # esoui type: `number:nilable`

---@param statType AdvancedStatDisplayType
---@return GetAdvancedStatValuePack # Packed output from *GetAdvancedStatValue*
function EsoAddonFramework_Framework_Eso_Pack.GetAdvancedStatValue(statType)
    local data = {GetAdvancedStatValue(statType)}
    return {
        DisplayFormat = data[1],
        FlatValue = data[2],
        PercentValue = data[3]
    }
end

---@class GetAgentChatRequestInfoPack
---@field IsChatRequested boolean # esoui type: `bool`
---@field MillisecondsSinceRequest number # esoui type: `integer`

---@return GetAgentChatRequestInfoPack # Packed output from *GetAgentChatRequestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAgentChatRequestInfo()
    local data = {GetAgentChatRequestInfo()}
    return {
        IsChatRequested = data[1],
        MillisecondsSinceRequest = data[2]
    }
end

---@class GetAlchemyItemTraitsPack
---@field Trait? string # esoui type: `string:nilable`
---@field Icon? string # esoui type: `textureName:nilable`
---@field MatchIcon? string # esoui type: `textureName:nilable`
---@field CancellingTrait? string # esoui type: `string:nilable`
---@field ConflictIcon? string # esoui type: `textureName:nilable`

---NOTE! Uses variable returns...
---@param reagentBagId Bag
---@param reagentSlotIndex number # esoui type: `integer`
---@return GetAlchemyItemTraitsPack # Packed output from *GetAlchemyItemTraits*
function EsoAddonFramework_Framework_Eso_Pack.GetAlchemyItemTraits(reagentBagId, reagentSlotIndex)
    local data = {GetAlchemyItemTraits(reagentBagId, reagentSlotIndex)}
    return {
        Trait = data[1],
        Icon = data[2],
        MatchIcon = data[3],
        CancellingTrait = data[4],
        ConflictIcon = data[5]
    }
end

---@class GetAlchemyResultingItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality
---@field ProspectiveAlchemyResult ProspectiveAlchemyResult

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@return GetAlchemyResultingItemInfoPack # Packed output from *GetAlchemyResultingItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAlchemyResultingItemInfo(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex)
    local data = {GetAlchemyResultingItemInfo(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        DisplayQuality = data[8],
        ProspectiveAlchemyResult = data[9]
    }
end

---@class GetAlchemyResultingItemLinkPack
---@field Link string
---@field ProspectiveAlchemyResult ProspectiveAlchemyResult

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@param linkStyle LinkStyle
---@return GetAlchemyResultingItemLinkPack # Packed output from *GetAlchemyResultingItemLink*
function EsoAddonFramework_Framework_Eso_Pack.GetAlchemyResultingItemLink(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex, linkStyle)
    local data = {GetAlchemyResultingItemLink(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex, linkStyle)}
    return {
        Link = data[1],
        ProspectiveAlchemyResult = data[2]
    }
end

---@class GetAllianceLockPendingNotificationInfoPack
---@field CampaignId? number # esoui type: `integer:nilable`
---@field Alliance Alliance
---@field TimeLeftS? number # esoui type: `integer:nilable`

---@return GetAllianceLockPendingNotificationInfoPack # Packed output from *GetAllianceLockPendingNotificationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAllianceLockPendingNotificationInfo()
    local data = {GetAllianceLockPendingNotificationInfo()}
    return {
        CampaignId = data[1],
        Alliance = data[2],
        TimeLeftS = data[3]
    }
end

---@class GetAllUnitAttributeVisualizerEffectInfoPack
---@field UnitAttributeVisual UnitAttributeVisual
---@field StatType DerivedStats
---@field AttributeType Attributes
---@field PowerType CombatMechanicType
---@field Value number
---@field MaxValue number

---NOTE! Uses variable returns...
---@param unitTag string
---@return GetAllUnitAttributeVisualizerEffectInfoPack # Packed output from *GetAllUnitAttributeVisualizerEffectInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAllUnitAttributeVisualizerEffectInfo(unitTag)
    local data = {GetAllUnitAttributeVisualizerEffectInfo(unitTag)}
    return {
        UnitAttributeVisual = data[1],
        StatType = data[2],
        AttributeType = data[3],
        PowerType = data[4],
        Value = data[5],
        MaxValue = data[6]
    }
end

---@class GetAntiquityCategoryKeyboardIconsPack
---@field UnpressedButtonIcon string # esoui type: `textureName`
---@field PressedButtonIcon string # esoui type: `textureName`
---@field MouseoverButtonIcon string # esoui type: `textureName`

---@param antiquityCategoryId number # esoui type: `integer`
---@return GetAntiquityCategoryKeyboardIconsPack # Packed output from *GetAntiquityCategoryKeyboardIcons*
function EsoAddonFramework_Framework_Eso_Pack.GetAntiquityCategoryKeyboardIcons(antiquityCategoryId)
    local data = {GetAntiquityCategoryKeyboardIcons(antiquityCategoryId)}
    return {
        UnpressedButtonIcon = data[1],
        PressedButtonIcon = data[2],
        MouseoverButtonIcon = data[3]
    }
end

---@class GetAntiquityLoreEntryPack
---@field DisplayName string
---@field Description string

---@param antiquityId number # esoui type: `integer`
---@param loreEntryIndex number # esoui type: `luaindex`
---@return GetAntiquityLoreEntryPack # Packed output from *GetAntiquityLoreEntry*
function EsoAddonFramework_Framework_Eso_Pack.GetAntiquityLoreEntry(antiquityId, loreEntryIndex)
    local data = {GetAntiquityLoreEntry(antiquityId, loreEntryIndex)}
    return {
        DisplayName = data[1],
        Description = data[2]
    }
end

---@class GetArtificialEffectInfoPack
---@field DisplayName string
---@field Icon string # esoui type: `textureName`
---@field EffectType BuffEffectType
---@field SortOrder number # esoui type: `integer`
---@field TimeStartedS number
---@field TimeEndingS number

---@param artificialEffectId number # esoui type: `integer`
---@return GetArtificialEffectInfoPack # Packed output from *GetArtificialEffectInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetArtificialEffectInfo(artificialEffectId)
    local data = {GetArtificialEffectInfo(artificialEffectId)}
    return {
        DisplayName = data[1],
        Icon = data[2],
        EffectType = data[3],
        SortOrder = data[4],
        TimeStartedS = data[5],
        TimeEndingS = data[6]
    }
end

---@class GetAssignableAbilityBarStartAndEndSlotsPack
---@field StartActionSlotIndex number # esoui type: `luaindex`
---@field EndActionSlotIndex number # esoui type: `luaindex`

---@return GetAssignableAbilityBarStartAndEndSlotsPack # Packed output from *GetAssignableAbilityBarStartAndEndSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetAssignableAbilityBarStartAndEndSlots()
    local data = {GetAssignableAbilityBarStartAndEndSlots()}
    return {
        StartActionSlotIndex = data[1],
        EndActionSlotIndex = data[2]
    }
end

---@class GetAssignableChampionBarStartAndEndSlotsPack
---@field StartActionSlotIndex number # esoui type: `luaindex`
---@field EndActionSlotIndex number # esoui type: `luaindex`

---@return GetAssignableChampionBarStartAndEndSlotsPack # Packed output from *GetAssignableChampionBarStartAndEndSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetAssignableChampionBarStartAndEndSlots()
    local data = {GetAssignableChampionBarStartAndEndSlots()}
    return {
        StartActionSlotIndex = data[1],
        EndActionSlotIndex = data[2]
    }
end

---@class GetAttachedItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field CreatorName string
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType number # esoui type: `integer`
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param mailId number # esoui type: `id64`
---@param attachIndex number # esoui type: `luaindex`
---@return GetAttachedItemInfoPack # Packed output from *GetAttachedItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetAttachedItemInfo(mailId, attachIndex)
    local data = {GetAttachedItemInfo(mailId, attachIndex)}
    return {
        Icon = data[1],
        Stack = data[2],
        CreatorName = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        DisplayQuality = data[8]
    }
end

---@class GetAutoMapNavigationNormalizedPositionForCurrentMapPack
---@field NormalizedX number
---@field NormalizedY number

---@return GetAutoMapNavigationNormalizedPositionForCurrentMapPack # Packed output from *GetAutoMapNavigationNormalizedPositionForCurrentMap*
function EsoAddonFramework_Framework_Eso_Pack.GetAutoMapNavigationNormalizedPositionForCurrentMap()
    local data = {GetAutoMapNavigationNormalizedPositionForCurrentMap()}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetAvAArtifactScorePack
---@field AllOwnHeld boolean # esoui type: `bool`
---@field EnemyHeld number # esoui type: `integer`

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@param artifactType ObjectiveType
---@return GetAvAArtifactScorePack # Packed output from *GetAvAArtifactScore*
function EsoAddonFramework_Framework_Eso_Pack.GetAvAArtifactScore(campaignId, alliance, artifactType)
    local data = {GetAvAArtifactScore(campaignId, alliance, artifactType)}
    return {
        AllOwnHeld = data[1],
        EnemyHeld = data[2]
    }
end

---@class GetAvAKeepScorePack
---@field IsAllianceHoldingAllNativeKeeps boolean # esoui type: `bool`
---@field NumEnemyKeepsThisAllianceHolds number # esoui type: `integer`
---@field NumNativeKeepsThisAllianceHolds number # esoui type: `integer`
---@field TotalNativeKeepsInThisAlliancesArea number # esoui type: `integer`
---@field NumEdgeKeepBonusesActive number # esoui type: `integer`

---@param campaignId number # esoui type: `integer`
---@param alliance number # esoui type: `integer`
---@return GetAvAKeepScorePack # Packed output from *GetAvAKeepScore*
function EsoAddonFramework_Framework_Eso_Pack.GetAvAKeepScore(campaignId, alliance)
    local data = {GetAvAKeepScore(campaignId, alliance)}
    return {
        IsAllianceHoldingAllNativeKeeps = data[1],
        NumEnemyKeepsThisAllianceHolds = data[2],
        NumNativeKeepsThisAllianceHolds = data[3],
        TotalNativeKeepsInThisAlliancesArea = data[4],
        NumEdgeKeepBonusesActive = data[5]
    }
end

---@class GetAvARankProgressPack
---@field SubRankStartsAt number # esoui type: `integer`
---@field NextSubRankAt number # esoui type: `integer`
---@field RankStartsAt number # esoui type: `integer`
---@field NextRankAt number # esoui type: `integer`

---@param currentRankPoints number # esoui type: `integer`
---@return GetAvARankProgressPack # Packed output from *GetAvARankProgress*
function EsoAddonFramework_Framework_Eso_Pack.GetAvARankProgress(currentRankPoints)
    local data = {GetAvARankProgress(currentRankPoints)}
    return {
        SubRankStartsAt = data[1],
        NextSubRankAt = data[2],
        RankStartsAt = data[3],
        NextRankAt = data[4]
    }
end

---@class GetBackgroundListFilterResultPack
---@field Value1 number # esoui type: `integer`
---@field Value2 number # esoui type: `integer`

---@param taskId number # esoui type: `integer`
---@param resultIndex number # esoui type: `luaindex`
---@return GetBackgroundListFilterResultPack # Packed output from *GetBackgroundListFilterResult*
function EsoAddonFramework_Framework_Eso_Pack.GetBackgroundListFilterResult(taskId, resultIndex)
    local data = {GetBackgroundListFilterResult(taskId, resultIndex)}
    return {
        Value1 = data[1],
        Value2 = data[2]
    }
end

---@class GetBattlegroundLeaderboardEntryInfoPack
---@field Rank number # esoui type: `integer`
---@field DisplayName string
---@field CharacterName string
---@field Score number # esoui type: `integer`

---@param battlegroundLeaderboardType BattlegroundLeaderboardType
---@param entryIndex number # esoui type: `luaindex`
---@return GetBattlegroundLeaderboardEntryInfoPack # Packed output from *GetBattlegroundLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetBattlegroundLeaderboardEntryInfo(battlegroundLeaderboardType, entryIndex)
    local data = {GetBattlegroundLeaderboardEntryInfo(battlegroundLeaderboardType, entryIndex)}
    return {
        Rank = data[1],
        DisplayName = data[2],
        CharacterName = data[3],
        Score = data[4]
    }
end

---@class GetBattlegroundLeaderboardLocalPlayerInfoPack
---@field CurrentRank number # esoui type: `integer`
---@field CurrentScore number # esoui type: `integer`

---@param lastBattlegroundLeaderboardType BattlegroundLeaderboardType
---@return GetBattlegroundLeaderboardLocalPlayerInfoPack # Packed output from *GetBattlegroundLeaderboardLocalPlayerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetBattlegroundLeaderboardLocalPlayerInfo(lastBattlegroundLeaderboardType)
    local data = {GetBattlegroundLeaderboardLocalPlayerInfo(lastBattlegroundLeaderboardType)}
    return {
        CurrentRank = data[1],
        CurrentScore = data[2]
    }
end

---@class GetBattlegroundLeaderboardsSchedulePack
---@field SecondsUntilEnd number # esoui type: `integer`
---@field SecondsUntilNextStart number # esoui type: `integer`

---@return GetBattlegroundLeaderboardsSchedulePack # Packed output from *GetBattlegroundLeaderboardsSchedule*
function EsoAddonFramework_Framework_Eso_Pack.GetBattlegroundLeaderboardsSchedule()
    local data = {GetBattlegroundLeaderboardsSchedule()}
    return {
        SecondsUntilEnd = data[1],
        SecondsUntilNextStart = data[2]
    }
end

---@class GetBattleStandardPinInfoPack
---@field PinType number # esoui type: `integer`
---@field NormalizedX number
---@field NormalizedY number

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return GetBattleStandardPinInfoPack # Packed output from *GetBattleStandardPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetBattleStandardPinInfo(battlegroundContext, index)
    local data = {GetBattleStandardPinInfo(battlegroundContext, index)}
    return {
        PinType = data[1],
        NormalizedX = data[2],
        NormalizedY = data[3]
    }
end

---@class GetBindingIndicesFromKeysPack
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field ActionIndex? number # esoui type: `luaindex:nilable`
---@field BindingIndex? number # esoui type: `luaindex:nilable`

---@param layerIndex number # esoui type: `luaindex`
---@param keyCode KeyCode
---@param mod1 KeyCode
---@param mod2 KeyCode
---@param mod3 KeyCode
---@param mod4 KeyCode
---@return GetBindingIndicesFromKeysPack # Packed output from *GetBindingIndicesFromKeys*
function EsoAddonFramework_Framework_Eso_Pack.GetBindingIndicesFromKeys(layerIndex, keyCode, mod1, mod2, mod3, mod4)
    local data = {GetBindingIndicesFromKeys(layerIndex, keyCode, mod1, mod2, mod3, mod4)}
    return {
        CategoryIndex = data[1],
        ActionIndex = data[2],
        BindingIndex = data[3]
    }
end

---@class GetBountyDecayInfoPack
---@field AmountPerInterval number # esoui type: `integer`
---@field IntervalDurationS number # esoui type: `integer`
---@field ProgressThroughIntervalS number # esoui type: `integer`

---@return GetBountyDecayInfoPack # Packed output from *GetBountyDecayInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetBountyDecayInfo()
    local data = {GetBountyDecayInfo()}
    return {
        AmountPerInterval = data[1],
        IntervalDurationS = data[2],
        ProgressThroughIntervalS = data[3]
    }
end

---@class GetBuybackItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field Name string
---@field Stack number # esoui type: `integer`
---@field Price number # esoui type: `integer`
---@field FunctionalQuality ItemQuality
---@field MeetsRequirementsToEquip boolean # esoui type: `bool`
---@field DisplayQuality ItemDisplayQuality

---@param entryIndex number # esoui type: `luaindex`
---@return GetBuybackItemInfoPack # Packed output from *GetBuybackItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetBuybackItemInfo(entryIndex)
    local data = {GetBuybackItemInfo(entryIndex)}
    return {
        Icon = data[1],
        Name = data[2],
        Stack = data[3],
        Price = data[4],
        FunctionalQuality = data[5],
        MeetsRequirementsToEquip = data[6],
        DisplayQuality = data[7]
    }
end

---@class GetCadwellZoneInfoPack
---@field ZoneName string
---@field ZoneDescription string
---@field ZoneOrder number # esoui type: `luaindex`

---@param cadwellProgressionLevel CadwellProgressionLevel
---@param zoneIndex number # esoui type: `luaindex`
---@return GetCadwellZoneInfoPack # Packed output from *GetCadwellZoneInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCadwellZoneInfo(cadwellProgressionLevel, zoneIndex)
    local data = {GetCadwellZoneInfo(cadwellProgressionLevel, zoneIndex)}
    return {
        ZoneName = data[1],
        ZoneDescription = data[2],
        ZoneOrder = data[3]
    }
end

---@class GetCadwellZonePOIInfoPack
---@field PoiName string
---@field PoiOpeningText string
---@field PoiClosingText string
---@field PoiOrder number # esoui type: `luaindex`
---@field Discovered boolean # esoui type: `bool`
---@field Completed boolean # esoui type: `bool`

---@param cadwellProgressionLevel CadwellProgressionLevel
---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return GetCadwellZonePOIInfoPack # Packed output from *GetCadwellZonePOIInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCadwellZonePOIInfo(cadwellProgressionLevel, zoneIndex, poiIndex)
    local data = {GetCadwellZonePOIInfo(cadwellProgressionLevel, zoneIndex, poiIndex)}
    return {
        PoiName = data[1],
        PoiOpeningText = data[2],
        PoiClosingText = data[3],
        PoiOrder = data[4],
        Discovered = data[5],
        Completed = data[6]
    }
end

---@class GetCampaignAbdicationStatusPack
---@field AbdicatedAlliance Alliance
---@field AbdicatedCharacterName string
---@field AbdicatedDisplayName string

---@param campaignId number # esoui type: `integer`
---@return GetCampaignAbdicationStatusPack # Packed output from *GetCampaignAbdicationStatus*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignAbdicationStatus(campaignId)
    local data = {GetCampaignAbdicationStatus(campaignId)}
    return {
        AbdicatedAlliance = data[1],
        AbdicatedCharacterName = data[2],
        AbdicatedDisplayName = data[3]
    }
end

---@class GetCampaignAllianceLeaderboardEntryInfoPack
---@field IsPlayer boolean # esoui type: `bool`
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field AlliancePoints number # esoui type: `integer`
---@field ClassId number # esoui type: `integer`
---@field DisplayName string
---@field AchievedEmperorAlliance Alliance

---@param campaignId number # esoui type: `integer`
---@param alliance Alliance
---@param entryIndex number # esoui type: `luaindex`
---@return GetCampaignAllianceLeaderboardEntryInfoPack # Packed output from *GetCampaignAllianceLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignAllianceLeaderboardEntryInfo(campaignId, alliance, entryIndex)
    local data = {GetCampaignAllianceLeaderboardEntryInfo(campaignId, alliance, entryIndex)}
    return {
        IsPlayer = data[1],
        Ranking = data[2],
        CharName = data[3],
        AlliancePoints = data[4],
        ClassId = data[5],
        DisplayName = data[6],
        AchievedEmperorAlliance = data[7]
    }
end

---@class GetCampaignEmperorInfoPack
---@field EmperorAlliance Alliance
---@field EmperorCharacterName string
---@field EmperorDisplayName string

---@param campaignId number # esoui type: `integer`
---@return GetCampaignEmperorInfoPack # Packed output from *GetCampaignEmperorInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignEmperorInfo(campaignId)
    local data = {GetCampaignEmperorInfo(campaignId)}
    return {
        EmperorAlliance = data[1],
        EmperorCharacterName = data[2],
        EmperorDisplayName = data[3]
    }
end

---@class GetCampaignHistoryWindowPack
---@field WindowStartSecsAgo number # esoui type: `integer`
---@field WindowEndSecsAgo number # esoui type: `integer`

---@param battlegroundContext BattlegroundQueryContextType
---@return GetCampaignHistoryWindowPack # Packed output from *GetCampaignHistoryWindow*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignHistoryWindow(battlegroundContext)
    local data = {GetCampaignHistoryWindow(battlegroundContext)}
    return {
        WindowStartSecsAgo = data[1],
        WindowEndSecsAgo = data[2]
    }
end

---@class GetCampaignHoldingScoreValuesPack
---@field KeepValue number # esoui type: `integer`
---@field ResourceValue number # esoui type: `integer`
---@field OutpostValue number # esoui type: `integer`
---@field DefensiveArtifactValue number # esoui type: `integer`
---@field OffensiveArtifactValue number # esoui type: `integer`

---@param campaignId number # esoui type: `integer`
---@return GetCampaignHoldingScoreValuesPack # Packed output from *GetCampaignHoldingScoreValues*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignHoldingScoreValues(campaignId)
    local data = {GetCampaignHoldingScoreValues(campaignId)}
    return {
        KeepValue = data[1],
        ResourceValue = data[2],
        OutpostValue = data[3],
        DefensiveArtifactValue = data[4],
        OffensiveArtifactValue = data[5]
    }
end

---@class GetCampaignLeaderboardEntryInfoPack
---@field IsPlayer boolean # esoui type: `bool`
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field AlliancePoints number # esoui type: `integer`
---@field ClassId number # esoui type: `integer`
---@field Alliance Alliance
---@field DisplayName string

---@param campaignId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return GetCampaignLeaderboardEntryInfoPack # Packed output from *GetCampaignLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignLeaderboardEntryInfo(campaignId, entryIndex)
    local data = {GetCampaignLeaderboardEntryInfo(campaignId, entryIndex)}
    return {
        IsPlayer = data[1],
        Ranking = data[2],
        CharName = data[3],
        AlliancePoints = data[4],
        ClassId = data[5],
        Alliance = data[6],
        DisplayName = data[7]
    }
end

---@class GetCampaignQueueEntryPack
---@field CampaignId number # esoui type: `integer`
---@field QueueAsGroup boolean # esoui type: `bool`

---@param entryIndex number # esoui type: `luaindex`
---@return GetCampaignQueueEntryPack # Packed output from *GetCampaignQueueEntry*
function EsoAddonFramework_Framework_Eso_Pack.GetCampaignQueueEntry(entryIndex)
    local data = {GetCampaignQueueEntry(entryIndex)}
    return {
        CampaignId = data[1],
        QueueAsGroup = data[2]
    }
end

---@class GetCaptureAreaObjectiveLastInfluenceStatePack
---@field Alliance Alliance
---@field WereInfluenceSourcesInRangeOfCaptureArea boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetCaptureAreaObjectiveLastInfluenceStatePack # Packed output from *GetCaptureAreaObjectiveLastInfluenceState*
function EsoAddonFramework_Framework_Eso_Pack.GetCaptureAreaObjectiveLastInfluenceState(keepId, objectiveId, battlegroundContext)
    local data = {GetCaptureAreaObjectiveLastInfluenceState(keepId, objectiveId, battlegroundContext)}
    return {
        Alliance = data[1],
        WereInfluenceSourcesInRangeOfCaptureArea = data[2]
    }
end

---@class GetCarryableObjectiveHoldingAllianceInfoPack
---@field HoldingAlliance Alliance
---@field LastHoldingAlliance Alliance

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetCarryableObjectiveHoldingAllianceInfoPack # Packed output from *GetCarryableObjectiveHoldingAllianceInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCarryableObjectiveHoldingAllianceInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetCarryableObjectiveHoldingAllianceInfo(keepId, objectiveId, battlegroundContext)}
    return {
        HoldingAlliance = data[1],
        LastHoldingAlliance = data[2]
    }
end

---@class GetCarryableObjectiveHoldingCharacterInfoPack
---@field RawCharacterName string
---@field DisplayName string
---@field ClassId number # esoui type: `integer`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetCarryableObjectiveHoldingCharacterInfoPack # Packed output from *GetCarryableObjectiveHoldingCharacterInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCarryableObjectiveHoldingCharacterInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetCarryableObjectiveHoldingCharacterInfo(keepId, objectiveId, battlegroundContext)}
    return {
        RawCharacterName = data[1],
        DisplayName = data[2],
        ClassId = data[3]
    }
end

---@class GetCarryableObjectiveLastHoldingCharacterInfoPack
---@field RawCharacterName string
---@field DisplayName string
---@field ClassId number # esoui type: `integer`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetCarryableObjectiveLastHoldingCharacterInfoPack # Packed output from *GetCarryableObjectiveLastHoldingCharacterInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCarryableObjectiveLastHoldingCharacterInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetCarryableObjectiveLastHoldingCharacterInfo(keepId, objectiveId, battlegroundContext)}
    return {
        RawCharacterName = data[1],
        DisplayName = data[2],
        ClassId = data[3]
    }
end

---@class GetCategoryIndicesFromMarketProductPresentationPack
---@field TopLevelIndex? number # esoui type: `luaindex:nilable`
---@field CategoryIndex? number # esoui type: `luaindex:nilable`

---@param marketProductId number # esoui type: `integer`
---@param presentationIndex? number # esoui type: `luaindex:nilable`
---@return GetCategoryIndicesFromMarketProductPresentationPack # Packed output from *GetCategoryIndicesFromMarketProductPresentation*
function EsoAddonFramework_Framework_Eso_Pack.GetCategoryIndicesFromMarketProductPresentation(marketProductId, presentationIndex)
    local data = {GetCategoryIndicesFromMarketProductPresentation(marketProductId, presentationIndex)}
    return {
        TopLevelIndex = data[1],
        CategoryIndex = data[2]
    }
end

---@class GetCategoryInfoFromAchievementIdPack
---@field TopLevelIndex? number # esoui type: `luaindex:nilable`
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field AchievementIndex? number # esoui type: `luaindex:nilable`

---@param achievementId number # esoui type: `integer`
---@return GetCategoryInfoFromAchievementIdPack # Packed output from *GetCategoryInfoFromAchievementId*
function EsoAddonFramework_Framework_Eso_Pack.GetCategoryInfoFromAchievementId(achievementId)
    local data = {GetCategoryInfoFromAchievementId(achievementId)}
    return {
        TopLevelIndex = data[1],
        CategoryIndex = data[2],
        AchievementIndex = data[3]
    }
end

---@class GetCategoryInfoFromCollectibleCategoryIdPack
---@field TopLevelIndex? number # esoui type: `luaindex:nilable`
---@field CategoryIndex? number # esoui type: `luaindex:nilable`

---@param collectibleCategoryId number # esoui type: `integer`
---@return GetCategoryInfoFromCollectibleCategoryIdPack # Packed output from *GetCategoryInfoFromCollectibleCategoryId*
function EsoAddonFramework_Framework_Eso_Pack.GetCategoryInfoFromCollectibleCategoryId(collectibleCategoryId)
    local data = {GetCategoryInfoFromCollectibleCategoryId(collectibleCategoryId)}
    return {
        TopLevelIndex = data[1],
        CategoryIndex = data[2]
    }
end

---@class GetCategoryInfoFromCollectibleIdPack
---@field TopLevelIndex? number # esoui type: `luaindex:nilable`
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field CollectibleIndex? number # esoui type: `luaindex:nilable`

---@param collectibleId number # esoui type: `integer`
---@return GetCategoryInfoFromCollectibleIdPack # Packed output from *GetCategoryInfoFromCollectibleId*
function EsoAddonFramework_Framework_Eso_Pack.GetCategoryInfoFromCollectibleId(collectibleId)
    local data = {GetCategoryInfoFromCollectibleId(collectibleId)}
    return {
        TopLevelIndex = data[1],
        CategoryIndex = data[2],
        CollectibleIndex = data[3]
    }
end

---@class GetChallengeLeaderboardEntryInfoPack
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field Time number # esoui type: `integer`
---@field RetClassId number # esoui type: `integer`
---@field AllianceId number # esoui type: `integer`
---@field DisplayName string

---@param raidIndex number # esoui type: `luaindex`
---@param classId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return GetChallengeLeaderboardEntryInfoPack # Packed output from *GetChallengeLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChallengeLeaderboardEntryInfo(raidIndex, classId, entryIndex)
    local data = {GetChallengeLeaderboardEntryInfo(raidIndex, classId, entryIndex)}
    return {
        Ranking = data[1],
        CharName = data[2],
        Time = data[3],
        RetClassId = data[4],
        AllianceId = data[5],
        DisplayName = data[6]
    }
end

---@class GetChallengeOfTheWeekLeaderboardEntryInfoPack
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field Time number # esoui type: `integer`
---@field RetClassId number # esoui type: `integer`
---@field AllianceId number # esoui type: `integer`
---@field DisplayName string

---@param classId number # esoui type: `integer`
---@param entryIndex number # esoui type: `luaindex`
---@return GetChallengeOfTheWeekLeaderboardEntryInfoPack # Packed output from *GetChallengeOfTheWeekLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChallengeOfTheWeekLeaderboardEntryInfo(classId, entryIndex)
    local data = {GetChallengeOfTheWeekLeaderboardEntryInfo(classId, entryIndex)}
    return {
        Ranking = data[1],
        CharName = data[2],
        Time = data[3],
        RetClassId = data[4],
        AllianceId = data[5],
        DisplayName = data[6]
    }
end

---@class GetChamberStatePack
---@field ChamberState number # esoui type: `integer`
---@field ChamberProgress number

---@param chamberIndex number # esoui type: `luaindex`
---@return GetChamberStatePack # Packed output from *GetChamberState*
function EsoAddonFramework_Framework_Eso_Pack.GetChamberState(chamberIndex)
    local data = {GetChamberState(chamberIndex)}
    return {
        ChamberState = data[1],
        ChamberProgress = data[2]
    }
end

---@class GetChampionClusterRootOffsetPack
---@field NormalizedOffsetX number
---@field NormalizedOffsetY number

---@param championSkillId number # esoui type: `integer`
---@return GetChampionClusterRootOffsetPack # Packed output from *GetChampionClusterRootOffset*
function EsoAddonFramework_Framework_Eso_Pack.GetChampionClusterRootOffset(championSkillId)
    local data = {GetChampionClusterRootOffset(championSkillId)}
    return {
        NormalizedOffsetX = data[1],
        NormalizedOffsetY = data[2]
    }
end

---@class GetChampionSkillPositionPack
---@field NormalizedX number
---@field NormalizedY number

---@param championSkillId number # esoui type: `integer`
---@return GetChampionSkillPositionPack # Packed output from *GetChampionSkillPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetChampionSkillPosition(championSkillId)
    local data = {GetChampionSkillPosition(championSkillId)}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetChapterBasicRewardInfoPack
---@field MarketProductId number # esoui type: `integer`
---@field IsStandardReward boolean # esoui type: `bool`
---@field IsCollectorsReward boolean # esoui type: `bool`

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetChapterBasicRewardInfoPack # Packed output from *GetChapterBasicRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChapterBasicRewardInfo(chapterUpgradeId, index)
    local data = {GetChapterBasicRewardInfo(chapterUpgradeId, index)}
    return {
        MarketProductId = data[1],
        IsStandardReward = data[2],
        IsCollectorsReward = data[3]
    }
end

---@class GetChapterPreOrdereRewardInfoPack
---@field MarketProductId number # esoui type: `integer`
---@field IsStandardReward boolean # esoui type: `bool`
---@field IsCollectorsReward boolean # esoui type: `bool`

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetChapterPreOrdereRewardInfoPack # Packed output from *GetChapterPreOrdereRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChapterPreOrdereRewardInfo(chapterUpgradeId, index)
    local data = {GetChapterPreOrdereRewardInfo(chapterUpgradeId, index)}
    return {
        MarketProductId = data[1],
        IsStandardReward = data[2],
        IsCollectorsReward = data[3]
    }
end

---@class GetChapterPrePurchaseRewardInfoPack
---@field MarketProductId number # esoui type: `integer`
---@field IsStandardReward boolean # esoui type: `bool`
---@field IsCollectorsReward boolean # esoui type: `bool`

---@param chapterUpgradeId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetChapterPrePurchaseRewardInfoPack # Packed output from *GetChapterPrePurchaseRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChapterPrePurchaseRewardInfo(chapterUpgradeId, index)
    local data = {GetChapterPrePurchaseRewardInfo(chapterUpgradeId, index)}
    return {
        MarketProductId = data[1],
        IsStandardReward = data[2],
        IsCollectorsReward = data[3]
    }
end

---@class GetCharacterInfoPack
---@field Name string
---@field Gender Gender
---@field Level number # esoui type: `integer`
---@field ClassId number # esoui type: `integer`
---@field RaceId number # esoui type: `integer`
---@field Alliance Alliance
---@field Id string
---@field LocationId number # esoui type: `integer`

---@param index number # esoui type: `luaindex`
---@return GetCharacterInfoPack # Packed output from *GetCharacterInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCharacterInfo(index)
    local data = {GetCharacterInfo(index)}
    return {
        Name = data[1],
        Gender = data[2],
        Level = data[3],
        ClassId = data[4],
        RaceId = data[5],
        Alliance = data[6],
        Id = data[7],
        LocationId = data[8]
    }
end

---@class GetChargeInfoForItemPack
---@field Charges number # esoui type: `integer`
---@field MaxCharges number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetChargeInfoForItemPack # Packed output from *GetChargeInfoForItem*
function EsoAddonFramework_Framework_Eso_Pack.GetChargeInfoForItem(bagId, slotIndex)
    local data = {GetChargeInfoForItem(bagId, slotIndex)}
    return {
        Charges = data[1],
        MaxCharges = data[2]
    }
end

---@class GetChatCategoryColorPack
---@field Red number
---@field Green number
---@field Blue number

---@param category ChatChannelCategories
---@return GetChatCategoryColorPack # Packed output from *GetChatCategoryColor*
function EsoAddonFramework_Framework_Eso_Pack.GetChatCategoryColor(category)
    local data = {GetChatCategoryColor(category)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3]
    }
end

---@class GetChatContainerColorsPack
---@field BgRed number
---@field BgGreen number
---@field BgBlue number
---@field BgMinAlpha number
---@field BgMaxAlpha number

---@param chatContainerIndex number # esoui type: `luaindex`
---@return GetChatContainerColorsPack # Packed output from *GetChatContainerColors*
function EsoAddonFramework_Framework_Eso_Pack.GetChatContainerColors(chatContainerIndex)
    local data = {GetChatContainerColors(chatContainerIndex)}
    return {
        BgRed = data[1],
        BgGreen = data[2],
        BgBlue = data[3],
        BgMinAlpha = data[4],
        BgMaxAlpha = data[5]
    }
end

---@class GetChatContainerTabInfoPack
---@field Name string
---@field IsLocked boolean # esoui type: `bool`
---@field IsInteractable boolean # esoui type: `bool`
---@field IsCombatLog boolean # esoui type: `bool`
---@field AreTimestampsEnabled boolean # esoui type: `bool`

---@param chatContainerIndex number # esoui type: `luaindex`
---@param tabIndex number # esoui type: `luaindex`
---@return GetChatContainerTabInfoPack # Packed output from *GetChatContainerTabInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetChatContainerTabInfo(chatContainerIndex, tabIndex)
    local data = {GetChatContainerTabInfo(chatContainerIndex, tabIndex)}
    return {
        Name = data[1],
        IsLocked = data[2],
        IsInteractable = data[3],
        IsCombatLog = data[4],
        AreTimestampsEnabled = data[5]
    }
end

---@class GetChatterDataPack
---@field Text string
---@field NumOptions number # esoui type: `integer`
---@field AtGreeting boolean # esoui type: `bool`

---@return GetChatterDataPack # Packed output from *GetChatterData*
function EsoAddonFramework_Framework_Eso_Pack.GetChatterData()
    local data = {GetChatterData()}
    return {
        Text = data[1],
        NumOptions = data[2],
        AtGreeting = data[3]
    }
end

---@class GetChatterFarewellPack
---@field BackToTOCString string
---@field FarewellString string
---@field IsImportant boolean # esoui type: `bool`

---@return GetChatterFarewellPack # Packed output from *GetChatterFarewell*
function EsoAddonFramework_Framework_Eso_Pack.GetChatterFarewell()
    local data = {GetChatterFarewell()}
    return {
        BackToTOCString = data[1],
        FarewellString = data[2],
        IsImportant = data[3]
    }
end

---@class GetChatterOptionPack
---@field OptionString string
---@field OptionType number # esoui type: `integer`
---@field OptionalArgument number # esoui type: `integer`
---@field IsImportant boolean # esoui type: `bool`
---@field ChosenBefore boolean # esoui type: `bool`

---@param optionIndex number # esoui type: `luaindex`
---@return GetChatterOptionPack # Packed output from *GetChatterOption*
function EsoAddonFramework_Framework_Eso_Pack.GetChatterOption(optionIndex)
    local data = {GetChatterOption(optionIndex)}
    return {
        OptionString = data[1],
        OptionType = data[2],
        OptionalArgument = data[3],
        IsImportant = data[4],
        ChosenBefore = data[5]
    }
end

---@class GetChromaKeyboardCellByChromaKeyboardKeyPack
---@field RowIndex number # esoui type: `luaindex`
---@field ColumnIndex number # esoui type: `luaindex`

---@param chromaKeyboardKey ChromaKeyboardKey
---@return GetChromaKeyboardCellByChromaKeyboardKeyPack # Packed output from *GetChromaKeyboardCellByChromaKeyboardKey*
function EsoAddonFramework_Framework_Eso_Pack.GetChromaKeyboardCellByChromaKeyboardKey(chromaKeyboardKey)
    local data = {GetChromaKeyboardCellByChromaKeyboardKey(chromaKeyboardKey)}
    return {
        RowIndex = data[1],
        ColumnIndex = data[2]
    }
end

---@class GetChromaMouseCellByLEDPack
---@field RowIndex number # esoui type: `luaindex`
---@field ColumnIndex number # esoui type: `luaindex`

---@param ledId ChromaMouseLED2
---@return GetChromaMouseCellByLEDPack # Packed output from *GetChromaMouseCellByLED*
function EsoAddonFramework_Framework_Eso_Pack.GetChromaMouseCellByLED(ledId)
    local data = {GetChromaMouseCellByLED(ledId)}
    return {
        RowIndex = data[1],
        ColumnIndex = data[2]
    }
end

---@class GetChromaMousepadCellByLEDPack
---@field RowIndex number # esoui type: `luaindex`
---@field ColumnIndex number # esoui type: `luaindex`

---@param ledId ChromaMousepadLED
---@return GetChromaMousepadCellByLEDPack # Packed output from *GetChromaMousepadCellByLED*
function EsoAddonFramework_Framework_Eso_Pack.GetChromaMousepadCellByLED(ledId)
    local data = {GetChromaMousepadCellByLED(ledId)}
    return {
        RowIndex = data[1],
        ColumnIndex = data[2]
    }
end

---@class GetClassInfoPack
---@field ClassId number # esoui type: `integer`
---@field Lore string
---@field NormalIconKeyboard string # esoui type: `textureName`
---@field PressedIconKeyboard string # esoui type: `textureName`
---@field MouseoverIconKeyboard string # esoui type: `textureName`
---@field IsSelectable boolean # esoui type: `bool`
---@field IngameIconKeyboard string # esoui type: `textureName`
---@field IngameIconGamepad string # esoui type: `textureName`
---@field NormalIconGamepad string # esoui type: `textureName`
---@field PressedIconGamepad string # esoui type: `textureName`

---@param index number # esoui type: `luaindex`
---@return GetClassInfoPack # Packed output from *GetClassInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetClassInfo(index)
    local data = {GetClassInfo(index)}
    return {
        ClassId = data[1],
        Lore = data[2],
        NormalIconKeyboard = data[3],
        PressedIconKeyboard = data[4],
        MouseoverIconKeyboard = data[5],
        IsSelectable = data[6],
        IngameIconKeyboard = data[7],
        IngameIconGamepad = data[8],
        NormalIconGamepad = data[9],
        PressedIconGamepad = data[10]
    }
end

---@class GetCollectibleCategoryInfoPack
---@field Name string
---@field NumSubCatgories number # esoui type: `integer`
---@field NumCollectibles number # esoui type: `integer`
---@field UnlockedCollectibles number # esoui type: `integer`
---@field TotalCollectibles number # esoui type: `integer`
---@field HidesLocked boolean # esoui type: `bool`

---@param topLevelIndex number # esoui type: `luaindex`
---@return GetCollectibleCategoryInfoPack # Packed output from *GetCollectibleCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleCategoryInfo(topLevelIndex)
    local data = {GetCollectibleCategoryInfo(topLevelIndex)}
    return {
        Name = data[1],
        NumSubCatgories = data[2],
        NumCollectibles = data[3],
        UnlockedCollectibles = data[4],
        TotalCollectibles = data[5],
        HidesLocked = data[6]
    }
end

---@class GetCollectibleCategoryKeyboardIconsPack
---@field NormalIcon string # esoui type: `textureName`
---@field PressedIcon string # esoui type: `textureName`
---@field MouseoverIcon string # esoui type: `textureName`
---@field DisabledIcon string # esoui type: `textureName`

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex? number # esoui type: `luaindex:nilable`
---@return GetCollectibleCategoryKeyboardIconsPack # Packed output from *GetCollectibleCategoryKeyboardIcons*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleCategoryKeyboardIcons(topLevelIndex, subCategoryIndex)
    local data = {GetCollectibleCategoryKeyboardIcons(topLevelIndex, subCategoryIndex)}
    return {
        NormalIcon = data[1],
        PressedIcon = data[2],
        MouseoverIcon = data[3],
        DisabledIcon = data[4]
    }
end

---@class GetCollectibleCooldownAndDurationPack
---@field CooldownRemaining number # esoui type: `integer`
---@field CooldownDuration number # esoui type: `integer`

---@param collectibleId number # esoui type: `integer`
---@return GetCollectibleCooldownAndDurationPack # Packed output from *GetCollectibleCooldownAndDuration*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleCooldownAndDuration(collectibleId)
    local data = {GetCollectibleCooldownAndDuration(collectibleId)}
    return {
        CooldownRemaining = data[1],
        CooldownDuration = data[2]
    }
end

---@class GetCollectibleHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param collectibleId number # esoui type: `integer`
---@return GetCollectibleHelpIndicesPack # Packed output from *GetCollectibleHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleHelpIndices(collectibleId)
    local data = {GetCollectibleHelpIndices(collectibleId)}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetCollectibleInfoPack
---@field Name string
---@field Description string
---@field Icon string # esoui type: `textureName`
---@field DeprecatedLockedIcon string # esoui type: `textureName`
---@field Unlocked boolean # esoui type: `bool`
---@field Purchasable boolean # esoui type: `bool`
---@field IsActive boolean # esoui type: `bool`
---@field CategoryType CollectibleCategoryType
---@field Hint string

---@param collectibleId number # esoui type: `integer`
---@return GetCollectibleInfoPack # Packed output from *GetCollectibleInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleInfo(collectibleId)
    local data = {GetCollectibleInfo(collectibleId)}
    return {
        Name = data[1],
        Description = data[2],
        Icon = data[3],
        DeprecatedLockedIcon = data[4],
        Unlocked = data[5],
        Purchasable = data[6],
        IsActive = data[7],
        CategoryType = data[8],
        Hint = data[9]
    }
end

---@class GetCollectibleNotificationInfoPack
---@field NotificationId number # esoui type: `integer`
---@field CollectibleId number # esoui type: `integer`

---@param notificationIndex number # esoui type: `luaindex`
---@return GetCollectibleNotificationInfoPack # Packed output from *GetCollectibleNotificationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleNotificationInfo(notificationIndex)
    local data = {GetCollectibleNotificationInfo(notificationIndex)}
    return {
        NotificationId = data[1],
        CollectibleId = data[2]
    }
end

---@class GetCollectibleQuestPreviewInfoPack
---@field QuestName string
---@field BackgroundText string

---@param collectibleId number # esoui type: `integer`
---@return GetCollectibleQuestPreviewInfoPack # Packed output from *GetCollectibleQuestPreviewInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleQuestPreviewInfo(collectibleId)
    local data = {GetCollectibleQuestPreviewInfo(collectibleId)}
    return {
        QuestName = data[1],
        BackgroundText = data[2]
    }
end

---@class GetCollectibleRestrictionsByTypePack
---@field HasRestrictions boolean # esoui type: `bool`
---@field PassesRestrictions boolean # esoui type: `bool`
---@field AllowedNamesString string

---@param collectibleId number # esoui type: `integer`
---@param restrictionType CollectibleRestrictionType
---@return GetCollectibleRestrictionsByTypePack # Packed output from *GetCollectibleRestrictionsByType*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleRestrictionsByType(collectibleId, restrictionType)
    local data = {GetCollectibleRestrictionsByType(collectibleId, restrictionType)}
    return {
        HasRestrictions = data[1],
        PassesRestrictions = data[2],
        AllowedNamesString = data[3]
    }
end

---@class GetCollectiblesSearchResultPack
---@field CategoryIndex number # esoui type: `luaindex`
---@field SubcategoryIndex? number # esoui type: `luaindex:nilable`
---@field CollectibleIndex number # esoui type: `luaindex`

---@param searchResultIndex number # esoui type: `luaindex`
---@return GetCollectiblesSearchResultPack # Packed output from *GetCollectiblesSearchResult*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectiblesSearchResult(searchResultIndex)
    local data = {GetCollectiblesSearchResult(searchResultIndex)}
    return {
        CategoryIndex = data[1],
        SubcategoryIndex = data[2],
        CollectibleIndex = data[3]
    }
end

---@class GetCollectibleSubCategoryInfoPack
---@field Name string
---@field NumCollectibles number # esoui type: `integer`
---@field UnlockedCollectibles number # esoui type: `integer`
---@field TotalCollectibles number # esoui type: `integer`

---@param topLevelIndex number # esoui type: `luaindex`
---@param subCategoryIndex number # esoui type: `luaindex`
---@return GetCollectibleSubCategoryInfoPack # Packed output from *GetCollectibleSubCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleSubCategoryInfo(topLevelIndex, subCategoryIndex)
    local data = {GetCollectibleSubCategoryInfo(topLevelIndex, subCategoryIndex)}
    return {
        Name = data[1],
        NumCollectibles = data[2],
        UnlockedCollectibles = data[3],
        TotalCollectibles = data[4]
    }
end

---@class GetCollectibleTagInfoPack
---@field TagDescription string
---@field TagCategory ItemTagCategory

---@param collectibleId number # esoui type: `integer`
---@param tagIndex number # esoui type: `luaindex`
---@return GetCollectibleTagInfoPack # Packed output from *GetCollectibleTagInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCollectibleTagInfo(collectibleId, tagIndex)
    local data = {GetCollectibleTagInfo(collectibleId, tagIndex)}
    return {
        TagDescription = data[1],
        TagCategory = data[2]
    }
end

---@class GetCompanionSkillLineDynamicInfoPack
---@field Rank number # esoui type: `luaindex`
---@field Active boolean # esoui type: `bool`
---@field Discovered boolean # esoui type: `bool`

---@param skillLineId number # esoui type: `integer`
---@return GetCompanionSkillLineDynamicInfoPack # Packed output from *GetCompanionSkillLineDynamicInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCompanionSkillLineDynamicInfo(skillLineId)
    local data = {GetCompanionSkillLineDynamicInfo(skillLineId)}
    return {
        Rank = data[1],
        Active = data[2],
        Discovered = data[3]
    }
end

---@class GetCompanionSkillLineXPInfoPack
---@field LastRankXP number # esoui type: `integer`
---@field NextRankXP number # esoui type: `integer`
---@field CurrentXP number # esoui type: `integer`

---@param skillLineId number # esoui type: `integer`
---@return GetCompanionSkillLineXPInfoPack # Packed output from *GetCompanionSkillLineXPInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCompanionSkillLineXPInfo(skillLineId)
    local data = {GetCompanionSkillLineXPInfo(skillLineId)}
    return {
        LastRankXP = data[1],
        NextRankXP = data[2],
        CurrentXP = data[3]
    }
end

---@class GetCompletedQuestInfoPack
---@field Name string
---@field QuestType QuestType

---@param questId number # esoui type: `integer`
---@return GetCompletedQuestInfoPack # Packed output from *GetCompletedQuestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCompletedQuestInfo(questId)
    local data = {GetCompletedQuestInfo(questId)}
    return {
        Name = data[1],
        QuestType = data[2]
    }
end

---@class GetCompletedQuestLocationInfoPack
---@field ZoneName string
---@field ObjectiveName string
---@field ZoneIndex number # esoui type: `luaindex`
---@field PoiIndex number # esoui type: `luaindex`

---@param questId number # esoui type: `integer`
---@return GetCompletedQuestLocationInfoPack # Packed output from *GetCompletedQuestLocationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCompletedQuestLocationInfo(questId)
    local data = {GetCompletedQuestLocationInfo(questId)}
    return {
        ZoneName = data[1],
        ObjectiveName = data[2],
        ZoneIndex = data[3],
        PoiIndex = data[4]
    }
end

---@class GetCrownCrateCardTexturesPack
---@field CardBackImage string # esoui type: `textureName`
---@field CardBackGlowImage string # esoui type: `textureName`
---@field CardFaceImage string # esoui type: `textureName`
---@field CardFaceGlowImage string # esoui type: `textureName`

---@param crateId number # esoui type: `integer`
---@return GetCrownCrateCardTexturesPack # Packed output from *GetCrownCrateCardTextures*
function EsoAddonFramework_Framework_Eso_Pack.GetCrownCrateCardTextures(crateId)
    local data = {GetCrownCrateCardTextures(crateId)}
    return {
        CardBackImage = data[1],
        CardBackGlowImage = data[2],
        CardFaceImage = data[3],
        CardFaceGlowImage = data[4]
    }
end

---@class GetCrownCrateNPCBoneWorldPositionPack
---@field Success boolean # esoui type: `bool`
---@field PositionX number
---@field PositionY number
---@field PositionZ number

---@param boneName string
---@return GetCrownCrateNPCBoneWorldPositionPack # Packed output from *GetCrownCrateNPCBoneWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetCrownCrateNPCBoneWorldPosition(boneName)
    local data = {GetCrownCrateNPCBoneWorldPosition(boneName)}
    return {
        Success = data[1],
        PositionX = data[2],
        PositionY = data[3],
        PositionZ = data[4]
    }
end

---@class GetCrownCrateRewardInfoPack
---@field RewardName string
---@field RewardTypeText string
---@field CardFaceImage string # esoui type: `textureName`
---@field CardFaceFrameAccentImage string # esoui type: `textureName`
---@field GemsExchanged number # esoui type: `integer`
---@field IsBonus boolean # esoui type: `bool`
---@field CrownCrateTierId number # esoui type: `integer`
---@field StackCount number # esoui type: `integer`

---@param rewardIndex number # esoui type: `luaindex`
---@return GetCrownCrateRewardInfoPack # Packed output from *GetCrownCrateRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetCrownCrateRewardInfo(rewardIndex)
    local data = {GetCrownCrateRewardInfo(rewardIndex)}
    return {
        RewardName = data[1],
        RewardTypeText = data[2],
        CardFaceImage = data[3],
        CardFaceFrameAccentImage = data[4],
        GemsExchanged = data[5],
        IsBonus = data[6],
        CrownCrateTierId = data[7],
        StackCount = data[8]
    }
end

---@class GetCrownCrateRewardProductReferenceDataPack
---@field RewardProductType MarketProductType
---@field ReferenceDataId number # esoui type: `integer`

---@param rewardIndex number # esoui type: `luaindex`
---@return GetCrownCrateRewardProductReferenceDataPack # Packed output from *GetCrownCrateRewardProductReferenceData*
function EsoAddonFramework_Framework_Eso_Pack.GetCrownCrateRewardProductReferenceData(rewardIndex)
    local data = {GetCrownCrateRewardProductReferenceData(rewardIndex)}
    return {
        RewardProductType = data[1],
        ReferenceDataId = data[2]
    }
end

---@class GetCrownCrateTierQualityColorPack
---@field R number
---@field G number
---@field B number

---@param crownCrateTierId number # esoui type: `integer`
---@return GetCrownCrateTierQualityColorPack # Packed output from *GetCrownCrateTierQualityColor*
function EsoAddonFramework_Framework_Eso_Pack.GetCrownCrateTierQualityColor(crownCrateTierId)
    local data = {GetCrownCrateTierQualityColor(crownCrateTierId)}
    return {
        R = data[1],
        G = data[2],
        B = data[3]
    }
end

---@class GetCurrencyGamepadColorPack
---@field Red number
---@field Green number
---@field Blue number

---@param currencyType CurrencyType
---@return GetCurrencyGamepadColorPack # Packed output from *GetCurrencyGamepadColor*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrencyGamepadColor(currencyType)
    local data = {GetCurrencyGamepadColor(currencyType)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3]
    }
end

---@class GetCurrencyGamepadIconPack
---@field IconPath string # esoui type: `textureName`
---@field PercentOfLineSize number # esoui type: `integer`

---@param currencyType CurrencyType
---@return GetCurrencyGamepadIconPack # Packed output from *GetCurrencyGamepadIcon*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrencyGamepadIcon(currencyType)
    local data = {GetCurrencyGamepadIcon(currencyType)}
    return {
        IconPath = data[1],
        PercentOfLineSize = data[2]
    }
end

---@class GetCurrencyKeyboardColorPack
---@field Red number
---@field Green number
---@field Blue number

---@param currencyType CurrencyType
---@return GetCurrencyKeyboardColorPack # Packed output from *GetCurrencyKeyboardColor*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrencyKeyboardColor(currencyType)
    local data = {GetCurrencyKeyboardColor(currencyType)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3]
    }
end

---@class GetCurrencyKeyboardIconPack
---@field IconPath string # esoui type: `textureName`
---@field PercentOfLineSize number # esoui type: `integer`

---@param currencyType CurrencyType
---@return GetCurrencyKeyboardIconPack # Packed output from *GetCurrencyKeyboardIcon*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrencyKeyboardIcon(currencyType)
    local data = {GetCurrencyKeyboardIcon(currencyType)}
    return {
        IconPath = data[1],
        PercentOfLineSize = data[2]
    }
end

---@class GetCurrentCollectibleDyesPack
---@field PrimaryDyeIndex number # esoui type: `integer`
---@field SecondaryDyeIndex number # esoui type: `integer`
---@field AccentDyeIndex number # esoui type: `integer`

---@param restyleMode RestyleMode
---@param collectibleId number # esoui type: `integer`
---@return GetCurrentCollectibleDyesPack # Packed output from *GetCurrentCollectibleDyes*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrentCollectibleDyes(restyleMode, collectibleId)
    local data = {GetCurrentCollectibleDyes(restyleMode, collectibleId)}
    return {
        PrimaryDyeIndex = data[1],
        SecondaryDyeIndex = data[2],
        AccentDyeIndex = data[3]
    }
end

---@class GetCurrentItemDyesPack
---@field PrimaryDyeIndex number # esoui type: `integer`
---@field SecondaryDyeIndex number # esoui type: `integer`
---@field AccentDyeIndex number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetCurrentItemDyesPack # Packed output from *GetCurrentItemDyes*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrentItemDyes(bagId, slotIndex)
    local data = {GetCurrentItemDyes(bagId, slotIndex)}
    return {
        PrimaryDyeIndex = data[1],
        SecondaryDyeIndex = data[2],
        AccentDyeIndex = data[3]
    }
end

---@class GetCurrentSubZonePOIIndicesPack
---@field ZoneIndex? number # esoui type: `luaindex:nilable`
---@field PoiIndex? number # esoui type: `luaindex:nilable`

---@return GetCurrentSubZonePOIIndicesPack # Packed output from *GetCurrentSubZonePOIIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrentSubZonePOIIndices()
    local data = {GetCurrentSubZonePOIIndices()}
    return {
        ZoneIndex = data[1],
        PoiIndex = data[2]
    }
end

---@class GetCurrentTradingHouseGuildDetailsPack
---@field GuildId number # esoui type: `integer`
---@field GuildName string
---@field GuildAlliance Alliance

---@return GetCurrentTradingHouseGuildDetailsPack # Packed output from *GetCurrentTradingHouseGuildDetails*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrentTradingHouseGuildDetails()
    local data = {GetCurrentTradingHouseGuildDetails()}
    return {
        GuildId = data[1],
        GuildName = data[2],
        GuildAlliance = data[3]
    }
end

---@class GetCurrentZoneLevelScalingConstraintsPack
---@field ScaleLevelContraintType ScaleLevelConstraintType
---@field MinScaleLevel number # esoui type: `integer`
---@field MaxScaleLevel number # esoui type: `integer`

---@return GetCurrentZoneLevelScalingConstraintsPack # Packed output from *GetCurrentZoneLevelScalingConstraints*
function EsoAddonFramework_Framework_Eso_Pack.GetCurrentZoneLevelScalingConstraints()
    local data = {GetCurrentZoneLevelScalingConstraints()}
    return {
        ScaleLevelContraintType = data[1],
        MinScaleLevel = data[2],
        MaxScaleLevel = data[3]
    }
end

---@class GetDailyLoginRewardInfoForCurrentMonthPack
---@field RewardId number # esoui type: `integer`
---@field Quantity number # esoui type: `integer`
---@field IsMilestone boolean # esoui type: `bool`

---@param rewardIndex number # esoui type: `luaindex`
---@return GetDailyLoginRewardInfoForCurrentMonthPack # Packed output from *GetDailyLoginRewardInfoForCurrentMonth*
function EsoAddonFramework_Framework_Eso_Pack.GetDailyLoginRewardInfoForCurrentMonth(rewardIndex)
    local data = {GetDailyLoginRewardInfoForCurrentMonth(rewardIndex)}
    return {
        RewardId = data[1],
        Quantity = data[2],
        IsMilestone = data[3]
    }
end

---@class GetDateElementsFromTimestampPack
---@field Year number # esoui type: `integer`
---@field Month number # esoui type: `integer`
---@field Day number # esoui type: `integer`

---@param timestamp number # esoui type: `id64`
---@return GetDateElementsFromTimestampPack # Packed output from *GetDateElementsFromTimestamp*
function EsoAddonFramework_Framework_Eso_Pack.GetDateElementsFromTimestamp(timestamp)
    local data = {GetDateElementsFromTimestamp(timestamp)}
    return {
        Year = data[1],
        Month = data[2],
        Day = data[3]
    }
end

---@class GetDeathInfoPack
---@field TimeUntilRevive number # esoui type: `integer`
---@field TimeUntilAutoRelease number # esoui type: `integer`
---@field CorpseSummonTime number # esoui type: `integer`
---@field IsPenaltyTooHighToRevive boolean # esoui type: `bool`
---@field EncounterIsInProgress boolean # esoui type: `bool`
---@field IsAVADeath boolean # esoui type: `bool`
---@field IsBattleGroundDeath boolean # esoui type: `bool`
---@field IsReleaseOnly boolean # esoui type: `bool`
---@field SoulGemAvailable boolean # esoui type: `bool`
---@field FreeRevive boolean # esoui type: `bool`
---@field IsRaidDeath boolean # esoui type: `bool`
---@field DeprecatedParam boolean # esoui type: `bool`
---@field CyclicRespawnQueueDuration number # esoui type: `integer`
---@field CyclicRespawnQueueTimeLeft number # esoui type: `integer`

---@return GetDeathInfoPack # Packed output from *GetDeathInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetDeathInfo()
    local data = {GetDeathInfo()}
    return {
        TimeUntilRevive = data[1],
        TimeUntilAutoRelease = data[2],
        CorpseSummonTime = data[3],
        IsPenaltyTooHighToRevive = data[4],
        EncounterIsInProgress = data[5],
        IsAVADeath = data[6],
        IsBattleGroundDeath = data[7],
        IsReleaseOnly = data[8],
        SoulGemAvailable = data[9],
        FreeRevive = data[10],
        IsRaidDeath = data[11],
        DeprecatedParam = data[12],
        CyclicRespawnQueueDuration = data[13],
        CyclicRespawnQueueTimeLeft = data[14]
    }
end

---@class GetDeathRecapHintInfoPack
---@field Text string
---@field Importance DeathRecapHintImportance

---@param index number # esoui type: `luaindex`
---@return GetDeathRecapHintInfoPack # Packed output from *GetDeathRecapHintInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetDeathRecapHintInfo(index)
    local data = {GetDeathRecapHintInfo(index)}
    return {
        Text = data[1],
        Importance = data[2]
    }
end

---@class GetDiggingActiveSkillIndicesPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`
---@field SkillIndex number # esoui type: `luaindex`

---@param diggingActiveSkill DiggingActiveSkills
---@return GetDiggingActiveSkillIndicesPack # Packed output from *GetDiggingActiveSkillIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetDiggingActiveSkillIndices(diggingActiveSkill)
    local data = {GetDiggingActiveSkillIndices(diggingActiveSkill)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2],
        SkillIndex = data[3]
    }
end

---@class GetDigPowerBarUIPositionPack
---@field X number
---@field Y number

---@return GetDigPowerBarUIPositionPack # Packed output from *GetDigPowerBarUIPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetDigPowerBarUIPosition()
    local data = {GetDigPowerBarUIPosition()}
    return {
        X = data[1],
        Y = data[2]
    }
end

---@class GetDigSiteNormalizedBorderPointsPack
---@field NormalizedX number
---@field NormalizedZ number

---NOTE! Uses variable returns...
---@param digSiteId number # esoui type: `integer`
---@return GetDigSiteNormalizedBorderPointsPack # Packed output from *GetDigSiteNormalizedBorderPoints*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSiteNormalizedBorderPoints(digSiteId)
    local data = {GetDigSiteNormalizedBorderPoints(digSiteId)}
    return {
        NormalizedX = data[1],
        NormalizedZ = data[2]
    }
end

---@class GetDigSiteNormalizedCenterPositionPack
---@field NormalizedX number
---@field NormalizedZ number
---@field IsShownInCurrentMap boolean # esoui type: `bool`

---@param digSiteId number # esoui type: `integer`
---@return GetDigSiteNormalizedCenterPositionPack # Packed output from *GetDigSiteNormalizedCenterPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSiteNormalizedCenterPosition(digSiteId)
    local data = {GetDigSiteNormalizedCenterPosition(digSiteId)}
    return {
        NormalizedX = data[1],
        NormalizedZ = data[2],
        IsShownInCurrentMap = data[3]
    }
end

---@class GetDigSpotDigPowerPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`

---@return GetDigSpotDigPowerPack # Packed output from *GetDigSpotDigPower*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSpotDigPower()
    local data = {GetDigSpotDigPower()}
    return {
        Current = data[1],
        Max = data[2]
    }
end

---@class GetDigSpotDurabilityPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`

---@return GetDigSpotDurabilityPack # Packed output from *GetDigSpotDurability*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSpotDurability()
    local data = {GetDigSpotDurability()}
    return {
        Current = data[1],
        Max = data[2]
    }
end

---@class GetDigSpotNumRadarsPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`

---@return GetDigSpotNumRadarsPack # Packed output from *GetDigSpotNumRadars*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSpotNumRadars()
    local data = {GetDigSpotNumRadars()}
    return {
        Current = data[1],
        Max = data[2]
    }
end

---@class GetDigSpotStabilityPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`

---@return GetDigSpotStabilityPack # Packed output from *GetDigSpotStability*
function EsoAddonFramework_Framework_Eso_Pack.GetDigSpotStability()
    local data = {GetDigSpotStability()}
    return {
        Current = data[1],
        Max = data[2]
    }
end

---@class GetDigToolUIKeybindPositionPack
---@field X number
---@field Y number

---@param diggingActiveSkill DiggingActiveSkills
---@return GetDigToolUIKeybindPositionPack # Packed output from *GetDigToolUIKeybindPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetDigToolUIKeybindPosition(diggingActiveSkill)
    local data = {GetDigToolUIKeybindPosition(diggingActiveSkill)}
    return {
        X = data[1],
        Y = data[2]
    }
end

---@class GetDisplayModesPack
---@field Width number # esoui type: `integer`
---@field Height number # esoui type: `integer`

---NOTE! Uses variable returns...
---@param displayIndex number # esoui type: `luaindex`
---@return GetDisplayModesPack # Packed output from *GetDisplayModes*
function EsoAddonFramework_Framework_Eso_Pack.GetDisplayModes(displayIndex)
    local data = {GetDisplayModes(displayIndex)}
    return {
        Width = data[1],
        Height = data[2]
    }
end

---@class GetDuelInfoPack
---@field DuelState DuelState
---@field PartnerCharacterName string
---@field PartnerDisplayName string

---@return GetDuelInfoPack # Packed output from *GetDuelInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetDuelInfo()
    local data = {GetDuelInfo()}
    return {
        DuelState = data[1],
        PartnerCharacterName = data[2],
        PartnerDisplayName = data[3]
    }
end

---@class GetDyeColorsByIdPack
---@field R number
---@field G number
---@field B number

---@param dyeId number # esoui type: `integer`
---@return GetDyeColorsByIdPack # Packed output from *GetDyeColorsById*
function EsoAddonFramework_Framework_Eso_Pack.GetDyeColorsById(dyeId)
    local data = {GetDyeColorsById(dyeId)}
    return {
        R = data[1],
        G = data[2],
        B = data[3]
    }
end

---@class GetDyeInfoPack
---@field DyeName string
---@field Known boolean # esoui type: `bool`
---@field Rarity DyeRarity
---@field HueCategory DyeHueCategory
---@field AchievementId number # esoui type: `integer`
---@field R number
---@field G number
---@field B number
---@field SortKey number # esoui type: `integer`
---@field DyeId number # esoui type: `integer`

---@param dyeIndex number # esoui type: `luaindex`
---@return GetDyeInfoPack # Packed output from *GetDyeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetDyeInfo(dyeIndex)
    local data = {GetDyeInfo(dyeIndex)}
    return {
        DyeName = data[1],
        Known = data[2],
        Rarity = data[3],
        HueCategory = data[4],
        AchievementId = data[5],
        R = data[6],
        G = data[7],
        B = data[8],
        SortKey = data[9],
        DyeId = data[10]
    }
end

---@class GetDyeInfoByIdPack
---@field DyeName string
---@field Known boolean # esoui type: `bool`
---@field Rarity DyeRarity
---@field HueCategory DyeHueCategory
---@field AchievementId number # esoui type: `integer`
---@field R number
---@field G number
---@field B number
---@field SortKey number # esoui type: `integer`

---@param dyeId number # esoui type: `integer`
---@return GetDyeInfoByIdPack # Packed output from *GetDyeInfoById*
function EsoAddonFramework_Framework_Eso_Pack.GetDyeInfoById(dyeId)
    local data = {GetDyeInfoById(dyeId)}
    return {
        DyeName = data[1],
        Known = data[2],
        Rarity = data[3],
        HueCategory = data[4],
        AchievementId = data[5],
        R = data[6],
        G = data[7],
        B = data[8],
        SortKey = data[9]
    }
end

---@class GetEmoteInfoPack
---@field SlashName string
---@field Category EmoteCategory
---@field EmoteId number # esoui type: `integer`
---@field DisplayName string
---@field ShowInGamepadUI boolean # esoui type: `bool`

---@param emoteIndex number # esoui type: `luaindex`
---@return GetEmoteInfoPack # Packed output from *GetEmoteInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetEmoteInfo(emoteIndex)
    local data = {GetEmoteInfo(emoteIndex)}
    return {
        SlashName = data[1],
        Category = data[2],
        EmoteId = data[3],
        DisplayName = data[4],
        ShowInGamepadUI = data[5]
    }
end

---@class GetEnchantingResultingItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field DisplayQuality ItemDisplayQuality

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@return GetEnchantingResultingItemInfoPack # Packed output from *GetEnchantingResultingItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetEnchantingResultingItemInfo(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex)
    local data = {GetEnchantingResultingItemInfo(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        DisplayQuality = data[6]
    }
end

---@class GetEquippedItemInfoPack
---@field Icon string
---@field SlotHasItem boolean # esoui type: `bool`
---@field SellPrice number # esoui type: `integer`
---@field IsHeldSlot boolean # esoui type: `bool`
---@field IsHeldNow boolean # esoui type: `bool`
---@field Locked boolean # esoui type: `bool`

---@param equipSlot EquipSlot
---@return GetEquippedItemInfoPack # Packed output from *GetEquippedItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetEquippedItemInfo(equipSlot)
    local data = {GetEquippedItemInfo(equipSlot)}
    return {
        Icon = data[1],
        SlotHasItem = data[2],
        SellPrice = data[3],
        IsHeldSlot = data[4],
        IsHeldNow = data[5],
        Locked = data[6]
    }
end

---@class GetEsoPlusSubscriptionBenefitsInfoHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetEsoPlusSubscriptionBenefitsInfoHelpIndicesPack # Packed output from *GetEsoPlusSubscriptionBenefitsInfoHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetEsoPlusSubscriptionBenefitsInfoHelpIndices()
    local data = {GetEsoPlusSubscriptionBenefitsInfoHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndicesPack # Packed output from *GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndices()
    local data = {GetEsoPlusSubscriptionLapsedBenefitsInfoHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetEULADetailsPack
---@field Message string
---@field AgreeText string
---@field DisagreeText string
---@field HasAgreed boolean # esoui type: `bool`
---@field DialogText string
---@field ReadCheckText string

---@param eulaType EULAType
---@return GetEULADetailsPack # Packed output from *GetEULADetails*
function EsoAddonFramework_Framework_Eso_Pack.GetEULADetails(eulaType)
    local data = {GetEULADetails(eulaType)}
    return {
        Message = data[1],
        AgreeText = data[2],
        DisagreeText = data[3],
        HasAgreed = data[4],
        DialogText = data[5],
        ReadCheckText = data[6]
    }
end

---@class GetFastTravelNodeInfoPack
---@field Known boolean # esoui type: `bool`
---@field Name string
---@field NormalizedX number
---@field NormalizedY number
---@field Icon string # esoui type: `textureName`
---@field GlowIcon? string # esoui type: `textureName:nilable`
---@field PoiType PointOfInterestType
---@field IsShownInCurrentMap boolean # esoui type: `bool`
---@field LinkedCollectibleIsLocked boolean # esoui type: `bool`

---@param nodeIndex number # esoui type: `luaindex`
---@return GetFastTravelNodeInfoPack # Packed output from *GetFastTravelNodeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFastTravelNodeInfo(nodeIndex)
    local data = {GetFastTravelNodeInfo(nodeIndex)}
    return {
        Known = data[1],
        Name = data[2],
        NormalizedX = data[3],
        NormalizedY = data[4],
        Icon = data[5],
        GlowIcon = data[6],
        PoiType = data[7],
        IsShownInCurrentMap = data[8],
        LinkedCollectibleIsLocked = data[9]
    }
end

---@class GetFastTravelNodeOutboundOnlyInfoPack
---@field IsOutboundOnly boolean # esoui type: `bool`
---@field ErrorStringId number # esoui type: `integer`

---@param nodeIndex number # esoui type: `luaindex`
---@return GetFastTravelNodeOutboundOnlyInfoPack # Packed output from *GetFastTravelNodeOutboundOnlyInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFastTravelNodeOutboundOnlyInfo(nodeIndex)
    local data = {GetFastTravelNodeOutboundOnlyInfo(nodeIndex)}
    return {
        IsOutboundOnly = data[1],
        ErrorStringId = data[2]
    }
end

---@class GetFastTravelNodePOIIndiciesPack
---@field ZoneIndex number # esoui type: `luaindex`
---@field PoiIndex number # esoui type: `luaindex`

---@param nodeIndex number # esoui type: `luaindex`
---@return GetFastTravelNodePOIIndiciesPack # Packed output from *GetFastTravelNodePOIIndicies*
function EsoAddonFramework_Framework_Eso_Pack.GetFastTravelNodePOIIndicies(nodeIndex)
    local data = {GetFastTravelNodePOIIndicies(nodeIndex)}
    return {
        ZoneIndex = data[1],
        PoiIndex = data[2]
    }
end

---@class GetFenceLaunderTransactionInfoPack
---@field TotalLaunders number # esoui type: `integer`
---@field LaundersUsed number # esoui type: `integer`
---@field ResetTimeSeconds number # esoui type: `integer`

---@return GetFenceLaunderTransactionInfoPack # Packed output from *GetFenceLaunderTransactionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFenceLaunderTransactionInfo()
    local data = {GetFenceLaunderTransactionInfo()}
    return {
        TotalLaunders = data[1],
        LaundersUsed = data[2],
        ResetTimeSeconds = data[3]
    }
end

---@class GetFenceSellTransactionInfoPack
---@field TotalSells number # esoui type: `integer`
---@field SellsUsed number # esoui type: `integer`
---@field ResetTimeSeconds number # esoui type: `integer`

---@return GetFenceSellTransactionInfoPack # Packed output from *GetFenceSellTransactionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFenceSellTransactionInfo()
    local data = {GetFenceSellTransactionInfo()}
    return {
        TotalSells = data[1],
        SellsUsed = data[2],
        ResetTimeSeconds = data[3]
    }
end

---@class GetFishingLureInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field Quality ItemQuality

---@param lureIndex number # esoui type: `luaindex`
---@return GetFishingLureInfoPack # Packed output from *GetFishingLureInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFishingLureInfo(lureIndex)
    local data = {GetFishingLureInfo(lureIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        Quality = data[5]
    }
end

---@class GetForwardCampPinInfoPack
---@field PinType number # esoui type: `integer`
---@field NormalizedX number
---@field NormalizedY number
---@field NormalizedRadius number
---@field Useable boolean # esoui type: `bool`

---@param battlegroundContext BattlegroundQueryContextType
---@param index number # esoui type: `luaindex`
---@return GetForwardCampPinInfoPack # Packed output from *GetForwardCampPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetForwardCampPinInfo(battlegroundContext, index)
    local data = {GetForwardCampPinInfo(battlegroundContext, index)}
    return {
        PinType = data[1],
        NormalizedX = data[2],
        NormalizedY = data[3],
        NormalizedRadius = data[4],
        Useable = data[5]
    }
end

---@class GetFriendCharacterInfoPack
---@field HasCharacter boolean # esoui type: `bool`
---@field CharacterName string
---@field ZoneName string
---@field ClassType number # esoui type: `integer`
---@field Alliance Alliance
---@field Level number # esoui type: `integer`
---@field ChampionRank number # esoui type: `integer`
---@field ZoneId number # esoui type: `integer`
---@field ConsoleId number # esoui type: `id64`

---@param friendIndex number # esoui type: `luaindex`
---@return GetFriendCharacterInfoPack # Packed output from *GetFriendCharacterInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFriendCharacterInfo(friendIndex)
    local data = {GetFriendCharacterInfo(friendIndex)}
    return {
        HasCharacter = data[1],
        CharacterName = data[2],
        ZoneName = data[3],
        ClassType = data[4],
        Alliance = data[5],
        Level = data[6],
        ChampionRank = data[7],
        ZoneId = data[8],
        ConsoleId = data[9]
    }
end

---@class GetFriendInfoPack
---@field DisplayName string
---@field Note string
---@field PlayerStatus PlayerStatus
---@field SecsSinceLogoff number # esoui type: `integer`

---@param friendIndex number # esoui type: `luaindex`
---@return GetFriendInfoPack # Packed output from *GetFriendInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFriendInfo(friendIndex)
    local data = {GetFriendInfo(friendIndex)}
    return {
        DisplayName = data[1],
        Note = data[2],
        PlayerStatus = data[3],
        SecsSinceLogoff = data[4]
    }
end

---@class GetFurnitureCategoryInfoPack
---@field DisplayName string
---@field ParentCategoryId? number # esoui type: `integer:nilable`
---@field AvailableInTradingHouse boolean # esoui type: `bool`
---@field CategoryOrder number # esoui type: `integer`

---@param furnitureCategoryId number # esoui type: `integer`
---@return GetFurnitureCategoryInfoPack # Packed output from *GetFurnitureCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFurnitureCategoryInfo(furnitureCategoryId)
    local data = {GetFurnitureCategoryInfo(furnitureCategoryId)}
    return {
        DisplayName = data[1],
        ParentCategoryId = data[2],
        AvailableInTradingHouse = data[3],
        CategoryOrder = data[4]
    }
end

---@class GetFurnitureCategoryKeyboardIconsPack
---@field NormalIcon string # esoui type: `textureName`
---@field PressedIcon string # esoui type: `textureName`
---@field MouseoverIcon string # esoui type: `textureName`

---@param furnitureCategoryId number # esoui type: `integer`
---@return GetFurnitureCategoryKeyboardIconsPack # Packed output from *GetFurnitureCategoryKeyboardIcons*
function EsoAddonFramework_Framework_Eso_Pack.GetFurnitureCategoryKeyboardIcons(furnitureCategoryId)
    local data = {GetFurnitureCategoryKeyboardIcons(furnitureCategoryId)}
    return {
        NormalIcon = data[1],
        PressedIcon = data[2],
        MouseoverIcon = data[3]
    }
end

---@class GetFurnitureDataCategoryInfoPack
---@field CategoryId? number # esoui type: `integer:nilable`
---@field SubcategoryId? number # esoui type: `integer:nilable`

---@param furnitureDataId number # esoui type: `integer`
---@return GetFurnitureDataCategoryInfoPack # Packed output from *GetFurnitureDataCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFurnitureDataCategoryInfo(furnitureDataId)
    local data = {GetFurnitureDataCategoryInfo(furnitureDataId)}
    return {
        CategoryId = data[1],
        SubcategoryId = data[2]
    }
end

---@class GetFurnitureDataInfoPack
---@field CategoryId? number # esoui type: `integer:nilable`
---@field SubcategoryId? number # esoui type: `integer:nilable`
---@field FurnitureTheme FurnitureThemeType
---@field PlacementLimitType HousingFurnishingLimitType

---@param furnitureDataId number # esoui type: `integer`
---@return GetFurnitureDataInfoPack # Packed output from *GetFurnitureDataInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetFurnitureDataInfo(furnitureDataId)
    local data = {GetFurnitureDataInfo(furnitureDataId)}
    return {
        CategoryId = data[1],
        SubcategoryId = data[2],
        FurnitureTheme = data[3],
        PlacementLimitType = data[4]
    }
end

---@class GetGameCameraInteractableActionInfoPack
---@field Action? string # esoui type: `string:nilable`
---@field Name? string # esoui type: `string:nilable`
---@field InteractBlocked boolean # esoui type: `bool`
---@field IsOwned boolean # esoui type: `bool`
---@field AdditionalInfo number # esoui type: `integer`
---@field ContextualInfo? number # esoui type: `integer:nilable`
---@field ContextualLink? string # esoui type: `string:nilable`
---@field IsCriminalInteract boolean # esoui type: `bool`

---@return GetGameCameraInteractableActionInfoPack # Packed output from *GetGameCameraInteractableActionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGameCameraInteractableActionInfo()
    local data = {GetGameCameraInteractableActionInfo()}
    return {
        Action = data[1],
        Name = data[2],
        InteractBlocked = data[3],
        IsOwned = data[4],
        AdditionalInfo = data[5],
        ContextualInfo = data[6],
        ContextualLink = data[7],
        IsCriminalInteract = data[8]
    }
end

---@class GetGameCameraInteractableInfoPack
---@field InteractionExists boolean # esoui type: `bool`
---@field InteractionAvailableNow boolean # esoui type: `bool`
---@field QuestInteraction boolean # esoui type: `bool`
---@field QuestTargetBased boolean # esoui type: `bool`
---@field QuestJournalIndex number # esoui type: `luaindex`
---@field QuestToolIndex number # esoui type: `luaindex`
---@field QuestToolOnCooldown boolean # esoui type: `bool`

---@return GetGameCameraInteractableInfoPack # Packed output from *GetGameCameraInteractableInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGameCameraInteractableInfo()
    local data = {GetGameCameraInteractableInfo()}
    return {
        InteractionExists = data[1],
        InteractionAvailableNow = data[2],
        QuestInteraction = data[3],
        QuestTargetBased = data[4],
        QuestJournalIndex = data[5],
        QuestToolIndex = data[6],
        QuestToolOnCooldown = data[7]
    }
end

---@class GetGameCameraInteractableUnitAudioInfoPack
---@field AudioModelType number # esoui type: `integer`
---@field AudioModelMaterial number # esoui type: `integer`
---@field AudioModelSize number # esoui type: `integer`

---@return GetGameCameraInteractableUnitAudioInfoPack # Packed output from *GetGameCameraInteractableUnitAudioInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGameCameraInteractableUnitAudioInfo()
    local data = {GetGameCameraInteractableUnitAudioInfo()}
    return {
        AudioModelType = data[1],
        AudioModelMaterial = data[2],
        AudioModelSize = data[3]
    }
end

---@class GetGameCameraPickpocketingBonusInfoPack
---@field InBonus boolean # esoui type: `bool`
---@field IsHostile boolean # esoui type: `bool`
---@field PercentChance number # esoui type: `integer`
---@field Difficulty PickpocketDifficultyType
---@field IsEmpty boolean # esoui type: `bool`
---@field ProspectiveResult ProspectivePickpocketResult
---@field MonsterSocialClassString string
---@field MonsterSocialClass MonsterSocialClass

---@return GetGameCameraPickpocketingBonusInfoPack # Packed output from *GetGameCameraPickpocketingBonusInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGameCameraPickpocketingBonusInfo()
    local data = {GetGameCameraPickpocketingBonusInfo()}
    return {
        InBonus = data[1],
        IsHostile = data[2],
        PercentChance = data[3],
        Difficulty = data[4],
        IsEmpty = data[5],
        ProspectiveResult = data[6],
        MonsterSocialClassString = data[7],
        MonsterSocialClass = data[8]
    }
end

---@class GetGamepadIconPathForKeyCodePack
---@field GamepadIcon? string # esoui type: `string:nilable`
---@field Width? number # esoui type: `integer:nilable`
---@field Height? number # esoui type: `integer:nilable`

---@param key KeyCode
---@param disabled boolean # esoui type: `bool`
---@return GetGamepadIconPathForKeyCodePack # Packed output from *GetGamepadIconPathForKeyCode*
function EsoAddonFramework_Framework_Eso_Pack.GetGamepadIconPathForKeyCode(key, disabled)
    local data = {GetGamepadIconPathForKeyCode(key, disabled)}
    return {
        GamepadIcon = data[1],
        Width = data[2],
        Height = data[3]
    }
end

---@class GetGiftInfoPack
---@field State ClientGiftState
---@field Seen boolean # esoui type: `bool`
---@field MarketProductId number # esoui type: `integer`
---@field SenderDisplayName string
---@field RecipientDisplayName string
---@field ExpirationTimestampS number # esoui type: `integer`
---@field Note string

---@param giftId number # esoui type: `id64`
---@return GetGiftInfoPack # Packed output from *GetGiftInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGiftInfo(giftId)
    local data = {GetGiftInfo(giftId)}
    return {
        State = data[1],
        Seen = data[2],
        MarketProductId = data[3],
        SenderDisplayName = data[4],
        RecipientDisplayName = data[5],
        ExpirationTimestampS = data[6],
        Note = data[7]
    }
end

---@class GetGiftingAccountLockedHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetGiftingAccountLockedHelpIndicesPack # Packed output from *GetGiftingAccountLockedHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetGiftingAccountLockedHelpIndices()
    local data = {GetGiftingAccountLockedHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetGiftingGraceStartedHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetGiftingGraceStartedHelpIndicesPack # Packed output from *GetGiftingGraceStartedHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetGiftingGraceStartedHelpIndices()
    local data = {GetGiftingGraceStartedHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetGiftingUnlockedHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetGiftingUnlockedHelpIndicesPack # Packed output from *GetGiftingUnlockedHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetGiftingUnlockedHelpIndices()
    local data = {GetGiftingUnlockedHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetGlobalTimeOfDayPack
---@field Hours number # esoui type: `integer`
---@field Minutes number # esoui type: `integer`
---@field Seconds number # esoui type: `integer`

---@return GetGlobalTimeOfDayPack # Packed output from *GetGlobalTimeOfDay*
function EsoAddonFramework_Framework_Eso_Pack.GetGlobalTimeOfDay()
    local data = {GetGlobalTimeOfDay()}
    return {
        Hours = data[1],
        Minutes = data[2],
        Seconds = data[3]
    }
end

---@class GetGroupElectionInfoPack
---@field ElectionType GroupElectionType
---@field TimeRemainingSeconds number # esoui type: `integer`
---@field ElectionDescriptor string
---@field TargetUnitTag? string # esoui type: `string:nilable`

---@return GetGroupElectionInfoPack # Packed output from *GetGroupElectionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGroupElectionInfo()
    local data = {GetGroupElectionInfo()}
    return {
        ElectionType = data[1],
        TimeRemainingSeconds = data[2],
        ElectionDescriptor = data[3],
        TargetUnitTag = data[4]
    }
end

---@class GetGroupInviteInfoPack
---@field CharacterName string
---@field MillisecondsSinceRequest number # esoui type: `integer`
---@field DisplayName string

---@return GetGroupInviteInfoPack # Packed output from *GetGroupInviteInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGroupInviteInfo()
    local data = {GetGroupInviteInfo()}
    return {
        CharacterName = data[1],
        MillisecondsSinceRequest = data[2],
        DisplayName = data[3]
    }
end

---@class GetGuildBlacklistInfoAtPack
---@field AccountName string
---@field Note string

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetGuildBlacklistInfoAtPack # Packed output from *GetGuildBlacklistInfoAt*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildBlacklistInfoAt(guildId, index)
    local data = {GetGuildBlacklistInfoAt(guildId, index)}
    return {
        AccountName = data[1],
        Note = data[2]
    }
end

---@class GetGuildClaimedKeepPack
---@field ClaimedKeepId number # esoui type: `integer`
---@field ClaimedKeepCampaignId number # esoui type: `integer`

---@param guildId number # esoui type: `integer`
---@return GetGuildClaimedKeepPack # Packed output from *GetGuildClaimedKeep*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildClaimedKeep(guildId)
    local data = {GetGuildClaimedKeep(guildId)}
    return {
        ClaimedKeepId = data[1],
        ClaimedKeepCampaignId = data[2]
    }
end

---@class GetGuildEventInfoPack
---@field EventType GuildEventType
---@field SecsSinceEvent number # esoui type: `integer`
---@field Param1 userdata # esoui type: `variant`
---@field Param2 userdata # esoui type: `variant`
---@field Param3 userdata # esoui type: `variant`
---@field Param4 userdata # esoui type: `variant`
---@field Param5 userdata # esoui type: `variant`
---@field Param6 userdata # esoui type: `variant`
---@field EventId number # esoui type: `integer`

---@param guildId number # esoui type: `integer`
---@param category GuildHistoryCategory
---@param eventIndex number # esoui type: `luaindex`
---@return GetGuildEventInfoPack # Packed output from *GetGuildEventInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildEventInfo(guildId, category, eventIndex)
    local data = {GetGuildEventInfo(guildId, category, eventIndex)}
    return {
        EventType = data[1],
        SecsSinceEvent = data[2],
        Param1 = data[3],
        Param2 = data[4],
        Param3 = data[5],
        Param4 = data[6],
        Param5 = data[7],
        Param6 = data[8],
        EventId = data[9]
    }
end

---@class GetGuildFinderAccountApplicationInfoPack
---@field GuildId number # esoui type: `integer`
---@field Level number # esoui type: `integer`
---@field ChampionPoints number # esoui type: `integer`
---@field Alliance Alliance
---@field ClassId number # esoui type: `integer`
---@field GuildName string
---@field GuildAlliance Alliance
---@field AccountName string
---@field CharacterName string
---@field AchievementPoints number # esoui type: `integer`
---@field ApplicationMessage string

---@param index number # esoui type: `luaindex`
---@return GetGuildFinderAccountApplicationInfoPack # Packed output from *GetGuildFinderAccountApplicationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildFinderAccountApplicationInfo(index)
    local data = {GetGuildFinderAccountApplicationInfo(index)}
    return {
        GuildId = data[1],
        Level = data[2],
        ChampionPoints = data[3],
        Alliance = data[4],
        ClassId = data[5],
        GuildName = data[6],
        GuildAlliance = data[7],
        AccountName = data[8],
        CharacterName = data[9],
        AchievementPoints = data[10],
        ApplicationMessage = data[11]
    }
end

---@class GetGuildFinderGuildApplicationInfoAtPack
---@field Level number # esoui type: `integer`
---@field ChampionPoints number # esoui type: `integer`
---@field Alliance Alliance
---@field ClassId number # esoui type: `integer`
---@field AccountName string
---@field CharacterName string
---@field AchievementPoints number # esoui type: `integer`
---@field ApplicationMessage string

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetGuildFinderGuildApplicationInfoAtPack # Packed output from *GetGuildFinderGuildApplicationInfoAt*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildFinderGuildApplicationInfoAt(guildId, index)
    local data = {GetGuildFinderGuildApplicationInfoAt(guildId, index)}
    return {
        Level = data[1],
        ChampionPoints = data[2],
        Alliance = data[3],
        ClassId = data[4],
        AccountName = data[5],
        CharacterName = data[6],
        AchievementPoints = data[7],
        ApplicationMessage = data[8]
    }
end

---@class GetGuildHeraldryAttributePack
---@field BackgroundCategoryIndex number # esoui type: `luaindex`
---@field BackgroundStyleIndex number # esoui type: `luaindex`
---@field BackgroundPrimaryColorIndex number # esoui type: `luaindex`
---@field BackgroundSecondaryColorIndex number # esoui type: `luaindex`
---@field CrestCategoryIndex number # esoui type: `luaindex`
---@field CrestStyleIndex number # esoui type: `luaindex`
---@field CrestColorIndex number # esoui type: `luaindex`

---@param guildId number # esoui type: `integer`
---@return GetGuildHeraldryAttributePack # Packed output from *GetGuildHeraldryAttribute*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildHeraldryAttribute(guildId)
    local data = {GetGuildHeraldryAttribute(guildId)}
    return {
        BackgroundCategoryIndex = data[1],
        BackgroundStyleIndex = data[2],
        BackgroundPrimaryColorIndex = data[3],
        BackgroundSecondaryColorIndex = data[4],
        CrestCategoryIndex = data[5],
        CrestStyleIndex = data[6],
        CrestColorIndex = data[7]
    }
end

---@class GetGuildInfoPack
---@field NumMembers number # esoui type: `integer`
---@field NumOnline number # esoui type: `integer`
---@field LeaderName string
---@field NumInvitees number # esoui type: `integer`

---@param guildId number # esoui type: `integer`
---@return GetGuildInfoPack # Packed output from *GetGuildInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildInfo(guildId)
    local data = {GetGuildInfo(guildId)}
    return {
        NumMembers = data[1],
        NumOnline = data[2],
        LeaderName = data[3],
        NumInvitees = data[4]
    }
end

---@class GetGuildInviteeInfoPack
---@field Name string
---@field RankIndex number # esoui type: `luaindex`

---@param guildId number # esoui type: `integer`
---@param inviteeIndex number # esoui type: `luaindex`
---@return GetGuildInviteeInfoPack # Packed output from *GetGuildInviteeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildInviteeInfo(guildId, inviteeIndex)
    local data = {GetGuildInviteeInfo(guildId, inviteeIndex)}
    return {
        Name = data[1],
        RankIndex = data[2]
    }
end

---@class GetGuildInviteInfoPack
---@field GuildId number # esoui type: `integer`
---@field GuildName string
---@field GuildAlliance Alliance
---@field InviterDisplayName string
---@field Note string

---@param index number # esoui type: `luaindex`
---@return GetGuildInviteInfoPack # Packed output from *GetGuildInviteInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildInviteInfo(index)
    local data = {GetGuildInviteInfo(index)}
    return {
        GuildId = data[1],
        GuildName = data[2],
        GuildAlliance = data[3],
        InviterDisplayName = data[4],
        Note = data[5]
    }
end

---@class GetGuildKioskActiveBidInfoPack
---@field TimeSinceBidS number # esoui type: `integer`
---@field BidAmount number # esoui type: `integer`
---@field KioskName string
---@field BidderDisplayName string

---@param guildId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetGuildKioskActiveBidInfoPack # Packed output from *GetGuildKioskActiveBidInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildKioskActiveBidInfo(guildId, index)
    local data = {GetGuildKioskActiveBidInfo(guildId, index)}
    return {
        TimeSinceBidS = data[1],
        BidAmount = data[2],
        KioskName = data[3],
        BidderDisplayName = data[4]
    }
end

---@class GetGuildKioskCycleTimesPack
---@field DespawnTimestampS number # esoui type: `integer`
---@field BidEndTimestampS number # esoui type: `integer`
---@field RespawnTimestampS number # esoui type: `integer`

---@return GetGuildKioskCycleTimesPack # Packed output from *GetGuildKioskCycleTimes*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildKioskCycleTimes()
    local data = {GetGuildKioskCycleTimes()}
    return {
        DespawnTimestampS = data[1],
        BidEndTimestampS = data[2],
        RespawnTimestampS = data[3]
    }
end

---@class GetGuildMemberCharacterInfoPack
---@field HasCharacter boolean # esoui type: `bool`
---@field CharacterName string
---@field ZoneName string
---@field ClassType number # esoui type: `integer`
---@field Alliance Alliance
---@field Level number # esoui type: `integer`
---@field ChampionRank number # esoui type: `integer`
---@field ZoneId number # esoui type: `integer`
---@field ConsoleId number # esoui type: `id64`

---@param guildId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return GetGuildMemberCharacterInfoPack # Packed output from *GetGuildMemberCharacterInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildMemberCharacterInfo(guildId, memberIndex)
    local data = {GetGuildMemberCharacterInfo(guildId, memberIndex)}
    return {
        HasCharacter = data[1],
        CharacterName = data[2],
        ZoneName = data[3],
        ClassType = data[4],
        Alliance = data[5],
        Level = data[6],
        ChampionRank = data[7],
        ZoneId = data[8],
        ConsoleId = data[9]
    }
end

---@class GetGuildMemberInfoPack
---@field Name string
---@field Note string
---@field RankIndex number # esoui type: `luaindex`
---@field PlayerStatus PlayerStatus
---@field SecsSinceLogoff number # esoui type: `integer`

---@param guildId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return GetGuildMemberInfoPack # Packed output from *GetGuildMemberInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildMemberInfo(guildId, memberIndex)
    local data = {GetGuildMemberInfo(guildId, memberIndex)}
    return {
        Name = data[1],
        Note = data[2],
        RankIndex = data[3],
        PlayerStatus = data[4],
        SecsSinceLogoff = data[5]
    }
end

---@class GetGuildRecruitmentInfoPack
---@field RecruitmentMessage string
---@field HeaderMessage string
---@field RecruitmentStatus GuildRecruitmentStatusAttributeValue
---@field PrimaryFocus GuildFocusAttributeValue
---@field SecondaryFocus GuildFocusAttributeValue
---@field Personality GuildPersonalityAttributeValue
---@field Language GuildLanguageAttributeValue
---@field MinimumCP number # esoui type: `integer`

---@param guildId number # esoui type: `integer`
---@return GetGuildRecruitmentInfoPack # Packed output from *GetGuildRecruitmentInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildRecruitmentInfo(guildId)
    local data = {GetGuildRecruitmentInfo(guildId)}
    return {
        RecruitmentMessage = data[1],
        HeaderMessage = data[2],
        RecruitmentStatus = data[3],
        PrimaryFocus = data[4],
        SecondaryFocus = data[5],
        Personality = data[6],
        Language = data[7],
        MinimumCP = data[8]
    }
end

---@class GetGuildSizeAttributeRangeValuesPack
---@field MinSize number # esoui type: `integer`
---@field MaxSize number # esoui type: `integer`

---@param size GuildSizeAttributeValue
---@return GetGuildSizeAttributeRangeValuesPack # Packed output from *GetGuildSizeAttributeRangeValues*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildSizeAttributeRangeValues(size)
    local data = {GetGuildSizeAttributeRangeValues(size)}
    return {
        MinSize = data[1],
        MaxSize = data[2]
    }
end

---@class GetGuildSpecificItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field ItemName string
---@field Quality number # esoui type: `integer`
---@field StackCount number # esoui type: `integer`
---@field RequiredLevel number # esoui type: `integer`
---@field RequiredChampionRank number # esoui type: `integer`
---@field PurchasePrice number # esoui type: `integer`
---@field CurrencyType CurrencyType

---@param index number # esoui type: `luaindex`
---@return GetGuildSpecificItemInfoPack # Packed output from *GetGuildSpecificItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetGuildSpecificItemInfo(index)
    local data = {GetGuildSpecificItemInfo(index)}
    return {
        Icon = data[1],
        ItemName = data[2],
        Quality = data[3],
        StackCount = data[4],
        RequiredLevel = data[5],
        RequiredChampionRank = data[6],
        PurchasePrice = data[7],
        CurrencyType = data[8]
    }
end

---@class GetHeatDecayInfoPack
---@field AmountPerInterval number # esoui type: `integer`
---@field IntervalDurationS number # esoui type: `integer`
---@field ProgressThroughIntervalS number # esoui type: `integer`

---@return GetHeatDecayInfoPack # Packed output from *GetHeatDecayInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeatDecayInfo()
    local data = {GetHeatDecayInfo()}
    return {
        AmountPerInterval = data[1],
        IntervalDurationS = data[2],
        ProgressThroughIntervalS = data[3]
    }
end

---@class GetHeldSlotsPack
---@field HeldMain number # esoui type: `integer`
---@field HeldOff number # esoui type: `integer`
---@field LastHeldMain number # esoui type: `integer`
---@field LastHeldOff number # esoui type: `integer`

---@return GetHeldSlotsPack # Packed output from *GetHeldSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetHeldSlots()
    local data = {GetHeldSlots()}
    return {
        HeldMain = data[1],
        HeldOff = data[2],
        LastHeldMain = data[3],
        LastHeldOff = data[4]
    }
end

---@class GetHelpCategoryInfoPack
---@field Name string
---@field Description string
---@field UpIcon string # esoui type: `textureName`
---@field DownIcon string # esoui type: `textureName`
---@field OverIcon string # esoui type: `textureName`
---@field GamepadIcon string # esoui type: `textureName`
---@field GamepadName string

---@param helpCategoryIndex number # esoui type: `luaindex`
---@return GetHelpCategoryInfoPack # Packed output from *GetHelpCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHelpCategoryInfo(helpCategoryIndex)
    local data = {GetHelpCategoryInfo(helpCategoryIndex)}
    return {
        Name = data[1],
        Description = data[2],
        UpIcon = data[3],
        DownIcon = data[4],
        OverIcon = data[5],
        GamepadIcon = data[6],
        GamepadName = data[7]
    }
end

---@class GetHelpIndicesFromHelpLinkPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param helpLink string
---@return GetHelpIndicesFromHelpLinkPack # Packed output from *GetHelpIndicesFromHelpLink*
function EsoAddonFramework_Framework_Eso_Pack.GetHelpIndicesFromHelpLink(helpLink)
    local data = {GetHelpIndicesFromHelpLink(helpLink)}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetHelpInfoPack
---@field Name string
---@field Description string
---@field Description2 string
---@field Image? string # esoui type: `textureName:nilable`
---@field DescriptionGamepad string
---@field DescriptionGamepad2 string
---@field ShowOptions HelpShowOptions

---@param helpCategoryIndex number # esoui type: `luaindex`
---@param helpIndex number # esoui type: `luaindex`
---@return GetHelpInfoPack # Packed output from *GetHelpInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHelpInfo(helpCategoryIndex, helpIndex)
    local data = {GetHelpInfo(helpCategoryIndex, helpIndex)}
    return {
        Name = data[1],
        Description = data[2],
        Description2 = data[3],
        Image = data[4],
        DescriptionGamepad = data[5],
        DescriptionGamepad2 = data[6],
        ShowOptions = data[7]
    }
end

---@class GetHelpOverviewQuestionAnswerPairPack
---@field Question string
---@field Answer string

---@param index number # esoui type: `luaindex`
---@return GetHelpOverviewQuestionAnswerPairPack # Packed output from *GetHelpOverviewQuestionAnswerPair*
function EsoAddonFramework_Framework_Eso_Pack.GetHelpOverviewQuestionAnswerPair(index)
    local data = {GetHelpOverviewQuestionAnswerPair(index)}
    return {
        Question = data[1],
        Answer = data[2]
    }
end

---@class GetHelpSearchResultsPack
---@field HelpCategoryIndex number # esoui type: `luaindex`
---@field HelpIndex number # esoui type: `luaindex`

---NOTE! Uses variable returns...
---@return GetHelpSearchResultsPack # Packed output from *GetHelpSearchResults*
function EsoAddonFramework_Framework_Eso_Pack.GetHelpSearchResults()
    local data = {GetHelpSearchResults()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetHeraldryBackgroundCategoryInfoPack
---@field CategoryName string
---@field Icon string # esoui type: `textureName`

---@param categoryIndex number # esoui type: `luaindex`
---@return GetHeraldryBackgroundCategoryInfoPack # Packed output from *GetHeraldryBackgroundCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryBackgroundCategoryInfo(categoryIndex)
    local data = {GetHeraldryBackgroundCategoryInfo(categoryIndex)}
    return {
        CategoryName = data[1],
        Icon = data[2]
    }
end

---@class GetHeraldryBackgroundStyleInfoPack
---@field StyleName string
---@field Icon string # esoui type: `textureName`

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return GetHeraldryBackgroundStyleInfoPack # Packed output from *GetHeraldryBackgroundStyleInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryBackgroundStyleInfo(categoryIndex, styleIndex)
    local data = {GetHeraldryBackgroundStyleInfo(categoryIndex, styleIndex)}
    return {
        StyleName = data[1],
        Icon = data[2]
    }
end

---@class GetHeraldryColorInfoPack
---@field ColorName string
---@field HueCategory DyeHueCategory
---@field R number
---@field G number
---@field B number
---@field SortKey number # esoui type: `integer`

---@param colorIndex number # esoui type: `luaindex`
---@return GetHeraldryColorInfoPack # Packed output from *GetHeraldryColorInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryColorInfo(colorIndex)
    local data = {GetHeraldryColorInfo(colorIndex)}
    return {
        ColorName = data[1],
        HueCategory = data[2],
        R = data[3],
        G = data[4],
        B = data[5],
        SortKey = data[6]
    }
end

---@class GetHeraldryCrestCategoryInfoPack
---@field CategoryName string
---@field Icon string # esoui type: `textureName`

---@param categoryIndex number # esoui type: `luaindex`
---@return GetHeraldryCrestCategoryInfoPack # Packed output from *GetHeraldryCrestCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryCrestCategoryInfo(categoryIndex)
    local data = {GetHeraldryCrestCategoryInfo(categoryIndex)}
    return {
        CategoryName = data[1],
        Icon = data[2]
    }
end

---@class GetHeraldryCrestStyleInfoPack
---@field StyleName string
---@field Icon string # esoui type: `textureName`

---@param categoryIndex number # esoui type: `luaindex`
---@param styleIndex number # esoui type: `luaindex`
---@return GetHeraldryCrestStyleInfoPack # Packed output from *GetHeraldryCrestStyleInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryCrestStyleInfo(categoryIndex, styleIndex)
    local data = {GetHeraldryCrestStyleInfo(categoryIndex, styleIndex)}
    return {
        StyleName = data[1],
        Icon = data[2]
    }
end

---@class GetHeraldryCustomizationCostsPack
---@field BackgroundStyleCost number # esoui type: `integer`
---@field BackgroundPrimaryColorCost number # esoui type: `integer`
---@field BackgroundSecondaryColorCost number # esoui type: `integer`
---@field CrestStyleCost number # esoui type: `integer`
---@field CrestColorCost number # esoui type: `integer`

---@return GetHeraldryCustomizationCostsPack # Packed output from *GetHeraldryCustomizationCosts*
function EsoAddonFramework_Framework_Eso_Pack.GetHeraldryCustomizationCosts()
    local data = {GetHeraldryCustomizationCosts()}
    return {
        BackgroundStyleCost = data[1],
        BackgroundPrimaryColorCost = data[2],
        BackgroundSecondaryColorCost = data[3],
        CrestStyleCost = data[4],
        CrestColorCost = data[5]
    }
end

---@class GetHighestPriorityActionBindingInfoFromNamePack
---@field KeyCode KeyCode
---@field Mod1 KeyCode
---@field Mod2 KeyCode
---@field Mod3 KeyCode
---@field Mod4 KeyCode

---@param actionName string
---@param preferGamepad boolean # esoui type: `bool`
---@return GetHighestPriorityActionBindingInfoFromNamePack # Packed output from *GetHighestPriorityActionBindingInfoFromName*
function EsoAddonFramework_Framework_Eso_Pack.GetHighestPriorityActionBindingInfoFromName(actionName, preferGamepad)
    local data = {GetHighestPriorityActionBindingInfoFromName(actionName, preferGamepad)}
    return {
        KeyCode = data[1],
        Mod1 = data[2],
        Mod2 = data[3],
        Mod3 = data[4],
        Mod4 = data[5]
    }
end

---@class GetHistoricalAvAObjectivePinInfoPack
---@field PinType MapDisplayPinType
---@field CurrentNormalizedX number
---@field CurrentNormalizedY number
---@field ContinuousUpdate boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return GetHistoricalAvAObjectivePinInfoPack # Packed output from *GetHistoricalAvAObjectivePinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHistoricalAvAObjectivePinInfo(keepId, objectiveId, battlegroundContext, historyPercent)
    local data = {GetHistoricalAvAObjectivePinInfo(keepId, objectiveId, battlegroundContext, historyPercent)}
    return {
        PinType = data[1],
        CurrentNormalizedX = data[2],
        CurrentNormalizedY = data[3],
        ContinuousUpdate = data[4]
    }
end

---@class GetHistoricalKeepPinInfoPack
---@field PinType number # esoui type: `integer`
---@field NormalizedX number
---@field NormalizedY number

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param historyPercent number
---@return GetHistoricalKeepPinInfoPack # Packed output from *GetHistoricalKeepPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHistoricalKeepPinInfo(keepId, battlegroundContext, historyPercent)
    local data = {GetHistoricalKeepPinInfo(keepId, battlegroundContext, historyPercent)}
    return {
        PinType = data[1],
        NormalizedX = data[2],
        NormalizedY = data[3]
    }
end

---@class GetHistoricalKeepTravelNetworkLinkInfoPack
---@field LinkType number # esoui type: `integer`
---@field LinkOwner number # esoui type: `integer`
---@field RestricedToAlliance number # esoui type: `integer`
---@field StartX number
---@field StartY number
---@field EndX number
---@field EndY number

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@param historyPercent number
---@return GetHistoricalKeepTravelNetworkLinkInfoPack # Packed output from *GetHistoricalKeepTravelNetworkLinkInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHistoricalKeepTravelNetworkLinkInfo(linkIndex, bgContext, historyPercent)
    local data = {GetHistoricalKeepTravelNetworkLinkInfo(linkIndex, bgContext, historyPercent)}
    return {
        LinkType = data[1],
        LinkOwner = data[2],
        RestricedToAlliance = data[3],
        StartX = data[4],
        StartY = data[5],
        EndX = data[6],
        EndY = data[7]
    }
end

---@class GetHomeShowLeaderboardEntryInfoPack
---@field Rank number # esoui type: `integer`
---@field PlayerDisplayname string
---@field HouseCollectibleId number # esoui type: `integer`
---@field Score number # esoui type: `integer`

---@param voteCategory number # esoui type: `integer`
---@param houseCategory HouseCategoryType
---@param entryIndex number # esoui type: `luaindex`
---@return GetHomeShowLeaderboardEntryInfoPack # Packed output from *GetHomeShowLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHomeShowLeaderboardEntryInfo(voteCategory, houseCategory, entryIndex)
    local data = {GetHomeShowLeaderboardEntryInfo(voteCategory, houseCategory, entryIndex)}
    return {
        Rank = data[1],
        PlayerDisplayname = data[2],
        HouseCollectibleId = data[3],
        Score = data[4]
    }
end

---@class GetHomeShowLeaderboardLocalPlayerInfoPack
---@field PersonalBestRank number # esoui type: `integer`
---@field PersonalBestScore number # esoui type: `integer`

---@param voteCategory number # esoui type: `integer`
---@param houseCategory HouseCategoryType
---@return GetHomeShowLeaderboardLocalPlayerInfoPack # Packed output from *GetHomeShowLeaderboardLocalPlayerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHomeShowLeaderboardLocalPlayerInfo(voteCategory, houseCategory)
    local data = {GetHomeShowLeaderboardLocalPlayerInfo(voteCategory, houseCategory)}
    return {
        PersonalBestRank = data[1],
        PersonalBestScore = data[2]
    }
end

---@class GetHouseTemplateBaseFurnishingCountInfoPack
---@field InitialFurnishingCount number # esoui type: `integer`
---@field FurnishingLimit number # esoui type: `integer`

---@param houseTemplateId number # esoui type: `integer`
---@param furnishingType HousingFurnishingLimitType
---@return GetHouseTemplateBaseFurnishingCountInfoPack # Packed output from *GetHouseTemplateBaseFurnishingCountInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHouseTemplateBaseFurnishingCountInfo(houseTemplateId, furnishingType)
    local data = {GetHouseTemplateBaseFurnishingCountInfo(houseTemplateId, furnishingType)}
    return {
        InitialFurnishingCount = data[1],
        FurnishingLimit = data[2]
    }
end

---@class GetHousingEditorConstantsPack
---@field PushSpeedPerSecond number
---@field RotationStepSizeRadians number
---@field NumTicksPerSecondForRotationChange number # esoui type: `integer`

---@return GetHousingEditorConstantsPack # Packed output from *GetHousingEditorConstants*
function EsoAddonFramework_Framework_Eso_Pack.GetHousingEditorConstants()
    local data = {GetHousingEditorConstants()}
    return {
        PushSpeedPerSecond = data[1],
        RotationStepSizeRadians = data[2],
        NumTicksPerSecondForRotationChange = data[3]
    }
end

---@class GetHousingEditorHistoryCommandInfoPack
---@field CommandType HousingEditorCommandType
---@field ItemName string
---@field Icon string # esoui type: `textureName`

---@param index number # esoui type: `integer`
---@return GetHousingEditorHistoryCommandInfoPack # Packed output from *GetHousingEditorHistoryCommandInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetHousingEditorHistoryCommandInfo(index)
    local data = {GetHousingEditorHistoryCommandInfo(index)}
    return {
        CommandType = data[1],
        ItemName = data[2],
        Icon = data[3]
    }
end

---@class GetIgnoredInfoPack
---@field DisplayName string
---@field Note string

---@param index number # esoui type: `luaindex`
---@return GetIgnoredInfoPack # Packed output from *GetIgnoredInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetIgnoredInfo(index)
    local data = {GetIgnoredInfo(index)}
    return {
        DisplayName = data[1],
        Note = data[2]
    }
end

---@class GetIncomingFriendRequestInfoPack
---@field DisplayName string
---@field SecsSinceRequest number # esoui type: `integer`
---@field Message string

---@param index number # esoui type: `luaindex`
---@return GetIncomingFriendRequestInfoPack # Packed output from *GetIncomingFriendRequestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetIncomingFriendRequestInfo(index)
    local data = {GetIncomingFriendRequestInfo(index)}
    return {
        DisplayName = data[1],
        SecsSinceRequest = data[2],
        Message = data[3]
    }
end

---@class GetInstanceKickTimePack
---@field RemainingTimeMs? number # esoui type: `integer:nilable`
---@field TotalTimeMs? number # esoui type: `integer:nilable`

---@return GetInstanceKickTimePack # Packed output from *GetInstanceKickTime*
function EsoAddonFramework_Framework_Eso_Pack.GetInstanceKickTime()
    local data = {GetInstanceKickTime()}
    return {
        RemainingTimeMs = data[1],
        TotalTimeMs = data[2]
    }
end

---@class GetInterfaceColorPack
---@field Red number
---@field Green number
---@field Blue number
---@field Alpha number

---@param interfaceColorType InterfaceColorType
---@param fieldValue number # esoui type: `integer`
---@return GetInterfaceColorPack # Packed output from *GetInterfaceColor*
function EsoAddonFramework_Framework_Eso_Pack.GetInterfaceColor(interfaceColorType, fieldValue)
    local data = {GetInterfaceColor(interfaceColorType, fieldValue)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3],
        Alpha = data[4]
    }
end

---@class GetItemComparisonEquipSlotsPack
---@field EquipSlot1 EquipSlot
---@field EquipSlot2 EquipSlot

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemComparisonEquipSlotsPack # Packed output from *GetItemComparisonEquipSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetItemComparisonEquipSlots(bagId, slotIndex)
    local data = {GetItemComparisonEquipSlots(bagId, slotIndex)}
    return {
        EquipSlot1 = data[1],
        EquipSlot2 = data[2]
    }
end

---@class GetItemCooldownInfoPack
---@field Remain number # esoui type: `integer`
---@field Duration number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemCooldownInfoPack # Packed output from *GetItemCooldownInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemCooldownInfo(bagId, slotIndex)
    local data = {GetItemCooldownInfo(bagId, slotIndex)}
    return {
        Remain = data[1],
        Duration = data[2]
    }
end

---@class GetItemCraftingInfoPack
---@field UsedInCraftingType TradeskillType
---@field ItemType ItemType
---@field ExtraInfo1? number # esoui type: `integer:nilable`
---@field ExtraInfo2? number # esoui type: `integer:nilable`
---@field ExtraInfo3? number # esoui type: `integer:nilable`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemCraftingInfoPack # Packed output from *GetItemCraftingInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemCraftingInfo(bagId, slotIndex)
    local data = {GetItemCraftingInfo(bagId, slotIndex)}
    return {
        UsedInCraftingType = data[1],
        ItemType = data[2],
        ExtraInfo1 = data[3],
        ExtraInfo2 = data[4],
        ExtraInfo3 = data[5]
    }
end

---@class GetItemEquippedComparisonEquipSlotsPack
---@field EquipSlot1 EquipSlot
---@field EquipSlot2 EquipSlot

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemEquippedComparisonEquipSlotsPack # Packed output from *GetItemEquippedComparisonEquipSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetItemEquippedComparisonEquipSlots(bagId, slotIndex)
    local data = {GetItemEquippedComparisonEquipSlots(bagId, slotIndex)}
    return {
        EquipSlot1 = data[1],
        EquipSlot2 = data[2]
    }
end

---@class GetItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field Locked boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field FunctionalQuality ItemQuality
---@field DisplayQuality ItemDisplayQuality

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemInfoPack # Packed output from *GetItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemInfo(bagId, slotIndex)
    local data = {GetItemInfo(bagId, slotIndex)}
    return {
        Icon = data[1],
        Stack = data[2],
        SellPrice = data[3],
        MeetsUsageRequirement = data[4],
        Locked = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        FunctionalQuality = data[8],
        DisplayQuality = data[9]
    }
end

---@class GetItemLinkComparisonEquipSlotsPack
---@field EquipSlot1 EquipSlot
---@field EquipSlot2 EquipSlot

---@param itemLink string
---@return GetItemLinkComparisonEquipSlotsPack # Packed output from *GetItemLinkComparisonEquipSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkComparisonEquipSlots(itemLink)
    local data = {GetItemLinkComparisonEquipSlots(itemLink)}
    return {
        EquipSlot1 = data[1],
        EquipSlot2 = data[2]
    }
end

---@class GetItemLinkContainerSetBonusInfoPack
---@field NumRequired number # esoui type: `integer`
---@field BonusDescription string
---@field IsPerfectedBonus boolean # esoui type: `bool`

---@param itemLink string
---@param containerSetIndex number # esoui type: `luaindex`
---@param bonusIndex number # esoui type: `luaindex`
---@return GetItemLinkContainerSetBonusInfoPack # Packed output from *GetItemLinkContainerSetBonusInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkContainerSetBonusInfo(itemLink, containerSetIndex, bonusIndex)
    local data = {GetItemLinkContainerSetBonusInfo(itemLink, containerSetIndex, bonusIndex)}
    return {
        NumRequired = data[1],
        BonusDescription = data[2],
        IsPerfectedBonus = data[3]
    }
end

---@class GetItemLinkContainerSetInfoPack
---@field HasSet boolean # esoui type: `bool`
---@field SetName string
---@field NumBonuses number # esoui type: `integer`
---@field NumNormalEquipped number # esoui type: `integer`
---@field MaxEquipped number # esoui type: `integer`
---@field SetId number # esoui type: `integer`
---@field NumPerfectedEquipped number # esoui type: `integer`

---@param itemLink string
---@param containerSetIndex number # esoui type: `luaindex`
---@return GetItemLinkContainerSetInfoPack # Packed output from *GetItemLinkContainerSetInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkContainerSetInfo(itemLink, containerSetIndex)
    local data = {GetItemLinkContainerSetInfo(itemLink, containerSetIndex)}
    return {
        HasSet = data[1],
        SetName = data[2],
        NumBonuses = data[3],
        NumNormalEquipped = data[4],
        MaxEquipped = data[5],
        SetId = data[6],
        NumPerfectedEquipped = data[7]
    }
end

---@class GetItemLinkDyeIdsPack
---@field PrimaryDefId number # esoui type: `integer`
---@field SecondaryDefId number # esoui type: `integer`
---@field AccentDefId number # esoui type: `integer`

---@param itemLink string
---@return GetItemLinkDyeIdsPack # Packed output from *GetItemLinkDyeIds*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkDyeIds(itemLink)
    local data = {GetItemLinkDyeIds(itemLink)}
    return {
        PrimaryDefId = data[1],
        SecondaryDefId = data[2],
        AccentDefId = data[3]
    }
end

---@class GetItemLinkEnchantInfoPack
---@field HasCharges boolean # esoui type: `bool`
---@field EnchantHeader string
---@field EnchantDescription string

---@param itemLink string
---@return GetItemLinkEnchantInfoPack # Packed output from *GetItemLinkEnchantInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkEnchantInfo(itemLink)
    local data = {GetItemLinkEnchantInfo(itemLink)}
    return {
        HasCharges = data[1],
        EnchantHeader = data[2],
        EnchantDescription = data[3]
    }
end

---@class GetItemLinkEnchantingRuneNamePack
---@field Known? boolean # esoui type: `bool:nilable`
---@field Name? string # esoui type: `string:nilable`

---@param itemLink string
---@return GetItemLinkEnchantingRuneNamePack # Packed output from *GetItemLinkEnchantingRuneName*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkEnchantingRuneName(itemLink)
    local data = {GetItemLinkEnchantingRuneName(itemLink)}
    return {
        Known = data[1],
        Name = data[2]
    }
end

---@class GetItemLinkEquippedComparisonEquipSlotsPack
---@field EquipSlot1 EquipSlot
---@field EquipSlot2 EquipSlot

---@param itemLink string
---@return GetItemLinkEquippedComparisonEquipSlotsPack # Packed output from *GetItemLinkEquippedComparisonEquipSlots*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkEquippedComparisonEquipSlots(itemLink)
    local data = {GetItemLinkEquippedComparisonEquipSlots(itemLink)}
    return {
        EquipSlot1 = data[1],
        EquipSlot2 = data[2]
    }
end

---@class GetItemLinkGlyphMinLevelsPack
---@field MinLevel? number # esoui type: `integer:nilable`
---@field MinChampionPoints? number # esoui type: `integer:nilable`

---@param itemLink string
---@return GetItemLinkGlyphMinLevelsPack # Packed output from *GetItemLinkGlyphMinLevels*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkGlyphMinLevels(itemLink)
    local data = {GetItemLinkGlyphMinLevels(itemLink)}
    return {
        MinLevel = data[1],
        MinChampionPoints = data[2]
    }
end

---@class GetItemLinkGrantedRecipeIndicesPack
---@field RecipeListIndex? number # esoui type: `luaindex:nilable`
---@field RecipeIndex? number # esoui type: `luaindex:nilable`

---@param itemLink string
---@return GetItemLinkGrantedRecipeIndicesPack # Packed output from *GetItemLinkGrantedRecipeIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkGrantedRecipeIndices(itemLink)
    local data = {GetItemLinkGrantedRecipeIndices(itemLink)}
    return {
        RecipeListIndex = data[1],
        RecipeIndex = data[2]
    }
end

---@class GetItemLinkInfoPack
---@field Icon string
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`

---@param itemLink string
---@return GetItemLinkInfoPack # Packed output from *GetItemLinkInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkInfo(itemLink)
    local data = {GetItemLinkInfo(itemLink)}
    return {
        Icon = data[1],
        SellPrice = data[2],
        MeetsUsageRequirement = data[3],
        EquipType = data[4],
        ItemStyleId = data[5]
    }
end

---@class GetItemLinkItemTagInfoPack
---@field ItemTagDescription string
---@field ItemTagCategory ItemTagCategory

---@param itemLink string
---@param itemTagIndex number # esoui type: `luaindex`
---@return GetItemLinkItemTagInfoPack # Packed output from *GetItemLinkItemTagInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkItemTagInfo(itemLink, itemTagIndex)
    local data = {GetItemLinkItemTagInfo(itemLink, itemTagIndex)}
    return {
        ItemTagDescription = data[1],
        ItemTagCategory = data[2]
    }
end

---@class GetItemLinkItemTypePack
---@field ItemType ItemType
---@field SpecializedItemType SpecializedItemType

---@param itemLink string
---@return GetItemLinkItemTypePack # Packed output from *GetItemLinkItemType*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkItemType(itemLink)
    local data = {GetItemLinkItemType(itemLink)}
    return {
        ItemType = data[1],
        SpecializedItemType = data[2]
    }
end

---@class GetItemLinkOnUseAbilityInfoPack
---@field HasAbility boolean # esoui type: `bool`
---@field AbilityHeader string
---@field AbilityDescription string
---@field Cooldown number # esoui type: `integer`
---@field HasScaling boolean # esoui type: `bool`
---@field MinLevel number # esoui type: `integer`
---@field MaxLevel number # esoui type: `integer`
---@field IsChampionPoints boolean # esoui type: `bool`
---@field RemainingCooldown number # esoui type: `integer`

---@param itemLink string
---@return GetItemLinkOnUseAbilityInfoPack # Packed output from *GetItemLinkOnUseAbilityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkOnUseAbilityInfo(itemLink)
    local data = {GetItemLinkOnUseAbilityInfo(itemLink)}
    return {
        HasAbility = data[1],
        AbilityHeader = data[2],
        AbilityDescription = data[3],
        Cooldown = data[4],
        HasScaling = data[5],
        MinLevel = data[6],
        MaxLevel = data[7],
        IsChampionPoints = data[8],
        RemainingCooldown = data[9]
    }
end

---@class GetItemLinkReagentTraitInfoPack
---@field Known? boolean # esoui type: `bool:nilable`
---@field Name? string # esoui type: `string:nilable`

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return GetItemLinkReagentTraitInfoPack # Packed output from *GetItemLinkReagentTraitInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkReagentTraitInfo(itemLink, index)
    local data = {GetItemLinkReagentTraitInfo(itemLink, index)}
    return {
        Known = data[1],
        Name = data[2]
    }
end

---@class GetItemLinkRecipeIngredientInfoPack
---@field IngredientName string
---@field AmountInInventoryAndBank number # esoui type: `integer`
---@field AmountRequired number # esoui type: `integer`

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return GetItemLinkRecipeIngredientInfoPack # Packed output from *GetItemLinkRecipeIngredientInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkRecipeIngredientInfo(itemLink, index)
    local data = {GetItemLinkRecipeIngredientInfo(itemLink, index)}
    return {
        IngredientName = data[1],
        AmountInInventoryAndBank = data[2],
        AmountRequired = data[3]
    }
end

---@class GetItemLinkRecipeTradeskillRequirementPack
---@field Tradeskill TradeskillType
---@field RequiredLevel number # esoui type: `integer`

---@param itemLink string
---@param tradeskillIndex number # esoui type: `luaindex`
---@return GetItemLinkRecipeTradeskillRequirementPack # Packed output from *GetItemLinkRecipeTradeskillRequirement*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkRecipeTradeskillRequirement(itemLink, tradeskillIndex)
    local data = {GetItemLinkRecipeTradeskillRequirement(itemLink, tradeskillIndex)}
    return {
        Tradeskill = data[1],
        RequiredLevel = data[2]
    }
end

---@class GetItemLinkSetBonusInfoPack
---@field NumRequired number # esoui type: `integer`
---@field BonusDescription string
---@field IsPerfectedBonus boolean # esoui type: `bool`

---@param itemLink string
---@param equipped boolean # esoui type: `bool`
---@param index number # esoui type: `luaindex`
---@return GetItemLinkSetBonusInfoPack # Packed output from *GetItemLinkSetBonusInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkSetBonusInfo(itemLink, equipped, index)
    local data = {GetItemLinkSetBonusInfo(itemLink, equipped, index)}
    return {
        NumRequired = data[1],
        BonusDescription = data[2],
        IsPerfectedBonus = data[3]
    }
end

---@class GetItemLinkSetInfoPack
---@field HasSet boolean # esoui type: `bool`
---@field SetName string
---@field NumBonuses number # esoui type: `integer`
---@field NumNormalEquipped number # esoui type: `integer`
---@field MaxEquipped number # esoui type: `integer`
---@field SetId number # esoui type: `integer`
---@field NumPerfectedEquipped number # esoui type: `integer`

---@param itemLink string
---@param equipped boolean # esoui type: `bool`
---@return GetItemLinkSetInfoPack # Packed output from *GetItemLinkSetInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkSetInfo(itemLink, equipped)
    local data = {GetItemLinkSetInfo(itemLink, equipped)}
    return {
        HasSet = data[1],
        SetName = data[2],
        NumBonuses = data[3],
        NumNormalEquipped = data[4],
        MaxEquipped = data[5],
        SetId = data[6],
        NumPerfectedEquipped = data[7]
    }
end

---@class GetItemLinkStacksPack
---@field StackCountBackpack number # esoui type: `integer`
---@field StackCountBank number # esoui type: `integer`
---@field StackCountCraftBag number # esoui type: `integer`

---@param itemLink string
---@return GetItemLinkStacksPack # Packed output from *GetItemLinkStacks*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkStacks(itemLink)
    local data = {GetItemLinkStacks(itemLink)}
    return {
        StackCountBackpack = data[1],
        StackCountBank = data[2],
        StackCountCraftBag = data[3]
    }
end

---@class GetItemLinkTraitInfoPack
---@field TraitType ItemTraitType
---@field TraitDescription string

---@param itemLink string
---@return GetItemLinkTraitInfoPack # Packed output from *GetItemLinkTraitInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkTraitInfo(itemLink)
    local data = {GetItemLinkTraitInfo(itemLink)}
    return {
        TraitType = data[1],
        TraitDescription = data[2]
    }
end

---@class GetItemLinkTraitOnUseAbilityInfoPack
---@field HasAbility boolean # esoui type: `bool`
---@field AbilityDescription string
---@field Cooldown number # esoui type: `integer`
---@field HasScaling boolean # esoui type: `bool`
---@field MinLevel number # esoui type: `integer`
---@field MaxLevel number # esoui type: `integer`
---@field IsChampionPoints boolean # esoui type: `bool`

---@param itemLink string
---@param index number # esoui type: `luaindex`
---@return GetItemLinkTraitOnUseAbilityInfoPack # Packed output from *GetItemLinkTraitOnUseAbilityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemLinkTraitOnUseAbilityInfo(itemLink, index)
    local data = {GetItemLinkTraitOnUseAbilityInfo(itemLink, index)}
    return {
        HasAbility = data[1],
        AbilityDescription = data[2],
        Cooldown = data[3],
        HasScaling = data[4],
        MinLevel = data[5],
        MaxLevel = data[6],
        IsChampionPoints = data[7]
    }
end

---@class GetItemPairedPoisonInfoPack
---@field HasPoison boolean # esoui type: `bool`
---@field PoisonCount number # esoui type: `integer`
---@field PoisonHeader string
---@field PoisonItemLink string

---@param equipSlot EquipSlot
---@return GetItemPairedPoisonInfoPack # Packed output from *GetItemPairedPoisonInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemPairedPoisonInfo(equipSlot)
    local data = {GetItemPairedPoisonInfo(equipSlot)}
    return {
        HasPoison = data[1],
        PoisonCount = data[2],
        PoisonHeader = data[3],
        PoisonItemLink = data[4]
    }
end

---@class GetItemRetraitCostPack
---@field RetraitCost number # esoui type: `integer`
---@field CurrencyType CurrencyType
---@field CurrencyLocation CurrencyLocation

---@return GetItemRetraitCostPack # Packed output from *GetItemRetraitCost*
function EsoAddonFramework_Framework_Eso_Pack.GetItemRetraitCost()
    local data = {GetItemRetraitCost()}
    return {
        RetraitCost = data[1],
        CurrencyType = data[2],
        CurrencyLocation = data[3]
    }
end

---@class GetItemSetCollectionCategoryKeyboardIconsPack
---@field UnpressedButtonIcon string # esoui type: `textureName`
---@field PressedButtonIcon string # esoui type: `textureName`
---@field MouseoverButtonIcon string # esoui type: `textureName`

---@param categoryId number # esoui type: `integer`
---@return GetItemSetCollectionCategoryKeyboardIconsPack # Packed output from *GetItemSetCollectionCategoryKeyboardIcons*
function EsoAddonFramework_Framework_Eso_Pack.GetItemSetCollectionCategoryKeyboardIcons(categoryId)
    local data = {GetItemSetCollectionCategoryKeyboardIcons(categoryId)}
    return {
        UnpressedButtonIcon = data[1],
        PressedButtonIcon = data[2],
        MouseoverButtonIcon = data[3]
    }
end

---@class GetItemSetCollectionPieceInfoPack
---@field PieceId number # esoui type: `integer`
---@field Slot number # esoui type: `id64`

---@param itemSetId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetItemSetCollectionPieceInfoPack # Packed output from *GetItemSetCollectionPieceInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetItemSetCollectionPieceInfo(itemSetId, index)
    local data = {GetItemSetCollectionPieceInfo(itemSetId, index)}
    return {
        PieceId = data[1],
        Slot = data[2]
    }
end

---@class GetItemTypePack
---@field ItemType ItemType
---@field SpecializedItemType SpecializedItemType

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetItemTypePack # Packed output from *GetItemType*
function EsoAddonFramework_Framework_Eso_Pack.GetItemType(bagId, slotIndex)
    local data = {GetItemType(bagId, slotIndex)}
    return {
        ItemType = data[1],
        SpecializedItemType = data[2]
    }
end

---@class GetJournalQuestConditionInfoPack
---@field ConditionText string
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`
---@field IsFailCondition boolean # esoui type: `bool`
---@field IsComplete boolean # esoui type: `bool`
---@field IsCreditShared boolean # esoui type: `bool`
---@field IsVisible boolean # esoui type: `bool`
---@field ConditionType QuestConditionType

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@param useShortDescription boolean # esoui type: `bool`
---@return GetJournalQuestConditionInfoPack # Packed output from *GetJournalQuestConditionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestConditionInfo(journalQuestIndex, stepIndex, conditionIndex, useShortDescription)
    local data = {GetJournalQuestConditionInfo(journalQuestIndex, stepIndex, conditionIndex, useShortDescription)}
    return {
        ConditionText = data[1],
        Current = data[2],
        Max = data[3],
        IsFailCondition = data[4],
        IsComplete = data[5],
        IsCreditShared = data[6],
        IsVisible = data[7],
        ConditionType = data[8]
    }
end

---@class GetJournalQuestConditionValuesPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`
---@field IsFailCondition boolean # esoui type: `bool`
---@field IsComplete boolean # esoui type: `bool`
---@field IsCreditShared boolean # esoui type: `bool`
---@field IsVisible boolean # esoui type: `bool`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return GetJournalQuestConditionValuesPack # Packed output from *GetJournalQuestConditionValues*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestConditionValues(journalQuestIndex, stepIndex, conditionIndex)
    local data = {GetJournalQuestConditionValues(journalQuestIndex, stepIndex, conditionIndex)}
    return {
        Current = data[1],
        Max = data[2],
        IsFailCondition = data[3],
        IsComplete = data[4],
        IsCreditShared = data[5],
        IsVisible = data[6]
    }
end

---@class GetJournalQuestEndingPack
---@field Goal string
---@field Dialog string
---@field ConfirmComplete string
---@field DeclineComplete string
---@field BackgroundText string
---@field JournalStepText string

---@param journalQuestIndex number # esoui type: `luaindex`
---@return GetJournalQuestEndingPack # Packed output from *GetJournalQuestEnding*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestEnding(journalQuestIndex)
    local data = {GetJournalQuestEnding(journalQuestIndex)}
    return {
        Goal = data[1],
        Dialog = data[2],
        ConfirmComplete = data[3],
        DeclineComplete = data[4],
        BackgroundText = data[5],
        JournalStepText = data[6]
    }
end

---@class GetJournalQuestInfoPack
---@field QuestName string
---@field BackgroundText string
---@field ActiveStepText string
---@field ActiveStepType number # esoui type: `integer`
---@field ActiveStepTrackerOverrideText string
---@field Completed boolean # esoui type: `bool`
---@field Tracked boolean # esoui type: `bool`
---@field QuestLevel number # esoui type: `integer`
---@field Pushed boolean # esoui type: `bool`
---@field QuestType number # esoui type: `integer`
---@field InstanceDisplayType InstanceDisplayType

---@param journalQuestIndex number # esoui type: `luaindex`
---@return GetJournalQuestInfoPack # Packed output from *GetJournalQuestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestInfo(journalQuestIndex)
    local data = {GetJournalQuestInfo(journalQuestIndex)}
    return {
        QuestName = data[1],
        BackgroundText = data[2],
        ActiveStepText = data[3],
        ActiveStepType = data[4],
        ActiveStepTrackerOverrideText = data[5],
        Completed = data[6],
        Tracked = data[7],
        QuestLevel = data[8],
        Pushed = data[9],
        QuestType = data[10],
        InstanceDisplayType = data[11]
    }
end

---@class GetJournalQuestLocationInfoPack
---@field ZoneName string
---@field ObjectiveName string
---@field ZoneIndex number # esoui type: `luaindex`
---@field PoiIndex number # esoui type: `luaindex`

---@param journalQuestIndex number # esoui type: `luaindex`
---@return GetJournalQuestLocationInfoPack # Packed output from *GetJournalQuestLocationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestLocationInfo(journalQuestIndex)
    local data = {GetJournalQuestLocationInfo(journalQuestIndex)}
    return {
        ZoneName = data[1],
        ObjectiveName = data[2],
        ZoneIndex = data[3],
        PoiIndex = data[4]
    }
end

---@class GetJournalQuestRewardInfoPack
---@field Type RewardType
---@field Name string
---@field Amount number # esoui type: `integer`
---@field IconFile string # esoui type: `textureName`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field ItemDisplayQuality ItemDisplayQuality
---@field ItemType RewardItemType

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return GetJournalQuestRewardInfoPack # Packed output from *GetJournalQuestRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestRewardInfo(journalQuestIndex, rewardIndex)
    local data = {GetJournalQuestRewardInfo(journalQuestIndex, rewardIndex)}
    return {
        Type = data[1],
        Name = data[2],
        Amount = data[3],
        IconFile = data[4],
        MeetsUsageRequirement = data[5],
        ItemDisplayQuality = data[6],
        ItemType = data[7]
    }
end

---@class GetJournalQuestRewardSkillLinePack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return GetJournalQuestRewardSkillLinePack # Packed output from *GetJournalQuestRewardSkillLine*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestRewardSkillLine(journalQuestIndex, rewardIndex)
    local data = {GetJournalQuestRewardSkillLine(journalQuestIndex, rewardIndex)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2]
    }
end

---@class GetJournalQuestStepInfoPack
---@field JournalText string
---@field Visibility QuestStepVisibility
---@field ComparisonType QuestStepComparisonType
---@field TrackerOverrideText string
---@field NumConditions number # esoui type: `integer`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@return GetJournalQuestStepInfoPack # Packed output from *GetJournalQuestStepInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestStepInfo(journalQuestIndex, stepIndex)
    local data = {GetJournalQuestStepInfo(journalQuestIndex, stepIndex)}
    return {
        JournalText = data[1],
        Visibility = data[2],
        ComparisonType = data[3],
        TrackerOverrideText = data[4],
        NumConditions = data[5]
    }
end

---@class GetJournalQuestTimerInfoPack
---@field TimerStart number
---@field TimerEnd number
---@field IsVisible boolean # esoui type: `bool`
---@field IsPaused boolean # esoui type: `bool`

---@param journalQuestIndex number # esoui type: `luaindex`
---@return GetJournalQuestTimerInfoPack # Packed output from *GetJournalQuestTimerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetJournalQuestTimerInfo(journalQuestIndex)
    local data = {GetJournalQuestTimerInfo(journalQuestIndex)}
    return {
        TimerStart = data[1],
        TimerEnd = data[2],
        IsVisible = data[3],
        IsPaused = data[4]
    }
end

---@class GetKeepKeysByIndexPack
---@field KeepId number # esoui type: `integer`
---@field BattlegroundContext number # esoui type: `integer`

---@param index number # esoui type: `luaindex`
---@return GetKeepKeysByIndexPack # Packed output from *GetKeepKeysByIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepKeysByIndex(index)
    local data = {GetKeepKeysByIndex(index)}
    return {
        KeepId = data[1],
        BattlegroundContext = data[2]
    }
end

---@class GetKeepPinInfoPack
---@field PinType number # esoui type: `integer`
---@field NormalizedX number
---@field NormalizedY number

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetKeepPinInfoPack # Packed output from *GetKeepPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepPinInfo(keepId, battlegroundContext)
    local data = {GetKeepPinInfo(keepId, battlegroundContext)}
    return {
        PinType = data[1],
        NormalizedX = data[2],
        NormalizedY = data[3]
    }
end

---@class GetKeepResourceInfoPack
---@field CurrentAmount number # esoui type: `integer`
---@field AmountForNextLevel number # esoui type: `integer`
---@field UpkeepPerMinute number # esoui type: `integer`

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@param level number # esoui type: `integer`
---@return GetKeepResourceInfoPack # Packed output from *GetKeepResourceInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepResourceInfo(keepId, battlegroundContext, resourceType, level)
    local data = {GetKeepResourceInfo(keepId, battlegroundContext, resourceType, level)}
    return {
        CurrentAmount = data[1],
        AmountForNextLevel = data[2],
        UpkeepPerMinute = data[3]
    }
end

---@class GetKeepTravelNetworkLinkEndpointsPack
---@field KeepAIndex number # esoui type: `luaindex`
---@field KeepBIndex number # esoui type: `luaindex`

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return GetKeepTravelNetworkLinkEndpointsPack # Packed output from *GetKeepTravelNetworkLinkEndpoints*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepTravelNetworkLinkEndpoints(linkIndex, bgContext)
    local data = {GetKeepTravelNetworkLinkEndpoints(linkIndex, bgContext)}
    return {
        KeepAIndex = data[1],
        KeepBIndex = data[2]
    }
end

---@class GetKeepTravelNetworkLinkInfoPack
---@field LinkType number # esoui type: `integer`
---@field LinkOwner number # esoui type: `integer`
---@field RestricedToAlliance number # esoui type: `integer`
---@field StartX number
---@field StartY number
---@field EndX number
---@field EndY number

---@param linkIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return GetKeepTravelNetworkLinkInfoPack # Packed output from *GetKeepTravelNetworkLinkInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepTravelNetworkLinkInfo(linkIndex, bgContext)
    local data = {GetKeepTravelNetworkLinkInfo(linkIndex, bgContext)}
    return {
        LinkType = data[1],
        LinkOwner = data[2],
        RestricedToAlliance = data[3],
        StartX = data[4],
        StartY = data[5],
        EndX = data[6],
        EndY = data[7]
    }
end

---@class GetKeepTravelNetworkNodeInfoPack
---@field KeepId number # esoui type: `integer`
---@field Accessible boolean # esoui type: `bool`
---@field NormalizedX number
---@field NormalizedY number

---@param nodeIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return GetKeepTravelNetworkNodeInfoPack # Packed output from *GetKeepTravelNetworkNodeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepTravelNetworkNodeInfo(nodeIndex, bgContext)
    local data = {GetKeepTravelNetworkNodeInfo(nodeIndex, bgContext)}
    return {
        KeepId = data[1],
        Accessible = data[2],
        NormalizedX = data[3],
        NormalizedY = data[4]
    }
end

---@class GetKeepTravelNetworkNodePositionPack
---@field NormalizedX number
---@field NormalizedY number

---@param nodeIndex number # esoui type: `luaindex`
---@param bgContext BattlegroundQueryContextType
---@return GetKeepTravelNetworkNodePositionPack # Packed output from *GetKeepTravelNetworkNodePosition*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepTravelNetworkNodePosition(nodeIndex, bgContext)
    local data = {GetKeepTravelNetworkNodePosition(nodeIndex, bgContext)}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetKeepUpgradeDetailsPack
---@field UpgradeName string
---@field UpgradeDetails string
---@field UpgradeIcon string # esoui type: `textureName`
---@field Active boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param resourceType KeepResourceType
---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetKeepUpgradeDetailsPack # Packed output from *GetKeepUpgradeDetails*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepUpgradeDetails(keepId, battlegroundContext, resourceType, level, index)
    local data = {GetKeepUpgradeDetails(keepId, battlegroundContext, resourceType, level, index)}
    return {
        UpgradeName = data[1],
        UpgradeDetails = data[2],
        UpgradeIcon = data[3],
        Active = data[4]
    }
end

---@class GetKeepUpgradeInfoPack
---@field CurrentAmount number # esoui type: `integer`
---@field AmountForNextLevel number # esoui type: `integer`
---@field UpkeepPerMinute number # esoui type: `integer`

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradePath KeepUpgradePath
---@param level number # esoui type: `integer`
---@return GetKeepUpgradeInfoPack # Packed output from *GetKeepUpgradeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepUpgradeInfo(keepId, battlegroundContext, upgradePath, level)
    local data = {GetKeepUpgradeInfo(keepId, battlegroundContext, upgradePath, level)}
    return {
        CurrentAmount = data[1],
        AmountForNextLevel = data[2],
        UpkeepPerMinute = data[3]
    }
end

---@class GetKeepUpgradePathDetailsPack
---@field UpgradeName string
---@field UpgradeDetails string
---@field Icon string # esoui type: `textureName`
---@field Active boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@param upgradePath KeepUpgradePath
---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetKeepUpgradePathDetailsPack # Packed output from *GetKeepUpgradePathDetails*
function EsoAddonFramework_Framework_Eso_Pack.GetKeepUpgradePathDetails(keepId, battlegroundContext, upgradePath, level, index)
    local data = {GetKeepUpgradePathDetails(keepId, battlegroundContext, upgradePath, level, index)}
    return {
        UpgradeName = data[1],
        UpgradeDetails = data[2],
        Icon = data[3],
        Active = data[4]
    }
end

---@class GetKillingAttackerInfoPack
---@field AttackerRawName string
---@field AttackerChampionPoints number # esoui type: `integer`
---@field AttackerLevel number # esoui type: `integer`
---@field AttackerAvARank number # esoui type: `integer`
---@field IsPlayer boolean # esoui type: `bool`
---@field IsBoss boolean # esoui type: `bool`
---@field Alliance Alliance
---@field MinionName string
---@field AttackerDisplayName string

---@param index number # esoui type: `luaindex`
---@return GetKillingAttackerInfoPack # Packed output from *GetKillingAttackerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKillingAttackerInfo(index)
    local data = {GetKillingAttackerInfo(index)}
    return {
        AttackerRawName = data[1],
        AttackerChampionPoints = data[2],
        AttackerLevel = data[3],
        AttackerAvARank = data[4],
        IsPlayer = data[5],
        IsBoss = data[6],
        Alliance = data[7],
        MinionName = data[8],
        AttackerDisplayName = data[9]
    }
end

---@class GetKillingAttackInfoPack
---@field AttackName string
---@field AttackDamage number # esoui type: `integer`
---@field AttackIcon string # esoui type: `textureName`
---@field WasKillingBlow boolean # esoui type: `bool`
---@field CastTimeAgoMS number # esoui type: `integer`
---@field DurationMS number # esoui type: `integer`
---@field NumAttackHits number # esoui type: `integer`
---@field AbilityId number # esoui type: `integer`

---@param index number # esoui type: `luaindex`
---@return GetKillingAttackInfoPack # Packed output from *GetKillingAttackInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKillingAttackInfo(index)
    local data = {GetKillingAttackInfo(index)}
    return {
        AttackName = data[1],
        AttackDamage = data[2],
        AttackIcon = data[3],
        WasKillingBlow = data[4],
        CastTimeAgoMS = data[5],
        DurationMS = data[6],
        NumAttackHits = data[7],
        AbilityId = data[8]
    }
end

---@class GetKillLocationPinInfoPack
---@field PinType number # esoui type: `integer`
---@field NormalizedX number
---@field NormalizedY number

---@param index number # esoui type: `luaindex`
---@return GetKillLocationPinInfoPack # Packed output from *GetKillLocationPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKillLocationPinInfo(index)
    local data = {GetKillLocationPinInfo(index)}
    return {
        PinType = data[1],
        NormalizedX = data[2],
        NormalizedY = data[3]
    }
end

---@class GetKioskGuildInfoPack
---@field BankedMoney? number # esoui type: `integer:nilable`
---@field ExistingBidAmount? number # esoui type: `integer:nilable`
---@field NumTotalBids? number # esoui type: `integer:nilable`
---@field QueryResult GuildKioskGuildInfoResult

---@param guildId number # esoui type: `integer`
---@return GetKioskGuildInfoPack # Packed output from *GetKioskGuildInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetKioskGuildInfo(guildId)
    local data = {GetKioskGuildInfo(guildId)}
    return {
        BankedMoney = data[1],
        ExistingBidAmount = data[2],
        NumTotalBids = data[3],
        QueryResult = data[4]
    }
end

---@class GetLastCraftingResultCurrencyInfoPack
---@field CurrencyType CurrencyType
---@field CurrencyAmount number # esoui type: `integer`

---@param resultIndex number # esoui type: `luaindex`
---@return GetLastCraftingResultCurrencyInfoPack # Packed output from *GetLastCraftingResultCurrencyInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLastCraftingResultCurrencyInfo(resultIndex)
    local data = {GetLastCraftingResultCurrencyInfo(resultIndex)}
    return {
        CurrencyType = data[1],
        CurrencyAmount = data[2]
    }
end

---@class GetLastCraftingResultItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemType ItemType
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality
---@field SoundCategory ItemUISoundCategory
---@field ItemInstanceId number # esoui type: `integer`

---@param resultIndex number # esoui type: `luaindex`
---@return GetLastCraftingResultItemInfoPack # Packed output from *GetLastCraftingResultItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLastCraftingResultItemInfo(resultIndex)
    local data = {GetLastCraftingResultItemInfo(resultIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemType = data[7],
        ItemStyleId = data[8],
        DisplayQuality = data[9],
        SoundCategory = data[10],
        ItemInstanceId = data[11]
    }
end

---@class GetLastCraftingResultLearnedTraitInfoPack
---@field TraitName string
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param resultIndex number # esoui type: `luaindex`
---@return GetLastCraftingResultLearnedTraitInfoPack # Packed output from *GetLastCraftingResultLearnedTraitInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLastCraftingResultLearnedTraitInfo(resultIndex)
    local data = {GetLastCraftingResultLearnedTraitInfo(resultIndex)}
    return {
        TraitName = data[1],
        ItemName = data[2],
        Icon = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        DisplayQuality = data[8]
    }
end

---@class GetLastCraftingResultLearnedTranslationInfoPack
---@field TranslationName string
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param resultIndex number # esoui type: `luaindex`
---@return GetLastCraftingResultLearnedTranslationInfoPack # Packed output from *GetLastCraftingResultLearnedTranslationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLastCraftingResultLearnedTranslationInfo(resultIndex)
    local data = {GetLastCraftingResultLearnedTranslationInfo(resultIndex)}
    return {
        TranslationName = data[1],
        ItemName = data[2],
        Icon = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        DisplayQuality = data[8]
    }
end

---@class GetLevelUpGuiParticleEffectInfoPack
---@field Texture string # esoui type: `textureName`
---@field NormalizedVelocityMin number
---@field NormalizedVelocityMax number
---@field DurationMinS number
---@field DurationMaxS number
---@field ParticlesPerSecond number # esoui type: `integer`
---@field StartScaleMin number
---@field StartScaleMax number
---@field EndScaleMin number
---@field EndScaleMax number
---@field StartAlpha number
---@field EndAlpha number
---@field R number
---@field G number
---@field B number
---@field NormalizedStartPoint1X number
---@field NormalizedStartPoint1Y number
---@field NormalizedStartPoint2X number
---@field NormalizedStartPoint2Y number
---@field AngleRadians number

---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetLevelUpGuiParticleEffectInfoPack # Packed output from *GetLevelUpGuiParticleEffectInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLevelUpGuiParticleEffectInfo(level, index)
    local data = {GetLevelUpGuiParticleEffectInfo(level, index)}
    return {
        Texture = data[1],
        NormalizedVelocityMin = data[2],
        NormalizedVelocityMax = data[3],
        DurationMinS = data[4],
        DurationMaxS = data[5],
        ParticlesPerSecond = data[6],
        StartScaleMin = data[7],
        StartScaleMax = data[8],
        EndScaleMin = data[9],
        EndScaleMax = data[10],
        StartAlpha = data[11],
        EndAlpha = data[12],
        R = data[13],
        G = data[14],
        B = data[15],
        NormalizedStartPoint1X = data[16],
        NormalizedStartPoint1Y = data[17],
        NormalizedStartPoint2X = data[18],
        NormalizedStartPoint2Y = data[19],
        AngleRadians = data[20]
    }
end

---@class GetLevelUpHelpIndicesForLevelPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param level number # esoui type: `integer`
---@return GetLevelUpHelpIndicesForLevelPack # Packed output from *GetLevelUpHelpIndicesForLevel*
function EsoAddonFramework_Framework_Eso_Pack.GetLevelUpHelpIndicesForLevel(level)
    local data = {GetLevelUpHelpIndicesForLevel(level)}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetLFGActivityRewardUINodeInfoPack
---@field DisplayName string
---@field Icon string # esoui type: `textureName`
---@field TextColorRed number
---@field TextColorBlue number
---@field TextColorGreen number

---@param rewardUIDataId number # esoui type: `integer`
---@param nodeIndex number # esoui type: `luaindex`
---@return GetLFGActivityRewardUINodeInfoPack # Packed output from *GetLFGActivityRewardUINodeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLFGActivityRewardUINodeInfo(rewardUIDataId, nodeIndex)
    local data = {GetLFGActivityRewardUINodeInfo(rewardUIDataId, nodeIndex)}
    return {
        DisplayName = data[1],
        Icon = data[2],
        TextColorRed = data[3],
        TextColorBlue = data[4],
        TextColorGreen = data[5]
    }
end

---@class GetLFGReadyCheckCountsPack
---@field TanksAccepted number # esoui type: `integer`
---@field TanksPending number # esoui type: `integer`
---@field HealersAccepted number # esoui type: `integer`
---@field HealersPending number # esoui type: `integer`
---@field DpsAccepted number # esoui type: `integer`
---@field DpsPending number # esoui type: `integer`

---@return GetLFGReadyCheckCountsPack # Packed output from *GetLFGReadyCheckCounts*
function EsoAddonFramework_Framework_Eso_Pack.GetLFGReadyCheckCounts()
    local data = {GetLFGReadyCheckCounts()}
    return {
        TanksAccepted = data[1],
        TanksPending = data[2],
        HealersAccepted = data[3],
        HealersPending = data[4],
        DpsAccepted = data[5],
        DpsPending = data[6]
    }
end

---@class GetLFGReadyCheckNotificationInfoPack
---@field ActivityType LFGActivity
---@field PlayerRole LFGRole
---@field TimeRemainingSeconds number # esoui type: `integer`

---@return GetLFGReadyCheckNotificationInfoPack # Packed output from *GetLFGReadyCheckNotificationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLFGReadyCheckNotificationInfo()
    local data = {GetLFGReadyCheckNotificationInfo()}
    return {
        ActivityType = data[1],
        PlayerRole = data[2],
        TimeRemainingSeconds = data[3]
    }
end

---@class GetLFGSearchTimesPack
---@field StartTimeMs number # esoui type: `integer`
---@field EstimatedCompletionTimeMs number # esoui type: `integer`

---@return GetLFGSearchTimesPack # Packed output from *GetLFGSearchTimes*
function EsoAddonFramework_Framework_Eso_Pack.GetLFGSearchTimes()
    local data = {GetLFGSearchTimes()}
    return {
        StartTimeMs = data[1],
        EstimatedCompletionTimeMs = data[2]
    }
end

---@class GetLocalTimeOfDayPack
---@field Hours number # esoui type: `integer`
---@field Minutes number # esoui type: `integer`
---@field Seconds number # esoui type: `integer`

---@return GetLocalTimeOfDayPack # Packed output from *GetLocalTimeOfDay*
function EsoAddonFramework_Framework_Eso_Pack.GetLocalTimeOfDay()
    local data = {GetLocalTimeOfDay()}
    return {
        Hours = data[1],
        Minutes = data[2],
        Seconds = data[3]
    }
end

---@class GetLootCurrencyPack
---@field UnownedCurrency number # esoui type: `integer`
---@field OwnedCurrency number # esoui type: `integer`

---@param type CurrencyType
---@return GetLootCurrencyPack # Packed output from *GetLootCurrency*
function EsoAddonFramework_Framework_Eso_Pack.GetLootCurrency(type)
    local data = {GetLootCurrency(type)}
    return {
        UnownedCurrency = data[1],
        OwnedCurrency = data[2]
    }
end

---@class GetLootItemInfoPack
---@field LootId number # esoui type: `integer`
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Count number # esoui type: `integer`
---@field Quality number # esoui type: `integer`
---@field Value number # esoui type: `integer`
---@field IsQuest boolean # esoui type: `bool`
---@field Stolen boolean # esoui type: `bool`
---@field LootType LootItemType

---@param lootIndex number # esoui type: `luaindex`
---@return GetLootItemInfoPack # Packed output from *GetLootItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLootItemInfo(lootIndex)
    local data = {GetLootItemInfo(lootIndex)}
    return {
        LootId = data[1],
        Name = data[2],
        Icon = data[3],
        Count = data[4],
        Quality = data[5],
        Value = data[6],
        IsQuest = data[7],
        Stolen = data[8],
        LootType = data[9]
    }
end

---@class GetLootMoneyPack
---@field UnownedMoney number # esoui type: `integer`
---@field OwnedMoney number # esoui type: `integer`

---@return GetLootMoneyPack # Packed output from *GetLootMoney*
function EsoAddonFramework_Framework_Eso_Pack.GetLootMoney()
    local data = {GetLootMoney()}
    return {
        UnownedMoney = data[1],
        OwnedMoney = data[2]
    }
end

---@class GetLootTargetInfoPack
---@field Name string
---@field TargetType InteractTargetType
---@field ActionName string
---@field IsOwned boolean # esoui type: `bool`

---@return GetLootTargetInfoPack # Packed output from *GetLootTargetInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLootTargetInfo()
    local data = {GetLootTargetInfo()}
    return {
        Name = data[1],
        TargetType = data[2],
        ActionName = data[3],
        IsOwned = data[4]
    }
end

---@class GetLoreBookCollectionIndicesFromCollectionIdPack
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field CollectionIndex? number # esoui type: `luaindex:nilable`

---@param collectionId number # esoui type: `integer`
---@return GetLoreBookCollectionIndicesFromCollectionIdPack # Packed output from *GetLoreBookCollectionIndicesFromCollectionId*
function EsoAddonFramework_Framework_Eso_Pack.GetLoreBookCollectionIndicesFromCollectionId(collectionId)
    local data = {GetLoreBookCollectionIndicesFromCollectionId(collectionId)}
    return {
        CategoryIndex = data[1],
        CollectionIndex = data[2]
    }
end

---@class GetLoreBookIndicesFromBookIdPack
---@field CategoryIndex? number # esoui type: `luaindex:nilable`
---@field CollectionIndex? number # esoui type: `luaindex:nilable`
---@field BookIndex? number # esoui type: `luaindex:nilable`

---@param bookId number # esoui type: `integer`
---@return GetLoreBookIndicesFromBookIdPack # Packed output from *GetLoreBookIndicesFromBookId*
function EsoAddonFramework_Framework_Eso_Pack.GetLoreBookIndicesFromBookId(bookId)
    local data = {GetLoreBookIndicesFromBookId(bookId)}
    return {
        CategoryIndex = data[1],
        CollectionIndex = data[2],
        BookIndex = data[3]
    }
end

---@class GetLoreBookInfoPack
---@field Title string
---@field Icon string # esoui type: `textureName`
---@field Known boolean # esoui type: `bool`
---@field BookId number # esoui type: `integer`

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@param bookIndex number # esoui type: `luaindex`
---@return GetLoreBookInfoPack # Packed output from *GetLoreBookInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLoreBookInfo(categoryIndex, collectionIndex, bookIndex)
    local data = {GetLoreBookInfo(categoryIndex, collectionIndex, bookIndex)}
    return {
        Title = data[1],
        Icon = data[2],
        Known = data[3],
        BookId = data[4]
    }
end

---@class GetLoreCategoryInfoPack
---@field Name string
---@field NumCollections number # esoui type: `integer`
---@field CategoryId number # esoui type: `integer`

---@param categoryIndex number # esoui type: `luaindex`
---@return GetLoreCategoryInfoPack # Packed output from *GetLoreCategoryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLoreCategoryInfo(categoryIndex)
    local data = {GetLoreCategoryInfo(categoryIndex)}
    return {
        Name = data[1],
        NumCollections = data[2],
        CategoryId = data[3]
    }
end

---@class GetLoreCollectionInfoPack
---@field Name string
---@field Description string
---@field NumKnownBooks number # esoui type: `integer`
---@field TotalBooks number # esoui type: `integer`
---@field Hidden boolean # esoui type: `bool`
---@field GamepadIcon string # esoui type: `textureName`
---@field CollectionId number # esoui type: `integer`

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@return GetLoreCollectionInfoPack # Packed output from *GetLoreCollectionInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetLoreCollectionInfo(categoryIndex, collectionIndex)
    local data = {GetLoreCollectionInfo(categoryIndex, collectionIndex)}
    return {
        Name = data[1],
        Description = data[2],
        NumKnownBooks = data[3],
        TotalBooks = data[4],
        Hidden = data[5],
        GamepadIcon = data[6],
        CollectionId = data[7]
    }
end

---@class GetMailAttachmentInfoPack
---@field NumAttachments number # esoui type: `integer`
---@field AttachedMoney number # esoui type: `integer`
---@field CodAmount number # esoui type: `integer`

---@param mailId number # esoui type: `id64`
---@return GetMailAttachmentInfoPack # Packed output from *GetMailAttachmentInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMailAttachmentInfo(mailId)
    local data = {GetMailAttachmentInfo(mailId)}
    return {
        NumAttachments = data[1],
        AttachedMoney = data[2],
        CodAmount = data[3]
    }
end

---@class GetMailFlagsPack
---@field Unread boolean # esoui type: `bool`
---@field Returned boolean # esoui type: `bool`
---@field FromSystem boolean # esoui type: `bool`
---@field FromCustomerService boolean # esoui type: `bool`

---@param mailId number # esoui type: `id64`
---@return GetMailFlagsPack # Packed output from *GetMailFlags*
function EsoAddonFramework_Framework_Eso_Pack.GetMailFlags(mailId)
    local data = {GetMailFlags(mailId)}
    return {
        Unread = data[1],
        Returned = data[2],
        FromSystem = data[3],
        FromCustomerService = data[4]
    }
end

---@class GetMailItemInfoPack
---@field SenderDisplayName string
---@field SenderCharacterName string
---@field Subject string
---@field Icon string # esoui type: `textureName`
---@field Unread boolean # esoui type: `bool`
---@field FromSystem boolean # esoui type: `bool`
---@field FromCustomerService boolean # esoui type: `bool`
---@field Returned boolean # esoui type: `bool`
---@field NumAttachments number # esoui type: `integer`
---@field AttachedMoney number # esoui type: `integer`
---@field CodAmount number # esoui type: `integer`
---@field ExpiresInDays? number # esoui type: `integer:nilable`
---@field SecsSinceReceived number # esoui type: `integer`

---@param mailId number # esoui type: `id64`
---@return GetMailItemInfoPack # Packed output from *GetMailItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMailItemInfo(mailId)
    local data = {GetMailItemInfo(mailId)}
    return {
        SenderDisplayName = data[1],
        SenderCharacterName = data[2],
        Subject = data[3],
        Icon = data[4],
        Unread = data[5],
        FromSystem = data[6],
        FromCustomerService = data[7],
        Returned = data[8],
        NumAttachments = data[9],
        AttachedMoney = data[10],
        CodAmount = data[11],
        ExpiresInDays = data[12],
        SecsSinceReceived = data[13]
    }
end

---@class GetMailSenderPack
---@field SenderDisplayName string
---@field SenderCharacterName string

---@param mailId number # esoui type: `id64`
---@return GetMailSenderPack # Packed output from *GetMailSender*
function EsoAddonFramework_Framework_Eso_Pack.GetMailSender(mailId)
    local data = {GetMailSender(mailId)}
    return {
        SenderDisplayName = data[1],
        SenderCharacterName = data[2]
    }
end

---@class GetMapFloorInfoPack
---@field CurrentFloor number # esoui type: `luaindex`
---@field NumFloors number # esoui type: `integer`

---@return GetMapFloorInfoPack # Packed output from *GetMapFloorInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMapFloorInfo()
    local data = {GetMapFloorInfo()}
    return {
        CurrentFloor = data[1],
        NumFloors = data[2]
    }
end

---@class GetMapInfoByIdPack
---@field Name string
---@field MapType UIMapType
---@field MapContentType MapContentType
---@field ZoneIndex number # esoui type: `luaindex`
---@field Description string

---@param mapId number # esoui type: `integer`
---@return GetMapInfoByIdPack # Packed output from *GetMapInfoById*
function EsoAddonFramework_Framework_Eso_Pack.GetMapInfoById(mapId)
    local data = {GetMapInfoById(mapId)}
    return {
        Name = data[1],
        MapType = data[2],
        MapContentType = data[3],
        ZoneIndex = data[4],
        Description = data[5]
    }
end

---@class GetMapInfoByIndexPack
---@field Name string
---@field MapType UIMapType
---@field MapContentType MapContentType
---@field ZoneIndex number # esoui type: `luaindex`
---@field Description string

---@param index number # esoui type: `luaindex`
---@return GetMapInfoByIndexPack # Packed output from *GetMapInfoByIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetMapInfoByIndex(index)
    local data = {GetMapInfoByIndex(index)}
    return {
        Name = data[1],
        MapType = data[2],
        MapContentType = data[3],
        ZoneIndex = data[4],
        Description = data[5]
    }
end

---@class GetMapKeySectionSymbolInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Tooltip string

---@param sectionIndex number # esoui type: `luaindex`
---@param symbolIndex number # esoui type: `luaindex`
---@return GetMapKeySectionSymbolInfoPack # Packed output from *GetMapKeySectionSymbolInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMapKeySectionSymbolInfo(sectionIndex, symbolIndex)
    local data = {GetMapKeySectionSymbolInfo(sectionIndex, symbolIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Tooltip = data[3]
    }
end

---@class GetMapLocationIconPack
---@field Icon string
---@field NormalizedX number
---@field NormalizedZ number

---@param locationIndex number # esoui type: `luaindex`
---@return GetMapLocationIconPack # Packed output from *GetMapLocationIcon*
function EsoAddonFramework_Framework_Eso_Pack.GetMapLocationIcon(locationIndex)
    local data = {GetMapLocationIcon(locationIndex)}
    return {
        Icon = data[1],
        NormalizedX = data[2],
        NormalizedZ = data[3]
    }
end

---@class GetMapLocationTooltipLineInfoPack
---@field Icon string # esoui type: `textureName`
---@field Name string
---@field Grouping number # esoui type: `integer`
---@field CategoryName string

---@param locationIndex number # esoui type: `luaindex`
---@param tooltipLineIndex number # esoui type: `luaindex`
---@return GetMapLocationTooltipLineInfoPack # Packed output from *GetMapLocationTooltipLineInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMapLocationTooltipLineInfo(locationIndex, tooltipLineIndex)
    local data = {GetMapLocationTooltipLineInfo(locationIndex, tooltipLineIndex)}
    return {
        Icon = data[1],
        Name = data[2],
        Grouping = data[3],
        CategoryName = data[4]
    }
end

---@class GetMapMouseoverInfoPack
---@field LocationName string
---@field TextureFile string
---@field TextureWidthNormalized number
---@field TextureHeightNormalized number
---@field TextureXOffsetNormalized number
---@field TextureYOffsetNormalized number

---@param normalizedMouseX number
---@param normalizedMouseY number
---@return GetMapMouseoverInfoPack # Packed output from *GetMapMouseoverInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMapMouseoverInfo(normalizedMouseX, normalizedMouseY)
    local data = {GetMapMouseoverInfo(normalizedMouseX, normalizedMouseY)}
    return {
        LocationName = data[1],
        TextureFile = data[2],
        TextureWidthNormalized = data[3],
        TextureHeightNormalized = data[4],
        TextureXOffsetNormalized = data[5],
        TextureYOffsetNormalized = data[6]
    }
end

---@class GetMapNumTilesPack
---@field NumHorizontalTiles number # esoui type: `integer`
---@field NumVerticalTiles number # esoui type: `integer`

---@return GetMapNumTilesPack # Packed output from *GetMapNumTiles*
function EsoAddonFramework_Framework_Eso_Pack.GetMapNumTiles()
    local data = {GetMapNumTiles()}
    return {
        NumHorizontalTiles = data[1],
        NumVerticalTiles = data[2]
    }
end

---@class GetMapNumTilesForMapIdPack
---@field NumHorizontalTiles number # esoui type: `integer`
---@field NumVerticalTiles number # esoui type: `integer`

---@param mapId number # esoui type: `integer`
---@return GetMapNumTilesForMapIdPack # Packed output from *GetMapNumTilesForMapId*
function EsoAddonFramework_Framework_Eso_Pack.GetMapNumTilesForMapId(mapId)
    local data = {GetMapNumTilesForMapId(mapId)}
    return {
        NumHorizontalTiles = data[1],
        NumVerticalTiles = data[2]
    }
end

---@class GetMapParentCategoriesPack
---@field CategoryName string
---@field CategoryIndex number # esoui type: `luaindex`

---NOTE! Uses variable returns...
---@param index number # esoui type: `luaindex`
---@return GetMapParentCategoriesPack # Packed output from *GetMapParentCategories*
function EsoAddonFramework_Framework_Eso_Pack.GetMapParentCategories(index)
    local data = {GetMapParentCategories(index)}
    return {
        CategoryName = data[1],
        CategoryIndex = data[2]
    }
end

---@class GetMapPingPack
---@field NormalizedX number
---@field NormalizedY number

---@param unitTag string
---@return GetMapPingPack # Packed output from *GetMapPing*
function EsoAddonFramework_Framework_Eso_Pack.GetMapPing(unitTag)
    local data = {GetMapPing(unitTag)}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetMapPlayerPositionPack
---@field NormalizedX number
---@field NormalizedZ number
---@field Heading number
---@field IsShownInCurrentMap boolean # esoui type: `bool`

---@param unitTag string
---@return GetMapPlayerPositionPack # Packed output from *GetMapPlayerPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetMapPlayerPosition(unitTag)
    local data = {GetMapPlayerPosition(unitTag)}
    return {
        NormalizedX = data[1],
        NormalizedZ = data[2],
        Heading = data[3],
        IsShownInCurrentMap = data[4]
    }
end

---@class GetMapPlayerWaypointPack
---@field NormalizedX number
---@field NormalizedY number

---@return GetMapPlayerWaypointPack # Packed output from *GetMapPlayerWaypoint*
function EsoAddonFramework_Framework_Eso_Pack.GetMapPlayerWaypoint()
    local data = {GetMapPlayerWaypoint()}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetMapRallyPointPack
---@field NormalizedX number
---@field NormalizedY number

---@return GetMapRallyPointPack # Packed output from *GetMapRallyPoint*
function EsoAddonFramework_Framework_Eso_Pack.GetMapRallyPoint()
    local data = {GetMapRallyPoint()}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetMarketAnnouncementHelpLinkIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param marketProductId number # esoui type: `integer`
---@return GetMarketAnnouncementHelpLinkIndicesPack # Packed output from *GetMarketAnnouncementHelpLinkIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetMarketAnnouncementHelpLinkIndices(marketProductId)
    local data = {GetMarketAnnouncementHelpLinkIndices(marketProductId)}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetMarketProductCrownCrateRewardInfoPack
---@field RewardName string
---@field RewardTypeText string
---@field CardFaceImage string # esoui type: `textureName`
---@field CardFaceFrameAccentImage string # esoui type: `textureName`
---@field StackCount number # esoui type: `integer`

---@param marketProductId number # esoui type: `integer`
---@return GetMarketProductCrownCrateRewardInfoPack # Packed output from *GetMarketProductCrownCrateRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMarketProductCrownCrateRewardInfo(marketProductId)
    local data = {GetMarketProductCrownCrateRewardInfo(marketProductId)}
    return {
        RewardName = data[1],
        RewardTypeText = data[2],
        CardFaceImage = data[3],
        CardFaceFrameAccentImage = data[4],
        StackCount = data[5]
    }
end

---@class GetMarketProductPresentationIdsPack
---@field MarketProductId number # esoui type: `integer`
---@field PresentationIndex number # esoui type: `luaindex`

---@param displayGroup MarketDisplayGroup
---@param topLevelIndex number # esoui type: `luaindex`
---@param categoryIndex? number # esoui type: `luaindex:nilable`
---@param marketProductIndex number # esoui type: `luaindex`
---@return GetMarketProductPresentationIdsPack # Packed output from *GetMarketProductPresentationIds*
function EsoAddonFramework_Framework_Eso_Pack.GetMarketProductPresentationIds(displayGroup, topLevelIndex, categoryIndex, marketProductIndex)
    local data = {GetMarketProductPresentationIds(displayGroup, topLevelIndex, categoryIndex, marketProductIndex)}
    return {
        MarketProductId = data[1],
        PresentationIndex = data[2]
    }
end

---@class GetMarketProductUnlockedByAchievementInfoPack
---@field AchievementId number # esoui type: `integer`
---@field HasCompletedAchievement boolean # esoui type: `bool`
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param marketProductId number # esoui type: `integer`
---@return GetMarketProductUnlockedByAchievementInfoPack # Packed output from *GetMarketProductUnlockedByAchievementInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMarketProductUnlockedByAchievementInfo(marketProductId)
    local data = {GetMarketProductUnlockedByAchievementInfo(marketProductId)}
    return {
        AchievementId = data[1],
        HasCompletedAchievement = data[2],
        HelpCategoryIndex = data[3],
        HelpIndex = data[4]
    }
end

---@class GetMatchTradingHouseItemNamesResultPack
---@field ItemName string
---@field ItemNameHash number # esoui type: `integer`

---@param taskId number # esoui type: `integer`
---@param resultIndex number # esoui type: `luaindex`
---@return GetMatchTradingHouseItemNamesResultPack # Packed output from *GetMatchTradingHouseItemNamesResult*
function EsoAddonFramework_Framework_Eso_Pack.GetMatchTradingHouseItemNamesResult(taskId, resultIndex)
    local data = {GetMatchTradingHouseItemNamesResult(taskId, resultIndex)}
    return {
        ItemName = data[1],
        ItemNameHash = data[2]
    }
end

---@class GetMaxIterationsPossibleForAlchemyItemPack
---@field NumIterations number # esoui type: `integer`
---@field LimitReason TradeskillResult

---@param solventBagId Bag
---@param solventSlotIndex number # esoui type: `integer`
---@param reagent1BagId Bag
---@param reagent1SlotIndex number # esoui type: `integer`
---@param reagent2BagId Bag
---@param reagent2SlotIndex number # esoui type: `integer`
---@param reagent3BagId Bag
---@param reagent3SlotIndex? number # esoui type: `integer:nilable`
---@return GetMaxIterationsPossibleForAlchemyItemPack # Packed output from *GetMaxIterationsPossibleForAlchemyItem*
function EsoAddonFramework_Framework_Eso_Pack.GetMaxIterationsPossibleForAlchemyItem(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex)
    local data = {GetMaxIterationsPossibleForAlchemyItem(solventBagId, solventSlotIndex, reagent1BagId, reagent1SlotIndex, reagent2BagId, reagent2SlotIndex, reagent3BagId, reagent3SlotIndex)}
    return {
        NumIterations = data[1],
        LimitReason = data[2]
    }
end

---@class GetMaxIterationsPossibleForEnchantingItemPack
---@field NumIterations number # esoui type: `integer`
---@field LimitReason TradeskillResult

---@param potencyRuneBagId Bag
---@param potencyRuneSlotIndex number # esoui type: `integer`
---@param essenceRuneBagId Bag
---@param essenceRuneSlotIndex number # esoui type: `integer`
---@param aspectRuneBagId Bag
---@param aspectRuneSlotIndex number # esoui type: `integer`
---@return GetMaxIterationsPossibleForEnchantingItemPack # Packed output from *GetMaxIterationsPossibleForEnchantingItem*
function EsoAddonFramework_Framework_Eso_Pack.GetMaxIterationsPossibleForEnchantingItem(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex)
    local data = {GetMaxIterationsPossibleForEnchantingItem(potencyRuneBagId, potencyRuneSlotIndex, essenceRuneBagId, essenceRuneSlotIndex, aspectRuneBagId, aspectRuneSlotIndex)}
    return {
        NumIterations = data[1],
        LimitReason = data[2]
    }
end

---@class GetMaxIterationsPossibleForRecipePack
---@field MaxIterations number # esoui type: `integer`
---@field LimitReason TradeskillResult

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return GetMaxIterationsPossibleForRecipePack # Packed output from *GetMaxIterationsPossibleForRecipe*
function EsoAddonFramework_Framework_Eso_Pack.GetMaxIterationsPossibleForRecipe(recipeListIndex, recipeIndex)
    local data = {GetMaxIterationsPossibleForRecipe(recipeListIndex, recipeIndex)}
    return {
        MaxIterations = data[1],
        LimitReason = data[2]
    }
end

---@class GetMaxIterationsPossibleForSmithingItemPack
---@field NumIterations number # esoui type: `integer`
---@field LimitReason TradeskillResult

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@param materialQuantity number # esoui type: `integer`
---@param itemStyleId number # esoui type: `integer`
---@param traitIndex number # esoui type: `luaindex`
---@param useUniversalStyleItem boolean # esoui type: `bool`
---@return GetMaxIterationsPossibleForSmithingItemPack # Packed output from *GetMaxIterationsPossibleForSmithingItem*
function EsoAddonFramework_Framework_Eso_Pack.GetMaxIterationsPossibleForSmithingItem(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, useUniversalStyleItem)
    local data = {GetMaxIterationsPossibleForSmithingItem(patternIndex, materialIndex, materialQuantity, itemStyleId, traitIndex, useUniversalStyleItem)}
    return {
        NumIterations = data[1],
        LimitReason = data[2]
    }
end

---@class GetMedalInfoPack
---@field Name string
---@field IconTexture string # esoui type: `textureName`
---@field Condition string
---@field ScoreReward number # esoui type: `integer`

---@param medalId number # esoui type: `integer`
---@return GetMedalInfoPack # Packed output from *GetMedalInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetMedalInfo(medalId)
    local data = {GetMedalInfo(medalId)}
    return {
        Name = data[1],
        IconTexture = data[2],
        Condition = data[3],
        ScoreReward = data[4]
    }
end

---@class GetMinMaxRamEscortsPack
---@field MinEscorts number # esoui type: `integer`
---@field MaxEscorts number # esoui type: `integer`

---@return GetMinMaxRamEscortsPack # Packed output from *GetMinMaxRamEscorts*
function EsoAddonFramework_Framework_Eso_Pack.GetMinMaxRamEscorts()
    local data = {GetMinMaxRamEscorts()}
    return {
        MinEscorts = data[1],
        MaxEscorts = data[2]
    }
end

---@class GetMouseIconPathForKeyCodePack
---@field MouseIcon? string # esoui type: `string:nilable`
---@field Width? number # esoui type: `integer:nilable`
---@field Height? number # esoui type: `integer:nilable`

---@param key KeyCode
---@return GetMouseIconPathForKeyCodePack # Packed output from *GetMouseIconPathForKeyCode*
function EsoAddonFramework_Framework_Eso_Pack.GetMouseIconPathForKeyCode(key)
    local data = {GetMouseIconPathForKeyCode(key)}
    return {
        MouseIcon = data[1],
        Width = data[2],
        Height = data[3]
    }
end

---@class GetNameplateGamepadFontPack
---@field FontName string
---@field FontStyle FontStyle

---@return GetNameplateGamepadFontPack # Packed output from *GetNameplateGamepadFont*
function EsoAddonFramework_Framework_Eso_Pack.GetNameplateGamepadFont()
    local data = {GetNameplateGamepadFont()}
    return {
        FontName = data[1],
        FontStyle = data[2]
    }
end

---@class GetNameplateKeyboardFontPack
---@field FontName string
---@field FontStyle FontStyle

---@return GetNameplateKeyboardFontPack # Packed output from *GetNameplateKeyboardFont*
function EsoAddonFramework_Framework_Eso_Pack.GetNameplateKeyboardFont()
    local data = {GetNameplateKeyboardFont()}
    return {
        FontName = data[1],
        FontStyle = data[2]
    }
end

---@class GetNearestQuestConditionPack
---@field FoundValidCondition boolean # esoui type: `bool`
---@field JournalQuestIndex number # esoui type: `luaindex`
---@field StepIndex number # esoui type: `luaindex`
---@field ConditionIndex number # esoui type: `luaindex`

---@param considerType number # esoui type: `integer`
---@return GetNearestQuestConditionPack # Packed output from *GetNearestQuestCondition*
function EsoAddonFramework_Framework_Eso_Pack.GetNearestQuestCondition(considerType)
    local data = {GetNearestQuestCondition(considerType)}
    return {
        FoundValidCondition = data[1],
        JournalQuestIndex = data[2],
        StepIndex = data[3],
        ConditionIndex = data[4]
    }
end

---@class GetNormalizedPositionForZoneStoryActivityIdPack
---@field NormalizedX number
---@field NormalizedZ number
---@field NormalizedRadius number
---@field IsInCurrentMap boolean # esoui type: `bool`

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@param activityId number # esoui type: `integer`
---@return GetNormalizedPositionForZoneStoryActivityIdPack # Packed output from *GetNormalizedPositionForZoneStoryActivityId*
function EsoAddonFramework_Framework_Eso_Pack.GetNormalizedPositionForZoneStoryActivityId(zoneId, zoneCompletionType, activityId)
    local data = {GetNormalizedPositionForZoneStoryActivityId(zoneId, zoneCompletionType, activityId)}
    return {
        NormalizedX = data[1],
        NormalizedZ = data[2],
        NormalizedRadius = data[3],
        IsInCurrentMap = data[4]
    }
end

---@class GetNormalizedWorldPositionPack
---@field NormalizedX number
---@field NormalizedY number

---@param zoneId number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return GetNormalizedWorldPositionPack # Packed output from *GetNormalizedWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetNormalizedWorldPosition(zoneId, worldX, worldY, worldZ)
    local data = {GetNormalizedWorldPosition(zoneId, worldX, worldY, worldZ)}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetNumCrownGemsFromItemManualGemificationPack
---@field ItemsRequired number # esoui type: `integer`
---@field GemsAwarded number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetNumCrownGemsFromItemManualGemificationPack # Packed output from *GetNumCrownGemsFromItemManualGemification*
function EsoAddonFramework_Framework_Eso_Pack.GetNumCrownGemsFromItemManualGemification(bagId, slotIndex)
    local data = {GetNumCrownGemsFromItemManualGemification(bagId, slotIndex)}
    return {
        ItemsRequired = data[1],
        GemsAwarded = data[2]
    }
end

---@class GetNumLastCraftingResultItemsAndPenaltyPack
---@field NumItems number # esoui type: `integer`
---@field PenaltyApplied boolean # esoui type: `bool`

---@return GetNumLastCraftingResultItemsAndPenaltyPack # Packed output from *GetNumLastCraftingResultItemsAndPenalty*
function EsoAddonFramework_Framework_Eso_Pack.GetNumLastCraftingResultItemsAndPenalty()
    local data = {GetNumLastCraftingResultItemsAndPenalty()}
    return {
        NumItems = data[1],
        PenaltyApplied = data[2]
    }
end

---@class GetNumRaidLeaderboardsPack
---@field Count number # esoui type: `integer`
---@field HasWeekly boolean # esoui type: `bool`

---@param raidCategory RaidCategory
---@return GetNumRaidLeaderboardsPack # Packed output from *GetNumRaidLeaderboards*
function EsoAddonFramework_Framework_Eso_Pack.GetNumRaidLeaderboards(raidCategory)
    local data = {GetNumRaidLeaderboards(raidCategory)}
    return {
        Count = data[1],
        HasWeekly = data[2]
    }
end

---@class GetNumUnblockedZoneStoryActivitiesForZoneCompletionTypePack
---@field NumUnblockedActivities number # esoui type: `integer`
---@field BlockingBranchErrorStringId number # esoui type: `integer`

---@param zoneId number # esoui type: `integer`
---@param zoneCompletionType ZoneCompletionType
---@return GetNumUnblockedZoneStoryActivitiesForZoneCompletionTypePack # Packed output from *GetNumUnblockedZoneStoryActivitiesForZoneCompletionType*
function EsoAddonFramework_Framework_Eso_Pack.GetNumUnblockedZoneStoryActivitiesForZoneCompletionType(zoneId, zoneCompletionType)
    local data = {GetNumUnblockedZoneStoryActivitiesForZoneCompletionType(zoneId, zoneCompletionType)}
    return {
        NumUnblockedActivities = data[1],
        BlockingBranchErrorStringId = data[2]
    }
end

---@class GetObjectiveAuraPinInfoPack
---@field PinType MapDisplayPinType
---@field Red number
---@field Green number
---@field Blue number

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetObjectiveAuraPinInfoPack # Packed output from *GetObjectiveAuraPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectiveAuraPinInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetObjectiveAuraPinInfo(keepId, objectiveId, battlegroundContext)}
    return {
        PinType = data[1],
        Red = data[2],
        Green = data[3],
        Blue = data[4]
    }
end

---@class GetObjectiveIdsForIndexPack
---@field KeepId number # esoui type: `integer`
---@field ObjectiveId number # esoui type: `integer`
---@field BattlegroundContext BattlegroundQueryContextType

---@param index number # esoui type: `luaindex`
---@return GetObjectiveIdsForIndexPack # Packed output from *GetObjectiveIdsForIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectiveIdsForIndex(index)
    local data = {GetObjectiveIdsForIndex(index)}
    return {
        KeepId = data[1],
        ObjectiveId = data[2],
        BattlegroundContext = data[3]
    }
end

---@class GetObjectiveInfoPack
---@field ObjectiveName string
---@field ObjectiveType ObjectiveType
---@field ObjectiveState ObjectiveControlState

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetObjectiveInfoPack # Packed output from *GetObjectiveInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectiveInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetObjectiveInfo(keepId, objectiveId, battlegroundContext)}
    return {
        ObjectiveName = data[1],
        ObjectiveType = data[2],
        ObjectiveState = data[3]
    }
end

---@class GetObjectivePinInfoPack
---@field PinType MapDisplayPinType
---@field CurrentNormalizedX number
---@field CurrentNormalizedY number
---@field ContinuousUpdate boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetObjectivePinInfoPack # Packed output from *GetObjectivePinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectivePinInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetObjectivePinInfo(keepId, objectiveId, battlegroundContext)}
    return {
        PinType = data[1],
        CurrentNormalizedX = data[2],
        CurrentNormalizedY = data[3],
        ContinuousUpdate = data[4]
    }
end

---@class GetObjectiveReturnPinInfoPack
---@field PinType MapDisplayPinType
---@field ReturnNormalizedX number
---@field ReturnNormalizedY number
---@field ContinuousUpdate boolean # esoui type: `bool`

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetObjectiveReturnPinInfoPack # Packed output from *GetObjectiveReturnPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectiveReturnPinInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetObjectiveReturnPinInfo(keepId, objectiveId, battlegroundContext)}
    return {
        PinType = data[1],
        ReturnNormalizedX = data[2],
        ReturnNormalizedY = data[3],
        ContinuousUpdate = data[4]
    }
end

---@class GetObjectiveSpawnPinInfoPack
---@field PinType MapDisplayPinType
---@field SpawnNormalizedX number
---@field SpawnNormalizedY number

---@param keepId number # esoui type: `integer`
---@param objectiveId number # esoui type: `integer`
---@param battlegroundContext BattlegroundQueryContextType
---@return GetObjectiveSpawnPinInfoPack # Packed output from *GetObjectiveSpawnPinInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetObjectiveSpawnPinInfo(keepId, objectiveId, battlegroundContext)
    local data = {GetObjectiveSpawnPinInfo(keepId, objectiveId, battlegroundContext)}
    return {
        PinType = data[1],
        SpawnNormalizedX = data[2],
        SpawnNormalizedY = data[3]
    }
end

---@class GetOfferedQuestInfoPack
---@field Dialogue string
---@field Response string

---@return GetOfferedQuestInfoPack # Packed output from *GetOfferedQuestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetOfferedQuestInfo()
    local data = {GetOfferedQuestInfo()}
    return {
        Dialogue = data[1],
        Response = data[2]
    }
end

---@class GetOfferedQuestShareInfoPack
---@field QuestName string
---@field CharacterName string
---@field MillisecondsSinceRequest number # esoui type: `integer`
---@field DisplayName string

---@param questId number # esoui type: `integer`
---@return GetOfferedQuestShareInfoPack # Packed output from *GetOfferedQuestShareInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetOfferedQuestShareInfo(questId)
    local data = {GetOfferedQuestShareInfo(questId)}
    return {
        QuestName = data[1],
        CharacterName = data[2],
        MillisecondsSinceRequest = data[3],
        DisplayName = data[4]
    }
end

---@class GetOutfitSlotInfoPack
---@field CollectibleId number # esoui type: `integer`
---@field ItemMaterialIndex? number # esoui type: `luaindex:nilable`
---@field PrimaryDyeId number # esoui type: `integer`
---@field SecondaryDyeId number # esoui type: `integer`
---@field AccentDyeId number # esoui type: `integer`

---@param actorCategory GameplayActorCategory
---@param outfitIndex number # esoui type: `luaindex`
---@param outfitSlot OutfitSlot
---@return GetOutfitSlotInfoPack # Packed output from *GetOutfitSlotInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetOutfitSlotInfo(actorCategory, outfitIndex, outfitSlot)
    local data = {GetOutfitSlotInfo(actorCategory, outfitIndex, outfitSlot)}
    return {
        CollectibleId = data[1],
        ItemMaterialIndex = data[2],
        PrimaryDyeId = data[3],
        SecondaryDyeId = data[4],
        AccentDyeId = data[5]
    }
end

---@class GetOutfitSlotInfoForOutfitSlotInPreviewCollectionPack
---@field CollectibleDefId number # esoui type: `integer`
---@field ItemMaterialIndex? number # esoui type: `luaindex:nilable`
---@field PrimaryDyeDefId number # esoui type: `integer`
---@field SecondaryDyeDefId number # esoui type: `integer`
---@field AccentDyeDefId number # esoui type: `integer`

---@param outfitSlot OutfitSlot
---@return GetOutfitSlotInfoForOutfitSlotInPreviewCollectionPack # Packed output from *GetOutfitSlotInfoForOutfitSlotInPreviewCollection*
function EsoAddonFramework_Framework_Eso_Pack.GetOutfitSlotInfoForOutfitSlotInPreviewCollection(outfitSlot)
    local data = {GetOutfitSlotInfoForOutfitSlotInPreviewCollection(outfitSlot)}
    return {
        CollectibleDefId = data[1],
        ItemMaterialIndex = data[2],
        PrimaryDyeDefId = data[3],
        SecondaryDyeDefId = data[4],
        AccentDyeDefId = data[5]
    }
end

---@class GetOutfitSlotsForCurrentlyHeldWeaponsPack
---@field MainHandOutfitSlot OutfitSlot
---@field OffHandOutfitSlot OutfitSlot

---@param actorCategory GameplayActorCategory
---@return GetOutfitSlotsForCurrentlyHeldWeaponsPack # Packed output from *GetOutfitSlotsForCurrentlyHeldWeapons*
function EsoAddonFramework_Framework_Eso_Pack.GetOutfitSlotsForCurrentlyHeldWeapons(actorCategory)
    local data = {GetOutfitSlotsForCurrentlyHeldWeapons(actorCategory)}
    return {
        MainHandOutfitSlot = data[1],
        OffHandOutfitSlot = data[2]
    }
end

---@class GetOutfitSlotsForEquippedWeaponsPack
---@field MainHandOutfitSlot OutfitSlot
---@field OffHandOutfitSlot OutfitSlot
---@field BackupMainHandOutfitSlot OutfitSlot
---@field BackupOffHandOutfitSlot OutfitSlot

---@param actorCategory GameplayActorCategory
---@return GetOutfitSlotsForEquippedWeaponsPack # Packed output from *GetOutfitSlotsForEquippedWeapons*
function EsoAddonFramework_Framework_Eso_Pack.GetOutfitSlotsForEquippedWeapons(actorCategory)
    local data = {GetOutfitSlotsForEquippedWeapons(actorCategory)}
    return {
        MainHandOutfitSlot = data[1],
        OffHandOutfitSlot = data[2],
        BackupMainHandOutfitSlot = data[3],
        BackupOffHandOutfitSlot = data[4]
    }
end

---@class GetOutfitStyleCostPack
---@field GoldCost number # esoui type: `integer`
---@field IsFree boolean # esoui type: `bool`

---@param outfitStyleId number # esoui type: `integer`
---@return GetOutfitStyleCostPack # Packed output from *GetOutfitStyleCost*
function EsoAddonFramework_Framework_Eso_Pack.GetOutfitStyleCost(outfitStyleId)
    local data = {GetOutfitStyleCost(outfitStyleId)}
    return {
        GoldCost = data[1],
        IsFree = data[2]
    }
end

---@class GetOutgoingFriendRequestInfoPack
---@field DisplayName string
---@field SecsSinceRequest number # esoui type: `integer`
---@field Note string

---@param index number # esoui type: `luaindex`
---@return GetOutgoingFriendRequestInfoPack # Packed output from *GetOutgoingFriendRequestInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetOutgoingFriendRequestInfo(index)
    local data = {GetOutgoingFriendRequestInfo(index)}
    return {
        DisplayName = data[1],
        SecsSinceRequest = data[2],
        Note = data[3]
    }
end

---@class GetOverscanOffsetsPack
---@field OffsetX number # esoui type: `integer`
---@field OffsetY number # esoui type: `integer`
---@field OffsetWidth number # esoui type: `integer`
---@field OffsetHeight number # esoui type: `integer`

---@return GetOverscanOffsetsPack # Packed output from *GetOverscanOffsets*
function EsoAddonFramework_Framework_Eso_Pack.GetOverscanOffsets()
    local data = {GetOverscanOffsets()}
    return {
        OffsetX = data[1],
        OffsetY = data[2],
        OffsetWidth = data[3],
        OffsetHeight = data[4]
    }
end

---@class GetPendingHeraldryIndicesPack
---@field BackgroundCategoryIndex number # esoui type: `luaindex`
---@field BackgroundStyleIndex number # esoui type: `luaindex`
---@field BackgroundPrimaryColorIndex number # esoui type: `luaindex`
---@field BackgroundSecondaryColorIndex number # esoui type: `luaindex`
---@field CrestCategoryIndex number # esoui type: `luaindex`
---@field CrestStyleIndex number # esoui type: `luaindex`
---@field CrestColorIndex number # esoui type: `luaindex`

---@return GetPendingHeraldryIndicesPack # Packed output from *GetPendingHeraldryIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetPendingHeraldryIndices()
    local data = {GetPendingHeraldryIndices()}
    return {
        BackgroundCategoryIndex = data[1],
        BackgroundStyleIndex = data[2],
        BackgroundPrimaryColorIndex = data[3],
        BackgroundSecondaryColorIndex = data[4],
        CrestCategoryIndex = data[5],
        CrestStyleIndex = data[6],
        CrestColorIndex = data[7]
    }
end

---@class GetPendingItemPostPack
---@field Bag Bag
---@field Slot number # esoui type: `integer`
---@field Quantity number # esoui type: `integer`

---@return GetPendingItemPostPack # Packed output from *GetPendingItemPost*
function EsoAddonFramework_Framework_Eso_Pack.GetPendingItemPost()
    local data = {GetPendingItemPost()}
    return {
        Bag = data[1],
        Slot = data[2],
        Quantity = data[3]
    }
end

---@class GetPendingResurrectInfoPack
---@field CasterName string
---@field TimeLeft number # esoui type: `integer`
---@field CasterDisplayName string

---@return GetPendingResurrectInfoPack # Packed output from *GetPendingResurrectInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPendingResurrectInfo()
    local data = {GetPendingResurrectInfo()}
    return {
        CasterName = data[1],
        TimeLeft = data[2],
        CasterDisplayName = data[3]
    }
end

---@class GetPendingSlotDyesPack
---@field PrimaryDyeId number # esoui type: `integer`
---@field SecondaryDyeId number # esoui type: `integer`
---@field AccentDyeId number # esoui type: `integer`

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlotType number # esoui type: `integer`
---@return GetPendingSlotDyesPack # Packed output from *GetPendingSlotDyes*
function EsoAddonFramework_Framework_Eso_Pack.GetPendingSlotDyes(restyleMode, restyleSetIndex, restyleSlotType)
    local data = {GetPendingSlotDyes(restyleMode, restyleSetIndex, restyleSlotType)}
    return {
        PrimaryDyeId = data[1],
        SecondaryDyeId = data[2],
        AccentDyeId = data[3]
    }
end

---@class GetPlacedFurnitureLinkPack
---@field ItemLink string
---@field CollectibleLink string

---@param placedFurnitureId number # esoui type: `id64`
---@param linkStyle LinkStyle
---@return GetPlacedFurnitureLinkPack # Packed output from *GetPlacedFurnitureLink*
function EsoAddonFramework_Framework_Eso_Pack.GetPlacedFurnitureLink(placedFurnitureId, linkStyle)
    local data = {GetPlacedFurnitureLink(placedFurnitureId, linkStyle)}
    return {
        ItemLink = data[1],
        CollectibleLink = data[2]
    }
end

---@class GetPlacedHousingFurnitureInfoPack
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field FurnitureDataId number # esoui type: `integer`

---@param furnitureId number # esoui type: `id64`
---@return GetPlacedHousingFurnitureInfoPack # Packed output from *GetPlacedHousingFurnitureInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlacedHousingFurnitureInfo(furnitureId)
    local data = {GetPlacedHousingFurnitureInfo(furnitureId)}
    return {
        ItemName = data[1],
        Icon = data[2],
        FurnitureDataId = data[3]
    }
end

---@class GetPlayerApplicationNotificationInfoPack
---@field DeclineReason string
---@field GuildName string
---@field Alliance Alliance
---@field ApplicationStatus GuildApplicationStatus

---@param index number # esoui type: `luaindex`
---@return GetPlayerApplicationNotificationInfoPack # Packed output from *GetPlayerApplicationNotificationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerApplicationNotificationInfo(index)
    local data = {GetPlayerApplicationNotificationInfo(index)}
    return {
        DeclineReason = data[1],
        GuildName = data[2],
        Alliance = data[3],
        ApplicationStatus = data[4]
    }
end

---@class GetPlayerCampaignRewardTierInfoPack
---@field EarnedTier number # esoui type: `integer`
---@field NextTierProgress number # esoui type: `integer`
---@field NextTierTotal number # esoui type: `integer`

---@param campaignId number # esoui type: `integer`
---@return GetPlayerCampaignRewardTierInfoPack # Packed output from *GetPlayerCampaignRewardTierInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerCampaignRewardTierInfo(campaignId)
    local data = {GetPlayerCampaignRewardTierInfo(campaignId)}
    return {
        EarnedTier = data[1],
        NextTierProgress = data[2],
        NextTierTotal = data[3]
    }
end

---@class GetPlayerInfamyDataPack
---@field Heat number # esoui type: `integer`
---@field Bounty number # esoui type: `integer`

---@return GetPlayerInfamyDataPack # Packed output from *GetPlayerInfamyData*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerInfamyData()
    local data = {GetPlayerInfamyData()}
    return {
        Heat = data[1],
        Bounty = data[2]
    }
end

---@class GetPlayerRaidOfTheWeekParticipationInfoPack
---@field IsParticipating boolean # esoui type: `bool`
---@field IsCredited boolean # esoui type: `bool`

---@param raidCategory RaidCategory
---@return GetPlayerRaidOfTheWeekParticipationInfoPack # Packed output from *GetPlayerRaidOfTheWeekParticipationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerRaidOfTheWeekParticipationInfo(raidCategory)
    local data = {GetPlayerRaidOfTheWeekParticipationInfo(raidCategory)}
    return {
        IsParticipating = data[1],
        IsCredited = data[2]
    }
end

---@class GetPlayerRaidOfTheWeekProgressInfoPack
---@field InProgress boolean # esoui type: `bool`
---@field Complete boolean # esoui type: `bool`

---@param raidCategory RaidCategory
---@return GetPlayerRaidOfTheWeekProgressInfoPack # Packed output from *GetPlayerRaidOfTheWeekProgressInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerRaidOfTheWeekProgressInfo(raidCategory)
    local data = {GetPlayerRaidOfTheWeekProgressInfo(raidCategory)}
    return {
        InProgress = data[1],
        Complete = data[2]
    }
end

---@class GetPlayerRaidParticipationInfoPack
---@field IsParticipating boolean # esoui type: `bool`
---@field IsCredited boolean # esoui type: `bool`

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return GetPlayerRaidParticipationInfoPack # Packed output from *GetPlayerRaidParticipationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerRaidParticipationInfo(raidCategory, raidIndex)
    local data = {GetPlayerRaidParticipationInfo(raidCategory, raidIndex)}
    return {
        IsParticipating = data[1],
        IsCredited = data[2]
    }
end

---@class GetPlayerRaidProgressInfoPack
---@field InProgress boolean # esoui type: `bool`
---@field Complete boolean # esoui type: `bool`

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return GetPlayerRaidProgressInfoPack # Packed output from *GetPlayerRaidProgressInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerRaidProgressInfo(raidCategory, raidIndex)
    local data = {GetPlayerRaidProgressInfo(raidCategory, raidIndex)}
    return {
        InProgress = data[1],
        Complete = data[2]
    }
end

---@class GetPlayerWorldPositionInHousePack
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`
---@field RotationRadians number

---@return GetPlayerWorldPositionInHousePack # Packed output from *GetPlayerWorldPositionInHouse*
function EsoAddonFramework_Framework_Eso_Pack.GetPlayerWorldPositionInHouse()
    local data = {GetPlayerWorldPositionInHouse()}
    return {
        WorldX = data[1],
        WorldY = data[2],
        WorldZ = data[3],
        RotationRadians = data[4]
    }
end

---@class GetPledgeOfMaraOfferInfoPack
---@field TargetCharacterName string
---@field MillisecondsSinceRequest number # esoui type: `integer`
---@field IsSender boolean # esoui type: `bool`
---@field TargetDisplayName string

---@return GetPledgeOfMaraOfferInfoPack # Packed output from *GetPledgeOfMaraOfferInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPledgeOfMaraOfferInfo()
    local data = {GetPledgeOfMaraOfferInfo()}
    return {
        TargetCharacterName = data[1],
        MillisecondsSinceRequest = data[2],
        IsSender = data[3],
        TargetDisplayName = data[4]
    }
end

---@class GetPOIIndicesPack
---@field ZoneIndex number # esoui type: `luaindex`
---@field PoiIndex number # esoui type: `luaindex`

---@param poiId number # esoui type: `integer`
---@return GetPOIIndicesPack # Packed output from *GetPOIIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetPOIIndices(poiId)
    local data = {GetPOIIndices(poiId)}
    return {
        ZoneIndex = data[1],
        PoiIndex = data[2]
    }
end

---@class GetPOIInfoPack
---@field ObjectiveName string
---@field ObjectiveLevel number # esoui type: `integer`
---@field StartDescription string
---@field FinishedDescription string

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return GetPOIInfoPack # Packed output from *GetPOIInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPOIInfo(zoneIndex, poiIndex)
    local data = {GetPOIInfo(zoneIndex, poiIndex)}
    return {
        ObjectiveName = data[1],
        ObjectiveLevel = data[2],
        StartDescription = data[3],
        FinishedDescription = data[4]
    }
end

---@class GetPOIMapInfoPack
---@field NormalizedX number
---@field NormalizedZ number
---@field PoiPinType MapDisplayPinType
---@field Icon string # esoui type: `textureName`
---@field IsShownInCurrentMap boolean # esoui type: `bool`
---@field LinkedCollectibleIsLocked boolean # esoui type: `bool`
---@field IsDiscovered boolean # esoui type: `bool`
---@field IsNearby boolean # esoui type: `bool`

---@param zoneIndex number # esoui type: `luaindex`
---@param poiIndex number # esoui type: `luaindex`
---@return GetPOIMapInfoPack # Packed output from *GetPOIMapInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetPOIMapInfo(zoneIndex, poiIndex)
    local data = {GetPOIMapInfo(zoneIndex, poiIndex)}
    return {
        NormalizedX = data[1],
        NormalizedZ = data[2],
        PoiPinType = data[3],
        Icon = data[4],
        IsShownInCurrentMap = data[5],
        LinkedCollectibleIsLocked = data[6],
        IsDiscovered = data[7],
        IsNearby = data[8]
    }
end

---@class GetPOIPinIconPack
---@field Icon string # esoui type: `textureName`
---@field PoiPinType MapDisplayPinType

---@param poiId number # esoui type: `integer`
---@param checkNearby boolean # esoui type: `bool`
---@return GetPOIPinIconPack # Packed output from *GetPOIPinIcon*
function EsoAddonFramework_Framework_Eso_Pack.GetPOIPinIcon(poiId, checkNearby)
    local data = {GetPOIPinIcon(poiId, checkNearby)}
    return {
        Icon = data[1],
        PoiPinType = data[2]
    }
end

---@class GetProgressionSkillMorphSlotRankXPExtentsPack
---@field StartXP number # esoui type: `integer`
---@field EndXP number # esoui type: `integer`

---@param progressionId number # esoui type: `integer`
---@param morphSlot MorphSlot
---@param rank number # esoui type: `integer`
---@return GetProgressionSkillMorphSlotRankXPExtentsPack # Packed output from *GetProgressionSkillMorphSlotRankXPExtents*
function EsoAddonFramework_Framework_Eso_Pack.GetProgressionSkillMorphSlotRankXPExtents(progressionId, morphSlot, rank)
    local data = {GetProgressionSkillMorphSlotRankXPExtents(progressionId, morphSlot, rank)}
    return {
        StartXP = data[1],
        EndXP = data[2]
    }
end

---@class GetQuestConditionItemInfoPack
---@field ItemId number # esoui type: `integer`
---@field MaterialItemId number # esoui type: `integer`
---@field CraftingType TradeskillType
---@field ItemQuality ItemQuality

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return GetQuestConditionItemInfoPack # Packed output from *GetQuestConditionItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestConditionItemInfo(journalQuestIndex, stepIndex, conditionIndex)
    local data = {GetQuestConditionItemInfo(journalQuestIndex, stepIndex, conditionIndex)}
    return {
        ItemId = data[1],
        MaterialItemId = data[2],
        CraftingType = data[3],
        ItemQuality = data[4]
    }
end

---@class GetQuestConditionMasterWritInfoPack
---@field ItemId? number # esoui type: `integer:nilable`
---@field MaterialItemId? number # esoui type: `integer:nilable`
---@field CraftingType TradeskillType
---@field ItemQuality ItemQuality
---@field ItemTemplateId? number # esoui type: `integer:nilable`
---@field ItemSetId? number # esoui type: `integer:nilable`
---@field ItemTraitType ItemTraitType
---@field ItemStyleId? number # esoui type: `integer:nilable`
---@field EncodedAlchemyTraits? number # esoui type: `integer:nilable`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return GetQuestConditionMasterWritInfoPack # Packed output from *GetQuestConditionMasterWritInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestConditionMasterWritInfo(journalQuestIndex, stepIndex, conditionIndex)
    local data = {GetQuestConditionMasterWritInfo(journalQuestIndex, stepIndex, conditionIndex)}
    return {
        ItemId = data[1],
        MaterialItemId = data[2],
        CraftingType = data[3],
        ItemQuality = data[4],
        ItemTemplateId = data[5],
        ItemSetId = data[6],
        ItemTraitType = data[7],
        ItemStyleId = data[8],
        EncodedAlchemyTraits = data[9]
    }
end

---@class GetQuestItemCooldownInfoPack
---@field Remain number # esoui type: `integer`
---@field Duration number # esoui type: `integer`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return GetQuestItemCooldownInfoPack # Packed output from *GetQuestItemCooldownInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestItemCooldownInfo(journalQuestIndex, stepIndex, conditionIndex)
    local data = {GetQuestItemCooldownInfo(journalQuestIndex, stepIndex, conditionIndex)}
    return {
        Remain = data[1],
        Duration = data[2]
    }
end

---@class GetQuestItemInfoPack
---@field IconFilename string # esoui type: `textureName`
---@field StackCount number # esoui type: `integer`
---@field Name string
---@field QuestItemId number # esoui type: `integer`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param stepIndex number # esoui type: `luaindex`
---@param conditionIndex number # esoui type: `luaindex`
---@return GetQuestItemInfoPack # Packed output from *GetQuestItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestItemInfo(journalQuestIndex, stepIndex, conditionIndex)
    local data = {GetQuestItemInfo(journalQuestIndex, stepIndex, conditionIndex)}
    return {
        IconFilename = data[1],
        StackCount = data[2],
        Name = data[3],
        QuestItemId = data[4]
    }
end

---@class GetQuestToolCooldownInfoPack
---@field Remain number # esoui type: `integer`
---@field Duration number # esoui type: `integer`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return GetQuestToolCooldownInfoPack # Packed output from *GetQuestToolCooldownInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestToolCooldownInfo(journalQuestIndex, toolIndex)
    local data = {GetQuestToolCooldownInfo(journalQuestIndex, toolIndex)}
    return {
        Remain = data[1],
        Duration = data[2]
    }
end

---@class GetQuestToolInfoPack
---@field IconFilename string # esoui type: `textureName`
---@field StackCount number # esoui type: `integer`
---@field IsUsable boolean # esoui type: `bool`
---@field Name string
---@field QuestItemId number # esoui type: `integer`

---@param journalQuestIndex number # esoui type: `luaindex`
---@param toolIndex number # esoui type: `luaindex`
---@return GetQuestToolInfoPack # Packed output from *GetQuestToolInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQuestToolInfo(journalQuestIndex, toolIndex)
    local data = {GetQuestToolInfo(journalQuestIndex, toolIndex)}
    return {
        IconFilename = data[1],
        StackCount = data[2],
        IsUsable = data[3],
        Name = data[4],
        QuestItemId = data[5]
    }
end

---@class GetQueuedItemAttachmentInfoPack
---@field BagId Bag
---@field SlotIndex number # esoui type: `integer`
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`

---@param attachmentSlot number # esoui type: `luaindex`
---@return GetQueuedItemAttachmentInfoPack # Packed output from *GetQueuedItemAttachmentInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetQueuedItemAttachmentInfo(attachmentSlot)
    local data = {GetQueuedItemAttachmentInfo(attachmentSlot)}
    return {
        BagId = data[1],
        SlotIndex = data[2],
        Icon = data[3],
        Stack = data[4]
    }
end

---@class GetRadarCountUIPositionPack
---@field X number
---@field Y number

---@return GetRadarCountUIPositionPack # Packed output from *GetRadarCountUIPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetRadarCountUIPosition()
    local data = {GetRadarCountUIPosition()}
    return {
        X = data[1],
        Y = data[2]
    }
end

---@class GetRaidLeaderboardInfoPack
---@field Name string
---@field RaidId number # esoui type: `integer`

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return GetRaidLeaderboardInfoPack # Packed output from *GetRaidLeaderboardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidLeaderboardInfo(raidCategory, raidIndex)
    local data = {GetRaidLeaderboardInfo(raidCategory, raidIndex)}
    return {
        Name = data[1],
        RaidId = data[2]
    }
end

---@class GetRaidLeaderboardLocalPlayerInfoPack
---@field Rank number # esoui type: `integer`
---@field BestScore number # esoui type: `integer`

---@param raidCategory RaidCategory
---@param raidIndex number # esoui type: `luaindex`
---@return GetRaidLeaderboardLocalPlayerInfoPack # Packed output from *GetRaidLeaderboardLocalPlayerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidLeaderboardLocalPlayerInfo(raidCategory, raidIndex)
    local data = {GetRaidLeaderboardLocalPlayerInfo(raidCategory, raidIndex)}
    return {
        Rank = data[1],
        BestScore = data[2]
    }
end

---@class GetRaidOfTheWeekLeaderboardInfoPack
---@field Name string
---@field RaidId number # esoui type: `integer`

---@param raidCategory RaidCategory
---@return GetRaidOfTheWeekLeaderboardInfoPack # Packed output from *GetRaidOfTheWeekLeaderboardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidOfTheWeekLeaderboardInfo(raidCategory)
    local data = {GetRaidOfTheWeekLeaderboardInfo(raidCategory)}
    return {
        Name = data[1],
        RaidId = data[2]
    }
end

---@class GetRaidOfTheWeekLeaderboardLocalPlayerInfoPack
---@field Rank number # esoui type: `integer`
---@field BestScore number # esoui type: `integer`

---@param raidCategory RaidCategory
---@return GetRaidOfTheWeekLeaderboardLocalPlayerInfoPack # Packed output from *GetRaidOfTheWeekLeaderboardLocalPlayerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidOfTheWeekLeaderboardLocalPlayerInfo(raidCategory)
    local data = {GetRaidOfTheWeekLeaderboardLocalPlayerInfo(raidCategory)}
    return {
        Rank = data[1],
        BestScore = data[2]
    }
end

---@class GetRaidOfTheWeekTimesPack
---@field SecondsUntilEnd number # esoui type: `integer`
---@field SecondsUntilNextStart number # esoui type: `integer`

---@return GetRaidOfTheWeekTimesPack # Packed output from *GetRaidOfTheWeekTimes*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidOfTheWeekTimes()
    local data = {GetRaidOfTheWeekTimes()}
    return {
        SecondsUntilEnd = data[1],
        SecondsUntilNextStart = data[2]
    }
end

---@class GetRaidScoreNotificationInfoPack
---@field RaidId number # esoui type: `integer`
---@field RaidScore number # esoui type: `integer`
---@field MillisecondsSinceRequest number # esoui type: `integer`

---@param notificationId number # esoui type: `integer`
---@return GetRaidScoreNotificationInfoPack # Packed output from *GetRaidScoreNotificationInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidScoreNotificationInfo(notificationId)
    local data = {GetRaidScoreNotificationInfo(notificationId)}
    return {
        RaidId = data[1],
        RaidScore = data[2],
        MillisecondsSinceRequest = data[3]
    }
end

---@class GetRaidScoreNotificationMemberInfoPack
---@field DisplayName string
---@field CharacterName string
---@field IsFriend boolean # esoui type: `bool`
---@field IsGuildMember boolean # esoui type: `bool`
---@field IsPlayer boolean # esoui type: `bool`

---@param notificationId number # esoui type: `integer`
---@param memberIndex number # esoui type: `luaindex`
---@return GetRaidScoreNotificationMemberInfoPack # Packed output from *GetRaidScoreNotificationMemberInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRaidScoreNotificationMemberInfo(notificationId, memberIndex)
    local data = {GetRaidScoreNotificationMemberInfo(notificationId, memberIndex)}
    return {
        DisplayName = data[1],
        CharacterName = data[2],
        IsFriend = data[3],
        IsGuildMember = data[4],
        IsPlayer = data[5]
    }
end

---@class GetRawNormalizedWorldPositionPack
---@field NormalizedX number
---@field NormalizedY number

---@param zoneId number # esoui type: `integer`
---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return GetRawNormalizedWorldPositionPack # Packed output from *GetRawNormalizedWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetRawNormalizedWorldPosition(zoneId, worldX, worldY, worldZ)
    local data = {GetRawNormalizedWorldPosition(zoneId, worldX, worldY, worldZ)}
    return {
        NormalizedX = data[1],
        NormalizedY = data[2]
    }
end

---@class GetRearchLineInfoFromRetraitItemPack
---@field CraftingType TradeskillType
---@field ResearchLineName string

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetRearchLineInfoFromRetraitItemPack # Packed output from *GetRearchLineInfoFromRetraitItem*
function EsoAddonFramework_Framework_Eso_Pack.GetRearchLineInfoFromRetraitItem(bagId, slotIndex)
    local data = {GetRearchLineInfoFromRetraitItem(bagId, slotIndex)}
    return {
        CraftingType = data[1],
        ResearchLineName = data[2]
    }
end

---@class GetRecallCooldownPack
---@field Remain number # esoui type: `integer`
---@field Duration number # esoui type: `integer`

---@return GetRecallCooldownPack # Packed output from *GetRecallCooldown*
function EsoAddonFramework_Framework_Eso_Pack.GetRecallCooldown()
    local data = {GetRecallCooldown()}
    return {
        Remain = data[1],
        Duration = data[2]
    }
end

---@class GetRecipeInfoPack
---@field Known boolean # esoui type: `bool`
---@field Name string
---@field NumIngredients number # esoui type: `integer`
---@field ProvisionerLevelReq number # esoui type: `integer`
---@field QualityReq number # esoui type: `integer`
---@field SpecialIngredientType ProvisionerSpecialIngredientType
---@field RequiredCraftingStationType TradeskillType
---@field ResultItemId number # esoui type: `integer`

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return GetRecipeInfoPack # Packed output from *GetRecipeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeInfo(recipeListIndex, recipeIndex)
    local data = {GetRecipeInfo(recipeListIndex, recipeIndex)}
    return {
        Known = data[1],
        Name = data[2],
        NumIngredients = data[3],
        ProvisionerLevelReq = data[4],
        QualityReq = data[5],
        SpecialIngredientType = data[6],
        RequiredCraftingStationType = data[7],
        ResultItemId = data[8]
    }
end

---@class GetRecipeInfoFromItemIdPack
---@field CraftingStationType TradeskillType
---@field RecipeListIndex? number # esoui type: `luaindex:nilable`
---@field RecipeIndex? number # esoui type: `luaindex:nilable`

---@param itemId number # esoui type: `integer`
---@return GetRecipeInfoFromItemIdPack # Packed output from *GetRecipeInfoFromItemId*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeInfoFromItemId(itemId)
    local data = {GetRecipeInfoFromItemId(itemId)}
    return {
        CraftingStationType = data[1],
        RecipeListIndex = data[2],
        RecipeIndex = data[3]
    }
end

---@class GetRecipeIngredientItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field RequiredQuantity number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param ingredientIndex number # esoui type: `luaindex`
---@return GetRecipeIngredientItemInfoPack # Packed output from *GetRecipeIngredientItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeIngredientItemInfo(recipeListIndex, recipeIndex, ingredientIndex)
    local data = {GetRecipeIngredientItemInfo(recipeListIndex, recipeIndex, ingredientIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        RequiredQuantity = data[3],
        SellPrice = data[4],
        DisplayQuality = data[5]
    }
end

---@class GetRecipeListInfoPack
---@field Name string
---@field NumRecipes number # esoui type: `integer`
---@field UpIcon string # esoui type: `textureName`
---@field DownIcon string # esoui type: `textureName`
---@field OverIcon string # esoui type: `textureName`
---@field DeprecatedReturn string # esoui type: `textureName`
---@field CreateSound string

---@param recipeListIndex number # esoui type: `luaindex`
---@return GetRecipeListInfoPack # Packed output from *GetRecipeListInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeListInfo(recipeListIndex)
    local data = {GetRecipeListInfo(recipeListIndex)}
    return {
        Name = data[1],
        NumRecipes = data[2],
        UpIcon = data[3],
        DownIcon = data[4],
        OverIcon = data[5],
        DeprecatedReturn = data[6],
        CreateSound = data[7]
    }
end

---@class GetRecipeResultItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@return GetRecipeResultItemInfoPack # Packed output from *GetRecipeResultItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeResultItemInfo(recipeListIndex, recipeIndex)
    local data = {GetRecipeResultItemInfo(recipeListIndex, recipeIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        DisplayQuality = data[5]
    }
end

---@class GetRecipeTradeskillRequirementPack
---@field Tradeskill TradeskillType
---@field LevelRequirement number # esoui type: `integer`

---@param recipeListIndex number # esoui type: `luaindex`
---@param recipeIndex number # esoui type: `luaindex`
---@param tradeskillIndex number # esoui type: `luaindex`
---@return GetRecipeTradeskillRequirementPack # Packed output from *GetRecipeTradeskillRequirement*
function EsoAddonFramework_Framework_Eso_Pack.GetRecipeTradeskillRequirement(recipeListIndex, recipeIndex, tradeskillIndex)
    local data = {GetRecipeTradeskillRequirement(recipeListIndex, recipeIndex, tradeskillIndex)}
    return {
        Tradeskill = data[1],
        LevelRequirement = data[2]
    }
end

---@class GetRestyleSlotCurrentDyesPack
---@field PrimaryDyeId number # esoui type: `integer`
---@field SecondaryDyeId number # esoui type: `integer`
---@field AccentDyeId number # esoui type: `integer`

---@param restyleMode RestyleMode
---@param restyleSetIndex number # esoui type: `luaindex`
---@param restyleSlot number # esoui type: `integer`
---@return GetRestyleSlotCurrentDyesPack # Packed output from *GetRestyleSlotCurrentDyes*
function EsoAddonFramework_Framework_Eso_Pack.GetRestyleSlotCurrentDyes(restyleMode, restyleSetIndex, restyleSlot)
    local data = {GetRestyleSlotCurrentDyes(restyleMode, restyleSetIndex, restyleSlot)}
    return {
        PrimaryDyeId = data[1],
        SecondaryDyeId = data[2],
        AccentDyeId = data[3]
    }
end

---@class GetRewardInfoForLevelPack
---@field RewardId number # esoui type: `integer`
---@field Quantity number # esoui type: `integer`

---@param level number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetRewardInfoForLevelPack # Packed output from *GetRewardInfoForLevel*
function EsoAddonFramework_Framework_Eso_Pack.GetRewardInfoForLevel(level, index)
    local data = {GetRewardInfoForLevel(level, index)}
    return {
        RewardId = data[1],
        Quantity = data[2]
    }
end

---@class GetRewardListEntryInfoPack
---@field RewardDefId number # esoui type: `integer`
---@field RewardType RewardEntryType
---@field Quantity number # esoui type: `integer`

---@param rewardListId number # esoui type: `integer`
---@param listIndex number # esoui type: `luaindex`
---@return GetRewardListEntryInfoPack # Packed output from *GetRewardListEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRewardListEntryInfo(rewardListId, listIndex)
    local data = {GetRewardListEntryInfo(rewardListId, listIndex)}
    return {
        RewardDefId = data[1],
        RewardType = data[2],
        Quantity = data[3]
    }
end

---@class GetRidingStatsPack
---@field InventoryBonus number # esoui type: `integer`
---@field MaxInventoryBonus number # esoui type: `integer`
---@field StaminaBonus number # esoui type: `integer`
---@field MaxStaminaBonus number # esoui type: `integer`
---@field SpeedBonus number # esoui type: `integer`
---@field MaxSpeedBonus number # esoui type: `integer`

---@return GetRidingStatsPack # Packed output from *GetRidingStats*
function EsoAddonFramework_Framework_Eso_Pack.GetRidingStats()
    local data = {GetRidingStats()}
    return {
        InventoryBonus = data[1],
        MaxInventoryBonus = data[2],
        StaminaBonus = data[3],
        MaxStaminaBonus = data[4],
        SpeedBonus = data[5],
        MaxSpeedBonus = data[6]
    }
end

---@class GetRunesForItemIdIfKnownPack
---@field PotencyRuneId? number # esoui type: `integer:nilable`
---@field EssenceRuneId? number # esoui type: `integer:nilable`
---@field AspectRuneId? number # esoui type: `integer:nilable`

---@param itemId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param itemQuality ItemQuality
---@return GetRunesForItemIdIfKnownPack # Packed output from *GetRunesForItemIdIfKnown*
function EsoAddonFramework_Framework_Eso_Pack.GetRunesForItemIdIfKnown(itemId, materialItemId, itemQuality)
    local data = {GetRunesForItemIdIfKnown(itemId, materialItemId, itemQuality)}
    return {
        PotencyRuneId = data[1],
        EssenceRuneId = data[2],
        AspectRuneId = data[3]
    }
end

---@class GetRunestoneSoundInfoPack
---@field SoundName string
---@field SoundLength number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetRunestoneSoundInfoPack # Packed output from *GetRunestoneSoundInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetRunestoneSoundInfo(bagId, slotIndex)
    local data = {GetRunestoneSoundInfo(bagId, slotIndex)}
    return {
        SoundName = data[1],
        SoundLength = data[2]
    }
end

---@class GetSavedDyeSetDyesPack
---@field PrimaryDyeId number # esoui type: `integer`
---@field SecondaryDyeId number # esoui type: `integer`
---@field AccentDyeId number # esoui type: `integer`

---@param dyeSetIndex number # esoui type: `luaindex`
---@return GetSavedDyeSetDyesPack # Packed output from *GetSavedDyeSetDyes*
function EsoAddonFramework_Framework_Eso_Pack.GetSavedDyeSetDyes(dyeSetIndex)
    local data = {GetSavedDyeSetDyes(dyeSetIndex)}
    return {
        PrimaryDyeId = data[1],
        SecondaryDyeId = data[2],
        AccentDyeId = data[3]
    }
end

---@class GetScoreboardEntryInfoPack
---@field CharacterName string
---@field DisplayName string
---@field Alliance BattlegroundAlliance
---@field IsLocalPlayer boolean # esoui type: `bool`

---@param slotIndex number # esoui type: `luaindex`
---@return GetScoreboardEntryInfoPack # Packed output from *GetScoreboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetScoreboardEntryInfo(slotIndex)
    local data = {GetScoreboardEntryInfo(slotIndex)}
    return {
        CharacterName = data[1],
        DisplayName = data[2],
        Alliance = data[3],
        IsLocalPlayer = data[4]
    }
end

---@class GetScriptedEventInviteInfoPack
---@field IsValid boolean # esoui type: `bool`
---@field EventName string
---@field InviterName string
---@field QuestName string
---@field TimeRemainingMS number # esoui type: `integer`

---@param eventId number # esoui type: `integer`
---@return GetScriptedEventInviteInfoPack # Packed output from *GetScriptedEventInviteInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetScriptedEventInviteInfo(eventId)
    local data = {GetScriptedEventInviteInfo(eventId)}
    return {
        IsValid = data[1],
        EventName = data[2],
        InviterName = data[3],
        QuestName = data[4],
        TimeRemainingMS = data[5]
    }
end

---@class GetSCTEventVisualInfoHideWhenValueIsZeroPack
---@field HideWhenValueIsZero boolean # esoui type: `bool`
---@field Enabled boolean # esoui type: `bool`

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@return GetSCTEventVisualInfoHideWhenValueIsZeroPack # Packed output from *GetSCTEventVisualInfoHideWhenValueIsZero*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTEventVisualInfoHideWhenValueIsZero(SCTEventVisualInfoId)
    local data = {GetSCTEventVisualInfoHideWhenValueIsZero(SCTEventVisualInfoId)}
    return {
        HideWhenValueIsZero = data[1],
        Enabled = data[2]
    }
end

---@class GetSCTEventVisualInfoTextColorPack
---@field R number
---@field G number
---@field B number
---@field Enabled boolean # esoui type: `bool`

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return GetSCTEventVisualInfoTextColorPack # Packed output from *GetSCTEventVisualInfoTextColor*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTEventVisualInfoTextColor(SCTEventVisualInfoId, textType)
    local data = {GetSCTEventVisualInfoTextColor(SCTEventVisualInfoId, textType)}
    return {
        R = data[1],
        G = data[2],
        B = data[3],
        Enabled = data[4]
    }
end

---@class GetSCTEventVisualInfoTextFontSizesPack
---@field KeyboardFontSize number # esoui type: `integer`
---@field GamepadFontSize number # esoui type: `integer`
---@field Enabled boolean # esoui type: `bool`

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return GetSCTEventVisualInfoTextFontSizesPack # Packed output from *GetSCTEventVisualInfoTextFontSizes*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTEventVisualInfoTextFontSizes(SCTEventVisualInfoId, textType)
    local data = {GetSCTEventVisualInfoTextFontSizes(SCTEventVisualInfoId, textType)}
    return {
        KeyboardFontSize = data[1],
        GamepadFontSize = data[2],
        Enabled = data[3]
    }
end

---@class GetSCTEventVisualInfoTextFormatPack
---@field Format string
---@field Enabled boolean # esoui type: `bool`

---@param SCTEventVisualInfoId number # esoui type: `integer`
---@param textType SCTEventTextType
---@return GetSCTEventVisualInfoTextFormatPack # Packed output from *GetSCTEventVisualInfoTextFormat*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTEventVisualInfoTextFormat(SCTEventVisualInfoId, textType)
    local data = {GetSCTEventVisualInfoTextFormat(SCTEventVisualInfoId, textType)}
    return {
        Format = data[1],
        Enabled = data[2]
    }
end

---@class GetSCTGamepadFontPack
---@field FontName string
---@field FontStyle FontStyle

---@return GetSCTGamepadFontPack # Packed output from *GetSCTGamepadFont*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTGamepadFont()
    local data = {GetSCTGamepadFont()}
    return {
        FontName = data[1],
        FontStyle = data[2]
    }
end

---@class GetSCTKeyboardFontPack
---@field FontName string
---@field FontStyle FontStyle

---@return GetSCTKeyboardFontPack # Packed output from *GetSCTKeyboardFont*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTKeyboardFont()
    local data = {GetSCTKeyboardFont()}
    return {
        FontName = data[1],
        FontStyle = data[2]
    }
end

---@class GetSCTSlotClampingPack
---@field TopEdgeUIOffsetBuffer number
---@field BottomEdgeUIOffsetBuffer number

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotClampingPack # Packed output from *GetSCTSlotClamping*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotClamping(slotIndex)
    local data = {GetSCTSlotClamping(slotIndex)}
    return {
        TopEdgeUIOffsetBuffer = data[1],
        BottomEdgeUIOffsetBuffer = data[2]
    }
end

---@class GetSCTSlotEventControlScalesPack
---@field DefaultScale number
---@field CritScale number

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotEventControlScalesPack # Packed output from *GetSCTSlotEventControlScales*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotEventControlScales(slotIndex)
    local data = {GetSCTSlotEventControlScales(slotIndex)}
    return {
        DefaultScale = data[1],
        CritScale = data[2]
    }
end

---@class GetSCTSlotPositionPack
---@field SCTAnchorType SCTUnitAnchorType
---@field AnchorPoint AnchorPosition
---@field UIOffsetX number
---@field UIOffsetY number
---@field CameraOffsetRight number
---@field CameraOffsetUp number

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotPositionPack # Packed output from *GetSCTSlotPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotPosition(slotIndex)
    local data = {GetSCTSlotPosition(slotIndex)}
    return {
        SCTAnchorType = data[1],
        AnchorPoint = data[2],
        UIOffsetX = data[3],
        UIOffsetY = data[4],
        CameraOffsetRight = data[5],
        CameraOffsetUp = data[6]
    }
end

---@class GetSCTSlotSourceReputationTypesPack
---@field ShowForFriendly boolean # esoui type: `bool`
---@field ShowForNeutral boolean # esoui type: `bool`
---@field ShowForEnemy boolean # esoui type: `bool`

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotSourceReputationTypesPack # Packed output from *GetSCTSlotSourceReputationTypes*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotSourceReputationTypes(slotIndex)
    local data = {GetSCTSlotSourceReputationTypes(slotIndex)}
    return {
        ShowForFriendly = data[1],
        ShowForNeutral = data[2],
        ShowForEnemy = data[3]
    }
end

---@class GetSCTSlotTargetReputationTypesPack
---@field ShowForFriendly boolean # esoui type: `bool`
---@field ShowForNeutral boolean # esoui type: `bool`
---@field ShowForEnemy boolean # esoui type: `bool`

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotTargetReputationTypesPack # Packed output from *GetSCTSlotTargetReputationTypes*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotTargetReputationTypes(slotIndex)
    local data = {GetSCTSlotTargetReputationTypes(slotIndex)}
    return {
        ShowForFriendly = data[1],
        ShowForNeutral = data[2],
        ShowForEnemy = data[3]
    }
end

---@class GetSCTSlotZoomedInPositionPack
---@field ZoomedInCameraDistanceThreshold number
---@field ZoomedInUIOffsetX number
---@field ZoomedInUIOffsetY number

---@param slotIndex number # esoui type: `luaindex`
---@return GetSCTSlotZoomedInPositionPack # Packed output from *GetSCTSlotZoomedInPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetSCTSlotZoomedInPosition(slotIndex)
    local data = {GetSCTSlotZoomedInPosition(slotIndex)}
    return {
        ZoomedInCameraDistanceThreshold = data[1],
        ZoomedInUIOffsetX = data[2],
        ZoomedInUIOffsetY = data[3]
    }
end

---@class GetSelectionCampaignTimesPack
---@field SecondsUntilCampaignStart number # esoui type: `integer`
---@field SecondsUntilCampaignEnd number # esoui type: `integer`

---@param campaignIndex number # esoui type: `luaindex`
---@return GetSelectionCampaignTimesPack # Packed output from *GetSelectionCampaignTimes*
function EsoAddonFramework_Framework_Eso_Pack.GetSelectionCampaignTimes(campaignIndex)
    local data = {GetSelectionCampaignTimes(campaignIndex)}
    return {
        SecondsUntilCampaignStart = data[1],
        SecondsUntilCampaignEnd = data[2]
    }
end

---@class GetSkillAbilityIndicesFromProgressionIndexPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`
---@field SkillIndex number # esoui type: `luaindex`

---@param progressionIndex number # esoui type: `luaindex`
---@return GetSkillAbilityIndicesFromProgressionIndexPack # Packed output from *GetSkillAbilityIndicesFromProgressionIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillAbilityIndicesFromProgressionIndex(progressionIndex)
    local data = {GetSkillAbilityIndicesFromProgressionIndex(progressionIndex)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2],
        SkillIndex = data[3]
    }
end

---@class GetSkillAbilityInfoPack
---@field Name string
---@field Texture string # esoui type: `textureName`
---@field EarnedRank number # esoui type: `luaindex`
---@field Passive boolean # esoui type: `bool`
---@field Ultimate boolean # esoui type: `bool`
---@field Purchased boolean # esoui type: `bool`
---@field ProgressionIndex? number # esoui type: `luaindex:nilable`
---@field Rank number # esoui type: `integer`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return GetSkillAbilityInfoPack # Packed output from *GetSkillAbilityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillAbilityInfo(skillType, skillLineIndex, skillIndex)
    local data = {GetSkillAbilityInfo(skillType, skillLineIndex, skillIndex)}
    return {
        Name = data[1],
        Texture = data[2],
        EarnedRank = data[3],
        Passive = data[4],
        Ultimate = data[5],
        Purchased = data[6],
        ProgressionIndex = data[7],
        Rank = data[8]
    }
end

---@class GetSkillAbilityNextUpgradeInfoPack
---@field Name string
---@field Texture string # esoui type: `textureName`
---@field EarnedRank? number # esoui type: `luaindex:nilable`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return GetSkillAbilityNextUpgradeInfoPack # Packed output from *GetSkillAbilityNextUpgradeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillAbilityNextUpgradeInfo(skillType, skillLineIndex, skillIndex)
    local data = {GetSkillAbilityNextUpgradeInfo(skillType, skillLineIndex, skillIndex)}
    return {
        Name = data[1],
        Texture = data[2],
        EarnedRank = data[3]
    }
end

---@class GetSkillAbilityUpgradeInfoPack
---@field CurrentUpgradeLevel? number # esoui type: `integer:nilable`
---@field MaxUpgradeLevel? number # esoui type: `integer:nilable`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@return GetSkillAbilityUpgradeInfoPack # Packed output from *GetSkillAbilityUpgradeInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillAbilityUpgradeInfo(skillType, skillLineIndex, skillIndex)
    local data = {GetSkillAbilityUpgradeInfo(skillType, skillLineIndex, skillIndex)}
    return {
        CurrentUpgradeLevel = data[1],
        MaxUpgradeLevel = data[2]
    }
end

---@class GetSkillBuildEntryInfoPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`
---@field AbilityIndex number # esoui type: `luaindex`
---@field IsActiveAbility boolean # esoui type: `bool`
---@field MorphChoice number # esoui type: `integer`
---@field Rank number # esoui type: `integer`

---@param skillBuildId number # esoui type: `integer`
---@param skillBuildAbilityIndex number # esoui type: `luaindex`
---@return GetSkillBuildEntryInfoPack # Packed output from *GetSkillBuildEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillBuildEntryInfo(skillBuildId, skillBuildAbilityIndex)
    local data = {GetSkillBuildEntryInfo(skillBuildId, skillBuildAbilityIndex)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2],
        AbilityIndex = data[3],
        IsActiveAbility = data[4],
        MorphChoice = data[5],
        Rank = data[6]
    }
end

---@class GetSkillBuildInfoPack
---@field Name string
---@field Description string
---@field IsTank boolean # esoui type: `bool`
---@field IsHealer boolean # esoui type: `bool`
---@field IsDPS boolean # esoui type: `bool`

---@param skillBuildId number # esoui type: `integer`
---@return GetSkillBuildInfoPack # Packed output from *GetSkillBuildInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillBuildInfo(skillBuildId)
    local data = {GetSkillBuildInfo(skillBuildId)}
    return {
        Name = data[1],
        Description = data[2],
        IsTank = data[3],
        IsHealer = data[4],
        IsDPS = data[5]
    }
end

---@class GetSkillLineDynamicInfoPack
---@field Rank number # esoui type: `luaindex`
---@field Advised boolean # esoui type: `bool`
---@field Active boolean # esoui type: `bool`
---@field Discovered boolean # esoui type: `bool`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return GetSkillLineDynamicInfoPack # Packed output from *GetSkillLineDynamicInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillLineDynamicInfo(skillType, skillLineIndex)
    local data = {GetSkillLineDynamicInfo(skillType, skillLineIndex)}
    return {
        Rank = data[1],
        Advised = data[2],
        Active = data[3],
        Discovered = data[4]
    }
end

---@class GetSkillLineIndicesFromSkillIdPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`

---@param skillId number # esoui type: `integer`
---@return GetSkillLineIndicesFromSkillIdPack # Packed output from *GetSkillLineIndicesFromSkillId*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillLineIndicesFromSkillId(skillId)
    local data = {GetSkillLineIndicesFromSkillId(skillId)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2]
    }
end

---@class GetSkillLineIndicesFromSkillLineIdPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`

---@param skillLineId number # esoui type: `integer`
---@return GetSkillLineIndicesFromSkillLineIdPack # Packed output from *GetSkillLineIndicesFromSkillLineId*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillLineIndicesFromSkillLineId(skillLineId)
    local data = {GetSkillLineIndicesFromSkillLineId(skillLineId)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2]
    }
end

---@class GetSkillLineRankXPExtentsPack
---@field StartXP? number # esoui type: `integer:nilable`
---@field NextRankStartXP? number # esoui type: `integer:nilable`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param rank number # esoui type: `luaindex`
---@return GetSkillLineRankXPExtentsPack # Packed output from *GetSkillLineRankXPExtents*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillLineRankXPExtents(skillType, skillLineIndex, rank)
    local data = {GetSkillLineRankXPExtents(skillType, skillLineIndex, rank)}
    return {
        StartXP = data[1],
        NextRankStartXP = data[2]
    }
end

---@class GetSkillLineXPInfoPack
---@field LastRankXP number # esoui type: `integer`
---@field NextRankXP number # esoui type: `integer`
---@field CurrentXP number # esoui type: `integer`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@return GetSkillLineXPInfoPack # Packed output from *GetSkillLineXPInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSkillLineXPInfo(skillType, skillLineIndex)
    local data = {GetSkillLineXPInfo(skillType, skillLineIndex)}
    return {
        LastRankXP = data[1],
        NextRankXP = data[2],
        CurrentXP = data[3]
    }
end

---@class GetSlotAbilityCostPack
---@field AbilityCost number # esoui type: `integer`
---@field MechanicType number # esoui type: `integer`

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return GetSlotAbilityCostPack # Packed output from *GetSlotAbilityCost*
function EsoAddonFramework_Framework_Eso_Pack.GetSlotAbilityCost(actionSlotIndex, hotbarCategory)
    local data = {GetSlotAbilityCost(actionSlotIndex, hotbarCategory)}
    return {
        AbilityCost = data[1],
        MechanicType = data[2]
    }
end

---@class GetSlotCooldownInfoPack
---@field Remain number # esoui type: `integer`
---@field Duration number # esoui type: `integer`
---@field Global boolean # esoui type: `bool`
---@field GlobalSlotType ActionBarSlotType

---@param actionSlotIndex number # esoui type: `luaindex`
---@return GetSlotCooldownInfoPack # Packed output from *GetSlotCooldownInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSlotCooldownInfo(actionSlotIndex)
    local data = {GetSlotCooldownInfo(actionSlotIndex)}
    return {
        Remain = data[1],
        Duration = data[2],
        Global = data[3],
        GlobalSlotType = data[4]
    }
end

---@class GetSlotStackSizePack
---@field Stack number # esoui type: `integer`
---@field MaxStack number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetSlotStackSizePack # Packed output from *GetSlotStackSize*
function EsoAddonFramework_Framework_Eso_Pack.GetSlotStackSize(bagId, slotIndex)
    local data = {GetSlotStackSize(bagId, slotIndex)}
    return {
        Stack = data[1],
        MaxStack = data[2]
    }
end

---@class GetSlotTexturePack
---@field Texture string
---@field Weapontexture string
---@field ActivationAnimation string

---@param actionSlotIndex number # esoui type: `luaindex`
---@param hotbarCategory HotBarCategory
---@return GetSlotTexturePack # Packed output from *GetSlotTexture*
function EsoAddonFramework_Framework_Eso_Pack.GetSlotTexture(actionSlotIndex, hotbarCategory)
    local data = {GetSlotTexture(actionSlotIndex, hotbarCategory)}
    return {
        Texture = data[1],
        Weapontexture = data[2],
        ActivationAnimation = data[3]
    }
end

---@class GetSmithingImprovedItemInfoPack
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field FunctionalQuality ItemQuality
---@field DisplayQuality ItemDisplayQuality

---@param itemToImproveBagId Bag
---@param itemToImproveSlotIndex number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return GetSmithingImprovedItemInfoPack # Packed output from *GetSmithingImprovedItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingImprovedItemInfo(itemToImproveBagId, itemToImproveSlotIndex, craftingSkillType)
    local data = {GetSmithingImprovedItemInfo(itemToImproveBagId, itemToImproveSlotIndex, craftingSkillType)}
    return {
        ItemName = data[1],
        Icon = data[2],
        SellPrice = data[3],
        MeetsUsageRequirement = data[4],
        EquipType = data[5],
        ItemStyleId = data[6],
        FunctionalQuality = data[7],
        DisplayQuality = data[8]
    }
end

---@class GetSmithingImprovementItemInfoPack
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field CurrentStack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field FunctionalQuality ItemQuality
---@field DisplayQuality ItemDisplayQuality

---@param craftingSkillType TradeskillType
---@param improvementItemIndex number # esoui type: `luaindex`
---@return GetSmithingImprovementItemInfoPack # Packed output from *GetSmithingImprovementItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingImprovementItemInfo(craftingSkillType, improvementItemIndex)
    local data = {GetSmithingImprovementItemInfo(craftingSkillType, improvementItemIndex)}
    return {
        ItemName = data[1],
        Icon = data[2],
        CurrentStack = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        FunctionalQuality = data[8],
        DisplayQuality = data[9]
    }
end

---@class GetSmithingPatternInfoPack
---@field PatternName string
---@field BaseName string
---@field Icon string # esoui type: `textureName`
---@field NumMaterials number # esoui type: `integer`
---@field NumTraitsRequired number # esoui type: `integer`
---@field NumTraitsKnown number # esoui type: `integer`
---@field ResultItemFilterType ItemFilterType

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndexOverride? number # esoui type: `luaindex:nilable`
---@param materialQuanityOverride? number # esoui type: `integer:nilable`
---@param styleOverride? number # esoui type: `integer:nilable`
---@param traitTypeOverride ItemTraitType
---@return GetSmithingPatternInfoPack # Packed output from *GetSmithingPatternInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingPatternInfo(patternIndex, materialIndexOverride, materialQuanityOverride, styleOverride, traitTypeOverride)
    local data = {GetSmithingPatternInfo(patternIndex, materialIndexOverride, materialQuanityOverride, styleOverride, traitTypeOverride)}
    return {
        PatternName = data[1],
        BaseName = data[2],
        Icon = data[3],
        NumMaterials = data[4],
        NumTraitsRequired = data[5],
        NumTraitsKnown = data[6],
        ResultItemFilterType = data[7]
    }
end

---@class GetSmithingPatternInfoForItemIdPack
---@field PatternIndex? number # esoui type: `luaindex:nilable`
---@field MaterialIndex? number # esoui type: `luaindex:nilable`

---@param itemId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param craftingSkillType TradeskillType
---@return GetSmithingPatternInfoForItemIdPack # Packed output from *GetSmithingPatternInfoForItemId*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingPatternInfoForItemId(itemId, materialItemId, craftingSkillType)
    local data = {GetSmithingPatternInfoForItemId(itemId, materialItemId, craftingSkillType)}
    return {
        PatternIndex = data[1],
        MaterialIndex = data[2]
    }
end

---@class GetSmithingPatternInfoForItemSetPack
---@field PatternIndex? number # esoui type: `luaindex:nilable`
---@field MaterialIndex? number # esoui type: `luaindex:nilable`
---@field ResultingItemId? number # esoui type: `integer:nilable`

---@param itemTemplateId number # esoui type: `integer`
---@param itemSetId number # esoui type: `integer`
---@param materialItemId number # esoui type: `integer`
---@param traitType ItemTraitType
---@return GetSmithingPatternInfoForItemSetPack # Packed output from *GetSmithingPatternInfoForItemSet*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingPatternInfoForItemSet(itemTemplateId, itemSetId, materialItemId, traitType)
    local data = {GetSmithingPatternInfoForItemSet(itemTemplateId, itemSetId, materialItemId, traitType)}
    return {
        PatternIndex = data[1],
        MaterialIndex = data[2],
        ResultingItemId = data[3]
    }
end

---@class GetSmithingPatternMaterialItemInfoPack
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality
---@field ItemInstanceId number # esoui type: `integer`
---@field SkillRequirement number # esoui type: `integer`
---@field CreatesItemOfLevel number # esoui type: `integer`
---@field IsChampionPoint boolean # esoui type: `bool`

---@param patternIndex number # esoui type: `luaindex`
---@param materialIndex number # esoui type: `luaindex`
---@return GetSmithingPatternMaterialItemInfoPack # Packed output from *GetSmithingPatternMaterialItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingPatternMaterialItemInfo(patternIndex, materialIndex)
    local data = {GetSmithingPatternMaterialItemInfo(patternIndex, materialIndex)}
    return {
        ItemName = data[1],
        Icon = data[2],
        Stack = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        EquipType = data[6],
        ItemStyleId = data[7],
        DisplayQuality = data[8],
        ItemInstanceId = data[9],
        SkillRequirement = data[10],
        CreatesItemOfLevel = data[11],
        IsChampionPoint = data[12]
    }
end

---@class GetSmithingResearchLineInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field NumTraits number # esoui type: `integer`
---@field TimeRequiredForNextResearchSecs number # esoui type: `integer`

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@return GetSmithingResearchLineInfoPack # Packed output from *GetSmithingResearchLineInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingResearchLineInfo(craftingSkillType, researchLineIndex)
    local data = {GetSmithingResearchLineInfo(craftingSkillType, researchLineIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        NumTraits = data[3],
        TimeRequiredForNextResearchSecs = data[4]
    }
end

---@class GetSmithingResearchLineTraitDescriptionsPack
---@field TraitDescription string
---@field TraitResearchSourceDescription string
---@field TraitMaterialSourceDescription string

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return GetSmithingResearchLineTraitDescriptionsPack # Packed output from *GetSmithingResearchLineTraitDescriptions*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingResearchLineTraitDescriptions(craftingSkillType, researchLineIndex, traitIndex)
    local data = {GetSmithingResearchLineTraitDescriptions(craftingSkillType, researchLineIndex, traitIndex)}
    return {
        TraitDescription = data[1],
        TraitResearchSourceDescription = data[2],
        TraitMaterialSourceDescription = data[3]
    }
end

---@class GetSmithingResearchLineTraitInfoPack
---@field TraitType ItemTraitType
---@field TraitDescription string
---@field Known boolean # esoui type: `bool`

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return GetSmithingResearchLineTraitInfoPack # Packed output from *GetSmithingResearchLineTraitInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingResearchLineTraitInfo(craftingSkillType, researchLineIndex, traitIndex)
    local data = {GetSmithingResearchLineTraitInfo(craftingSkillType, researchLineIndex, traitIndex)}
    return {
        TraitType = data[1],
        TraitDescription = data[2],
        Known = data[3]
    }
end

---@class GetSmithingResearchLineTraitTimesPack
---@field Duration? number # esoui type: `integer:nilable`
---@field TimeRemainingSecs? number # esoui type: `integer:nilable`

---@param craftingSkillType TradeskillType
---@param researchLineIndex number # esoui type: `luaindex`
---@param traitIndex number # esoui type: `luaindex`
---@return GetSmithingResearchLineTraitTimesPack # Packed output from *GetSmithingResearchLineTraitTimes*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingResearchLineTraitTimes(craftingSkillType, researchLineIndex, traitIndex)
    local data = {GetSmithingResearchLineTraitTimes(craftingSkillType, researchLineIndex, traitIndex)}
    return {
        Duration = data[1],
        TimeRemainingSecs = data[2]
    }
end

---@class GetSmithingTraitItemInfoPack
---@field TraitType ItemTraitType
---@field ItemName string
---@field Icon string # esoui type: `textureName`
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field ItemStyleId number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality

---@param traitItemIndex number # esoui type: `luaindex`
---@return GetSmithingTraitItemInfoPack # Packed output from *GetSmithingTraitItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSmithingTraitItemInfo(traitItemIndex)
    local data = {GetSmithingTraitItemInfo(traitItemIndex)}
    return {
        TraitType = data[1],
        ItemName = data[2],
        Icon = data[3],
        SellPrice = data[4],
        MeetsUsageRequirement = data[5],
        ItemStyleId = data[6],
        DisplayQuality = data[7]
    }
end

---@class GetSoulGemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field StackCount number # esoui type: `integer`
---@field Quality ItemQuality

---@param soulGemType SoulGemType
---@param targetLevel number # esoui type: `integer`
---@param onlyInInventory boolean # esoui type: `bool`
---@return GetSoulGemInfoPack # Packed output from *GetSoulGemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSoulGemInfo(soulGemType, targetLevel, onlyInInventory)
    local data = {GetSoulGemInfo(soulGemType, targetLevel, onlyInInventory)}
    return {
        Name = data[1],
        Icon = data[2],
        StackCount = data[3],
        Quality = data[4]
    }
end

---@class GetSoulGemItemInfoPack
---@field Tier number # esoui type: `integer`
---@field SoulGemType SoulGemType

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return GetSoulGemItemInfoPack # Packed output from *GetSoulGemItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSoulGemItemInfo(bagId, slotIndex)
    local data = {GetSoulGemItemInfo(bagId, slotIndex)}
    return {
        Tier = data[1],
        SoulGemType = data[2]
    }
end

---@class GetSpecificSkillAbilityInfoPack
---@field AbilityId number # esoui type: `integer`
---@field SkillLineRankNeeded number # esoui type: `luaindex`

---@param skillType SkillType
---@param skillLineIndex number # esoui type: `luaindex`
---@param skillIndex number # esoui type: `luaindex`
---@param morphChoice number # esoui type: `integer`
---@param rank number # esoui type: `integer`
---@return GetSpecificSkillAbilityInfoPack # Packed output from *GetSpecificSkillAbilityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSpecificSkillAbilityInfo(skillType, skillLineIndex, skillIndex, morphChoice, rank)
    local data = {GetSpecificSkillAbilityInfo(skillType, skillLineIndex, skillIndex, morphChoice, rank)}
    return {
        AbilityId = data[1],
        SkillLineRankNeeded = data[2]
    }
end

---@class GetSpecificSkillAbilityKeysByAbilityIdPack
---@field SkillType SkillType
---@field SkillLineIndex number # esoui type: `luaindex`
---@field SkillIndex number # esoui type: `luaindex`
---@field MorphChoice number # esoui type: `integer`
---@field Rank number # esoui type: `integer`

---@param abilityId number # esoui type: `integer`
---@return GetSpecificSkillAbilityKeysByAbilityIdPack # Packed output from *GetSpecificSkillAbilityKeysByAbilityId*
function EsoAddonFramework_Framework_Eso_Pack.GetSpecificSkillAbilityKeysByAbilityId(abilityId)
    local data = {GetSpecificSkillAbilityKeysByAbilityId(abilityId)}
    return {
        SkillType = data[1],
        SkillLineIndex = data[2],
        SkillIndex = data[3],
        MorphChoice = data[4],
        Rank = data[5]
    }
end

---@class GetStoreCollectibleInfoPack
---@field CollectibleId number # esoui type: `integer`
---@field Owned boolean # esoui type: `bool`

---@param entryIndex number # esoui type: `luaindex`
---@return GetStoreCollectibleInfoPack # Packed output from *GetStoreCollectibleInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetStoreCollectibleInfo(entryIndex)
    local data = {GetStoreCollectibleInfo(entryIndex)}
    return {
        CollectibleId = data[1],
        Owned = data[2]
    }
end

---@class GetStoreCurrencyTypesPack
---@field UsesMoney boolean # esoui type: `bool`
---@field UsesAlliancePoints boolean # esoui type: `bool`
---@field UsesTelvarStones boolean # esoui type: `bool`
---@field UsesWritVouchers boolean # esoui type: `bool`
---@field UsesEventCurrency boolean # esoui type: `bool`

---@return GetStoreCurrencyTypesPack # Packed output from *GetStoreCurrencyTypes*
function EsoAddonFramework_Framework_Eso_Pack.GetStoreCurrencyTypes()
    local data = {GetStoreCurrencyTypes()}
    return {
        UsesMoney = data[1],
        UsesAlliancePoints = data[2],
        UsesTelvarStones = data[3],
        UsesWritVouchers = data[4],
        UsesEventCurrency = data[5]
    }
end

---@class GetStoreEntryInfoPack
---@field Icon string # esoui type: `textureName`
---@field Name string
---@field Stack number # esoui type: `integer`
---@field Price number # esoui type: `integer`
---@field SellPrice number # esoui type: `integer`
---@field MeetsRequirementsToBuy boolean # esoui type: `bool`
---@field MeetsRequirementsToUse boolean # esoui type: `bool`
---@field Quality number # esoui type: `integer`
---@field QuestNameColor boolean # esoui type: `bool`
---@field CurrencyType1 CurrencyType
---@field CurrencyQuantity1 number # esoui type: `integer`
---@field CurrencyType2 CurrencyType
---@field CurrencyQuantity2 number # esoui type: `integer`
---@field EntryType StoreEntryType
---@field BuyStoreFailure StoreFailure
---@field BuyErrorStringId number # esoui type: `integer`

---@param entryIndex number # esoui type: `luaindex`
---@return GetStoreEntryInfoPack # Packed output from *GetStoreEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetStoreEntryInfo(entryIndex)
    local data = {GetStoreEntryInfo(entryIndex)}
    return {
        Icon = data[1],
        Name = data[2],
        Stack = data[3],
        Price = data[4],
        SellPrice = data[5],
        MeetsRequirementsToBuy = data[6],
        MeetsRequirementsToUse = data[7],
        Quality = data[8],
        QuestNameColor = data[9],
        CurrencyType1 = data[10],
        CurrencyQuantity1 = data[11],
        CurrencyType2 = data[12],
        CurrencyQuantity2 = data[13],
        EntryType = data[14],
        BuyStoreFailure = data[15],
        BuyErrorStringId = data[16]
    }
end

---@class GetSynergyInfoPack
---@field SynergyName? string # esoui type: `string:nilable`
---@field IconFilename? string # esoui type: `textureName:nilable`
---@field Priority? number # esoui type: `integer:nilable`

---@return GetSynergyInfoPack # Packed output from *GetSynergyInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetSynergyInfo()
    local data = {GetSynergyInfo()}
    return {
        SynergyName = data[1],
        IconFilename = data[2],
        Priority = data[3]
    }
end

---@class GetTargetMountedStateInfoPack
---@field MountedState MountedState
---@field IsRidingGroupMount boolean # esoui type: `bool`
---@field HasFreePassengerSlot boolean # esoui type: `bool`

---@param characterOrDisplayName string
---@return GetTargetMountedStateInfoPack # Packed output from *GetTargetMountedStateInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTargetMountedStateInfo(characterOrDisplayName)
    local data = {GetTargetMountedStateInfo(characterOrDisplayName)}
    return {
        MountedState = data[1],
        IsRidingGroupMount = data[2],
        HasFreePassengerSlot = data[3]
    }
end

---@class GetTextureLayerRevealAnimationWindowDimensionsPack
---@field NormalizedWidth number
---@field NormalizedHeight number

---@param animationId number # esoui type: `integer`
---@return GetTextureLayerRevealAnimationWindowDimensionsPack # Packed output from *GetTextureLayerRevealAnimationWindowDimensions*
function EsoAddonFramework_Framework_Eso_Pack.GetTextureLayerRevealAnimationWindowDimensions(animationId)
    local data = {GetTextureLayerRevealAnimationWindowDimensions(animationId)}
    return {
        NormalizedWidth = data[1],
        NormalizedHeight = data[2]
    }
end

---@class GetTextureLayerRevealAnimationWindowEndPointsPack
---@field NormalizedStartX number
---@field NormalizedStartY number
---@field NormalizedStartRegistrationX number
---@field NormalizedStartRegistrationY number
---@field NormalizedEndX number
---@field NormalizedEndY number
---@field NormalizedEndRegistrationX number
---@field NormalizedEndRegistrationY number

---@param animationId number # esoui type: `integer`
---@return GetTextureLayerRevealAnimationWindowEndPointsPack # Packed output from *GetTextureLayerRevealAnimationWindowEndPoints*
function EsoAddonFramework_Framework_Eso_Pack.GetTextureLayerRevealAnimationWindowEndPoints(animationId)
    local data = {GetTextureLayerRevealAnimationWindowEndPoints(animationId)}
    return {
        NormalizedStartX = data[1],
        NormalizedStartY = data[2],
        NormalizedStartRegistrationX = data[3],
        NormalizedStartRegistrationY = data[4],
        NormalizedEndX = data[5],
        NormalizedEndY = data[6],
        NormalizedEndRegistrationX = data[7],
        NormalizedEndRegistrationY = data[8]
    }
end

---@class GetTextureLayerRevealAnimationWindowFadeGradientInfoPack
---@field X number
---@field Y number
---@field NormalizedDistance number

---@param animationId number # esoui type: `integer`
---@param index number # esoui type: `luaindex`
---@return GetTextureLayerRevealAnimationWindowFadeGradientInfoPack # Packed output from *GetTextureLayerRevealAnimationWindowFadeGradientInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTextureLayerRevealAnimationWindowFadeGradientInfo(animationId, index)
    local data = {GetTextureLayerRevealAnimationWindowFadeGradientInfo(animationId, index)}
    return {
        X = data[1],
        Y = data[2],
        NormalizedDistance = data[3]
    }
end

---@class GetTimedActivityRewardInfoPack
---@field RewardId number # esoui type: `integer`
---@field Quantity number # esoui type: `integer`

---@param index number # esoui type: `luaindex`
---@param rewardIndex number # esoui type: `luaindex`
---@return GetTimedActivityRewardInfoPack # Packed output from *GetTimedActivityRewardInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTimedActivityRewardInfo(index, rewardIndex)
    local data = {GetTimedActivityRewardInfo(index, rewardIndex)}
    return {
        RewardId = data[1],
        Quantity = data[2]
    }
end

---@class GetTimeUntilCanBeTrainedPack
---@field TimeMs number # esoui type: `integer`
---@field TotalDurationMs number # esoui type: `integer`

---@return GetTimeUntilCanBeTrainedPack # Packed output from *GetTimeUntilCanBeTrained*
function EsoAddonFramework_Framework_Eso_Pack.GetTimeUntilCanBeTrained()
    local data = {GetTimeUntilCanBeTrained()}
    return {
        TimeMs = data[1],
        TotalDurationMs = data[2]
    }
end

---@class GetTrackedByIndexPack
---@field TrackType TrackedDataType
---@field Param1 number # esoui type: `integer`
---@field Param2 number # esoui type: `integer`

---@param index number # esoui type: `luaindex`
---@return GetTrackedByIndexPack # Packed output from *GetTrackedByIndex*
function EsoAddonFramework_Framework_Eso_Pack.GetTrackedByIndex(index)
    local data = {GetTrackedByIndex(index)}
    return {
        TrackType = data[1],
        Param1 = data[2],
        Param2 = data[3]
    }
end

---@class GetTrackedZoneStoryActivityInfoPack
---@field ZoneId number # esoui type: `integer`
---@field ZoneCompletionType ZoneCompletionType
---@field ActivityId number # esoui type: `integer`

---@return GetTrackedZoneStoryActivityInfoPack # Packed output from *GetTrackedZoneStoryActivityInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTrackedZoneStoryActivityInfo()
    local data = {GetTrackedZoneStoryActivityInfo()}
    return {
        ZoneId = data[1],
        ZoneCompletionType = data[2],
        ActivityId = data[3]
    }
end

---@class GetTradeInviteInfoPack
---@field CharacterName string
---@field MillisecondsSinceRequest number # esoui type: `integer`
---@field DisplayName string

---@return GetTradeInviteInfoPack # Packed output from *GetTradeInviteInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradeInviteInfo()
    local data = {GetTradeInviteInfo()}
    return {
        CharacterName = data[1],
        MillisecondsSinceRequest = data[2],
        DisplayName = data[3]
    }
end

---@class GetTradeItemBagAndSlotPack
---@field BagId Bag
---@field SlotIndex? number # esoui type: `integer:nilable`

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return GetTradeItemBagAndSlotPack # Packed output from *GetTradeItemBagAndSlot*
function EsoAddonFramework_Framework_Eso_Pack.GetTradeItemBagAndSlot(who, tradeIndex)
    local data = {GetTradeItemBagAndSlot(who, tradeIndex)}
    return {
        BagId = data[1],
        SlotIndex = data[2]
    }
end

---@class GetTradeItemInfoPack
---@field Name string
---@field Icon string # esoui type: `textureName`
---@field Stack number # esoui type: `integer`
---@field DisplayQuality ItemDisplayQuality
---@field CreatorName string
---@field SellPrice number # esoui type: `integer`
---@field MeetsUsageRequirement boolean # esoui type: `bool`
---@field EquipType EquipType
---@field ItemStyleId number # esoui type: `integer`

---@param who TradeParticipant
---@param tradeIndex number # esoui type: `luaindex`
---@return GetTradeItemInfoPack # Packed output from *GetTradeItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradeItemInfo(who, tradeIndex)
    local data = {GetTradeItemInfo(who, tradeIndex)}
    return {
        Name = data[1],
        Icon = data[2],
        Stack = data[3],
        DisplayQuality = data[4],
        CreatorName = data[5],
        SellPrice = data[6],
        MeetsUsageRequirement = data[7],
        EquipType = data[8],
        ItemStyleId = data[9]
    }
end

---@class GetTradingHouseGuildDetailsPack
---@field GuildId number # esoui type: `integer`
---@field GuildName string
---@field GuildAlliance Alliance

---@param index number # esoui type: `luaindex`
---@return GetTradingHouseGuildDetailsPack # Packed output from *GetTradingHouseGuildDetails*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHouseGuildDetails(index)
    local data = {GetTradingHouseGuildDetails(index)}
    return {
        GuildId = data[1],
        GuildName = data[2],
        GuildAlliance = data[3]
    }
end

---@class GetTradingHouseListingCountsPack
---@field CurrentListingCount number # esoui type: `integer`
---@field MaxListingCount number # esoui type: `integer`

---@return GetTradingHouseListingCountsPack # Packed output from *GetTradingHouseListingCounts*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHouseListingCounts()
    local data = {GetTradingHouseListingCounts()}
    return {
        CurrentListingCount = data[1],
        MaxListingCount = data[2]
    }
end

---@class GetTradingHouseListingItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field ItemName string
---@field DisplayQuality ItemDisplayQuality
---@field StackCount number # esoui type: `integer`
---@field SellerName string
---@field TimeRemaining number # esoui type: `integer`
---@field SalePrice number # esoui type: `integer`
---@field CurrencyType CurrencyType
---@field ItemUniqueId number # esoui type: `id64`
---@field SalePricePerUnit number

---@param index number # esoui type: `luaindex`
---@return GetTradingHouseListingItemInfoPack # Packed output from *GetTradingHouseListingItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHouseListingItemInfo(index)
    local data = {GetTradingHouseListingItemInfo(index)}
    return {
        Icon = data[1],
        ItemName = data[2],
        DisplayQuality = data[3],
        StackCount = data[4],
        SellerName = data[5],
        TimeRemaining = data[6],
        SalePrice = data[7],
        CurrencyType = data[8],
        ItemUniqueId = data[9],
        SalePricePerUnit = data[10]
    }
end

---@class GetTradingHousePostPriceInfoPack
---@field ListingFee number # esoui type: `integer`
---@field TradingHouseCut number # esoui type: `integer`
---@field ExpectedProfit number # esoui type: `integer`

---@param desiredPostPrice number # esoui type: `integer`
---@return GetTradingHousePostPriceInfoPack # Packed output from *GetTradingHousePostPriceInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHousePostPriceInfo(desiredPostPrice)
    local data = {GetTradingHousePostPriceInfo(desiredPostPrice)}
    return {
        ListingFee = data[1],
        TradingHouseCut = data[2],
        ExpectedProfit = data[3]
    }
end

---@class GetTradingHouseSearchResultItemInfoPack
---@field Icon string # esoui type: `textureName`
---@field ItemName string
---@field DisplayQuality ItemDisplayQuality
---@field StackCount number # esoui type: `integer`
---@field SellerName string
---@field TimeRemaining number # esoui type: `integer`
---@field PurchasePrice number # esoui type: `integer`
---@field CurrencyType CurrencyType
---@field ItemUniqueId number # esoui type: `id64`
---@field PurchasePricePerUnit number

---@param index number # esoui type: `luaindex`
---@return GetTradingHouseSearchResultItemInfoPack # Packed output from *GetTradingHouseSearchResultItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHouseSearchResultItemInfo(index)
    local data = {GetTradingHouseSearchResultItemInfo(index)}
    return {
        Icon = data[1],
        ItemName = data[2],
        DisplayQuality = data[3],
        StackCount = data[4],
        SellerName = data[5],
        TimeRemaining = data[6],
        PurchasePrice = data[7],
        CurrencyType = data[8],
        ItemUniqueId = data[9],
        PurchasePricePerUnit = data[10]
    }
end

---@class GetTradingHouseSearchResultsInfoPack
---@field NumItemsOnPage number # esoui type: `integer`
---@field CurrentPage number # esoui type: `integer`
---@field HasMorePages boolean # esoui type: `bool`

---@return GetTradingHouseSearchResultsInfoPack # Packed output from *GetTradingHouseSearchResultsInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTradingHouseSearchResultsInfo()
    local data = {GetTradingHouseSearchResultsInfo()}
    return {
        NumItemsOnPage = data[1],
        CurrentPage = data[2],
        HasMorePages = data[3]
    }
end

---@class GetTreasureMapInfoPack
---@field Name string
---@field ImagePath string # esoui type: `textureName`

---@param treasureMapIndex number # esoui type: `luaindex`
---@return GetTreasureMapInfoPack # Packed output from *GetTreasureMapInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTreasureMapInfo(treasureMapIndex)
    local data = {GetTreasureMapInfo(treasureMapIndex)}
    return {
        Name = data[1],
        ImagePath = data[2]
    }
end

---@class GetTrialInfoPack
---@field AccountTypeId number # esoui type: `integer`
---@field Title string
---@field Description string
---@field Version number # esoui type: `integer`

---@return GetTrialInfoPack # Packed output from *GetTrialInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTrialInfo()
    local data = {GetTrialInfo()}
    return {
        AccountTypeId = data[1],
        Title = data[2],
        Description = data[3],
        Version = data[4]
    }
end

---@class GetTrialLeaderboardEntryInfoPack
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field Time number # esoui type: `integer`
---@field ClassId number # esoui type: `integer`
---@field AllianceId number # esoui type: `integer`
---@field DisplayName string

---@param raidIndex number # esoui type: `luaindex`
---@param entryIndex number # esoui type: `luaindex`
---@return GetTrialLeaderboardEntryInfoPack # Packed output from *GetTrialLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTrialLeaderboardEntryInfo(raidIndex, entryIndex)
    local data = {GetTrialLeaderboardEntryInfo(raidIndex, entryIndex)}
    return {
        Ranking = data[1],
        CharName = data[2],
        Time = data[3],
        ClassId = data[4],
        AllianceId = data[5],
        DisplayName = data[6]
    }
end

---@class GetTrialOfTheWeekLeaderboardEntryInfoPack
---@field Ranking number # esoui type: `integer`
---@field CharName string
---@field Time number # esoui type: `integer`
---@field ClassId number # esoui type: `integer`
---@field AllianceId number # esoui type: `integer`
---@field DisplayName string

---@param entryIndex number # esoui type: `luaindex`
---@return GetTrialOfTheWeekLeaderboardEntryInfoPack # Packed output from *GetTrialOfTheWeekLeaderboardEntryInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTrialOfTheWeekLeaderboardEntryInfo(entryIndex)
    local data = {GetTrialOfTheWeekLeaderboardEntryInfo(entryIndex)}
    return {
        Ranking = data[1],
        CharName = data[2],
        Time = data[3],
        ClassId = data[4],
        AllianceId = data[5],
        DisplayName = data[6]
    }
end

---@class GetTutorialInfoPack
---@field Title string
---@field Description string
---@field DisplayPriority number # esoui type: `integer`

---@param tutorialIndex number # esoui type: `luaindex`
---@return GetTutorialInfoPack # Packed output from *GetTutorialInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTutorialInfo(tutorialIndex)
    local data = {GetTutorialInfo(tutorialIndex)}
    return {
        Title = data[1],
        Description = data[2],
        DisplayPriority = data[3]
    }
end

---@class GetTutorialLinkedHelpInfoPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@param tutorialIndex number # esoui type: `luaindex`
---@return GetTutorialLinkedHelpInfoPack # Packed output from *GetTutorialLinkedHelpInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetTutorialLinkedHelpInfo(tutorialIndex)
    local data = {GetTutorialLinkedHelpInfo(tutorialIndex)}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GetUnitAttributeVisualizerEffectInfoPack
---@field Value? number # esoui type: `number:nilable`
---@field MaxValue? number # esoui type: `number:nilable`
---@field SequenceId? number # esoui type: `integer:nilable`

---@param unitTag string
---@param unitAttributeVisual UnitAttributeVisual
---@param statType DerivedStats
---@param attributeType Attributes
---@param powerType CombatMechanicType
---@return GetUnitAttributeVisualizerEffectInfoPack # Packed output from *GetUnitAttributeVisualizerEffectInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitAttributeVisualizerEffectInfo(unitTag, unitAttributeVisual, statType, attributeType, powerType)
    local data = {GetUnitAttributeVisualizerEffectInfo(unitTag, unitAttributeVisual, statType, attributeType, powerType)}
    return {
        Value = data[1],
        MaxValue = data[2],
        SequenceId = data[3]
    }
end

---@class GetUnitAvARankPack
---@field Rank number # esoui type: `integer`
---@field SubRank number # esoui type: `integer`

---@param unitTag string
---@return GetUnitAvARankPack # Packed output from *GetUnitAvARank*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitAvARank(unitTag)
    local data = {GetUnitAvARank(unitTag)}
    return {
        Rank = data[1],
        SubRank = data[2]
    }
end

---@class GetUnitBuffInfoPack
---@field BuffName string
---@field TimeStarted number
---@field TimeEnding number
---@field BuffSlot number # esoui type: `integer`
---@field StackCount number # esoui type: `integer`
---@field IconFilename string # esoui type: `textureName`
---@field BuffType string
---@field EffectType BuffEffectType
---@field AbilityType AbilityType
---@field StatusEffectType StatusEffectType
---@field AbilityId number # esoui type: `integer`
---@field CanClickOff boolean # esoui type: `bool`
---@field CastByPlayer boolean # esoui type: `bool`

---@param unitTag string
---@param buffIndex number # esoui type: `luaindex`
---@return GetUnitBuffInfoPack # Packed output from *GetUnitBuffInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitBuffInfo(unitTag, buffIndex)
    local data = {GetUnitBuffInfo(unitTag, buffIndex)}
    return {
        BuffName = data[1],
        TimeStarted = data[2],
        TimeEnding = data[3],
        BuffSlot = data[4],
        StackCount = data[5],
        IconFilename = data[6],
        BuffType = data[7],
        EffectType = data[8],
        AbilityType = data[9],
        StatusEffectType = data[10],
        AbilityId = data[11],
        CanClickOff = data[12],
        CastByPlayer = data[13]
    }
end

---@class GetUnitDrownTimePack
---@field StartTime number
---@field EndTime number

---@param unitTag string
---@return GetUnitDrownTimePack # Packed output from *GetUnitDrownTime*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitDrownTime(unitTag)
    local data = {GetUnitDrownTime(unitTag)}
    return {
        StartTime = data[1],
        EndTime = data[2]
    }
end

---@class GetUnitPowerPack
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`
---@field EffectiveMax number # esoui type: `integer`

---@param unitTag string
---@param powerType CombatMechanicType
---@return GetUnitPowerPack # Packed output from *GetUnitPower*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitPower(unitTag, powerType)
    local data = {GetUnitPower(unitTag, powerType)}
    return {
        Current = data[1],
        Max = data[2],
        EffectiveMax = data[3]
    }
end

---@class GetUnitPowerInfoPack
---@field Type? number # esoui type: `integer:nilable`
---@field Current number # esoui type: `integer`
---@field Max number # esoui type: `integer`
---@field EffectiveMax number # esoui type: `integer`

---@param unitTag string
---@param poolIndex number # esoui type: `luaindex`
---@return GetUnitPowerInfoPack # Packed output from *GetUnitPowerInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitPowerInfo(unitTag, poolIndex)
    local data = {GetUnitPowerInfo(unitTag, poolIndex)}
    return {
        Type = data[1],
        Current = data[2],
        Max = data[3],
        EffectiveMax = data[4]
    }
end

---@class GetUnitRawWorldPositionPack
---@field ZoneId number # esoui type: `integer`
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@param unitTag string
---@return GetUnitRawWorldPositionPack # Packed output from *GetUnitRawWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitRawWorldPosition(unitTag)
    local data = {GetUnitRawWorldPosition(unitTag)}
    return {
        ZoneId = data[1],
        WorldX = data[2],
        WorldY = data[3],
        WorldZ = data[4]
    }
end

---@class GetUnitReactionColorPack
---@field Red number
---@field Green number
---@field Blue number

---@param unitTag string
---@return GetUnitReactionColorPack # Packed output from *GetUnitReactionColor*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitReactionColor(unitTag)
    local data = {GetUnitReactionColor(unitTag)}
    return {
        Red = data[1],
        Green = data[2],
        Blue = data[3]
    }
end

---@class GetUnitWorldPositionPack
---@field ZoneId number # esoui type: `integer`
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@param unitTag string
---@return GetUnitWorldPositionPack # Packed output from *GetUnitWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GetUnitWorldPosition(unitTag)
    local data = {GetUnitWorldPosition(unitTag)}
    return {
        ZoneId = data[1],
        WorldX = data[2],
        WorldY = data[3],
        WorldZ = data[4]
    }
end

---@class GetUniversallyNormalizedMapInfoPack
---@field NormalizedOffsetX number
---@field NormalizedOffsetZ number
---@field NormalizedWidth number
---@field NormalizedHeight number

---@param mapId number # esoui type: `integer`
---@return GetUniversallyNormalizedMapInfoPack # Packed output from *GetUniversallyNormalizedMapInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetUniversallyNormalizedMapInfo(mapId)
    local data = {GetUniversallyNormalizedMapInfo(mapId)}
    return {
        NormalizedOffsetX = data[1],
        NormalizedOffsetZ = data[2],
        NormalizedWidth = data[3],
        NormalizedHeight = data[4]
    }
end

---@class GetUpdatedRecipeIndicesPack
---@field RecipeListIndex number # esoui type: `luaindex`
---@field RecipeIndex number # esoui type: `luaindex`

---@param index number # esoui type: `luaindex`
---@return GetUpdatedRecipeIndicesPack # Packed output from *GetUpdatedRecipeIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetUpdatedRecipeIndices(index)
    local data = {GetUpdatedRecipeIndices(index)}
    return {
        RecipeListIndex = data[1],
        RecipeIndex = data[2]
    }
end

---@class GetVibrationInfoFromTriggerPack
---@field DurationMS number # esoui type: `integer`
---@field CoarseMotor number
---@field FineMotor number
---@field LeftTriggerMotor number
---@field RightTriggerMotor number
---@field FoundInfo boolean # esoui type: `bool`
---@field DebugSourceInfo string

---@param triggerType GamepadVibrationTrigger
---@return GetVibrationInfoFromTriggerPack # Packed output from *GetVibrationInfoFromTrigger*
function EsoAddonFramework_Framework_Eso_Pack.GetVibrationInfoFromTrigger(triggerType)
    local data = {GetVibrationInfoFromTrigger(triggerType)}
    return {
        DurationMS = data[1],
        CoarseMotor = data[2],
        FineMotor = data[3],
        LeftTriggerMotor = data[4],
        RightTriggerMotor = data[5],
        FoundInfo = data[6],
        DebugSourceInfo = data[7]
    }
end

---@class GetWorldDimensionsOfViewFrustumAtDepthPack
---@field FrustumWidth number
---@field FrustumHeight number

---@param depth number
---@return GetWorldDimensionsOfViewFrustumAtDepthPack # Packed output from *GetWorldDimensionsOfViewFrustumAtDepth*
function EsoAddonFramework_Framework_Eso_Pack.GetWorldDimensionsOfViewFrustumAtDepth(depth)
    local data = {GetWorldDimensionsOfViewFrustumAtDepth(depth)}
    return {
        FrustumWidth = data[1],
        FrustumHeight = data[2]
    }
end

---@class GetWorldEventPOIInfoPack
---@field ZoneIndex number # esoui type: `luaindex`
---@field PoiIndex number # esoui type: `luaindex`

---@param worldEventInstanceId number # esoui type: `integer`
---@return GetWorldEventPOIInfoPack # Packed output from *GetWorldEventPOIInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetWorldEventPOIInfo(worldEventInstanceId)
    local data = {GetWorldEventPOIInfo(worldEventInstanceId)}
    return {
        ZoneIndex = data[1],
        PoiIndex = data[2]
    }
end

---@class GetWornItemInfoPack
---@field SlotHasItem boolean # esoui type: `bool`
---@field Icon string # esoui type: `textureName`
---@field IsHeldSlot boolean # esoui type: `bool`
---@field IsHeldNow boolean # esoui type: `bool`
---@field IsLocked boolean # esoui type: `bool`

---@param wornBagId Bag
---@param equipSlot EquipSlot
---@return GetWornItemInfoPack # Packed output from *GetWornItemInfo*
function EsoAddonFramework_Framework_Eso_Pack.GetWornItemInfo(wornBagId, equipSlot)
    local data = {GetWornItemInfo(wornBagId, equipSlot)}
    return {
        SlotHasItem = data[1],
        Icon = data[2],
        IsHeldSlot = data[3],
        IsHeldNow = data[4],
        IsLocked = data[5]
    }
end

---@class GetZoneStoriesHelpIndicesPack
---@field HelpCategoryIndex? number # esoui type: `luaindex:nilable`
---@field HelpIndex? number # esoui type: `luaindex:nilable`

---@return GetZoneStoriesHelpIndicesPack # Packed output from *GetZoneStoriesHelpIndices*
function EsoAddonFramework_Framework_Eso_Pack.GetZoneStoriesHelpIndices()
    local data = {GetZoneStoriesHelpIndices()}
    return {
        HelpCategoryIndex = data[1],
        HelpIndex = data[2]
    }
end

---@class GuiRender3DPositionToWorldPositionPack
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@param renderX number
---@param renderY number
---@param renderZ number
---@return GuiRender3DPositionToWorldPositionPack # Packed output from *GuiRender3DPositionToWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.GuiRender3DPositionToWorldPosition(renderX, renderY, renderZ)
    local data = {GuiRender3DPositionToWorldPosition(renderX, renderY, renderZ)}
    return {
        WorldX = data[1],
        WorldY = data[2],
        WorldZ = data[3]
    }
end

---@class HousingEditorCalculateRotationAboutAxisPack
---@field PitchRadians number
---@field YawRadians number
---@field RollRadians number

---@param aAxis AxisTypes
---@param aOffsetRadians number
---@param aInitialPitchRadians number
---@param aInitialYawRadians number
---@param aInitialRollRadians number
---@return HousingEditorCalculateRotationAboutAxisPack # Packed output from *HousingEditorCalculateRotationAboutAxis*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorCalculateRotationAboutAxis(aAxis, aOffsetRadians, aInitialPitchRadians, aInitialYawRadians, aInitialRollRadians)
    local data = {HousingEditorCalculateRotationAboutAxis(aAxis, aOffsetRadians, aInitialPitchRadians, aInitialYawRadians, aInitialRollRadians)}
    return {
        PitchRadians = data[1],
        YawRadians = data[2],
        RollRadians = data[3]
    }
end

---@class HousingEditorClipLineSegmentToViewFrustumPack
---@field AClippedWorldX1 number # esoui type: `integer`
---@field AClippedWorldY1 number # esoui type: `integer`
---@field AClippedWorldZ1 number # esoui type: `integer`
---@field AClippedWorldX2 number # esoui type: `integer`
---@field AClippedWorldY2 number # esoui type: `integer`
---@field AClippedWorldZ2 number # esoui type: `integer`

---@param aWorldX1 number # esoui type: `integer`
---@param aWorldY1 number # esoui type: `integer`
---@param aWorldZ1 number # esoui type: `integer`
---@param aWorldX2 number # esoui type: `integer`
---@param aWorldY2 number # esoui type: `integer`
---@param aWorldZ2 number # esoui type: `integer`
---@return HousingEditorClipLineSegmentToViewFrustumPack # Packed output from *HousingEditorClipLineSegmentToViewFrustum*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorClipLineSegmentToViewFrustum(aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2)
    local data = {HousingEditorClipLineSegmentToViewFrustum(aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2)}
    return {
        AClippedWorldX1 = data[1],
        AClippedWorldY1 = data[2],
        AClippedWorldZ1 = data[3],
        AClippedWorldX2 = data[4],
        AClippedWorldY2 = data[5],
        AClippedWorldZ2 = data[6]
    }
end

---@class HousingEditorGetFurnitureLocalBoundsPack
---@field MinLocalX number
---@field MinLocalY number
---@field MinLocalZ number
---@field MaxLocalX number
---@field MaxLocalY number
---@field MaxLocalZ number

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureLocalBoundsPack # Packed output from *HousingEditorGetFurnitureLocalBounds*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureLocalBounds(furnitureId)
    local data = {HousingEditorGetFurnitureLocalBounds(furnitureId)}
    return {
        MinLocalX = data[1],
        MinLocalY = data[2],
        MinLocalZ = data[3],
        MaxLocalX = data[4],
        MaxLocalY = data[5],
        MaxLocalZ = data[6]
    }
end

---@class HousingEditorGetFurnitureOrientationPack
---@field PitchRadians number
---@field YawRadians number
---@field RollRadians number

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureOrientationPack # Packed output from *HousingEditorGetFurnitureOrientation*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureOrientation(furnitureId)
    local data = {HousingEditorGetFurnitureOrientation(furnitureId)}
    return {
        PitchRadians = data[1],
        YawRadians = data[2],
        RollRadians = data[3]
    }
end

---@class HousingEditorGetFurnitureWorldBoundsPack
---@field MinWorldX number # esoui type: `integer`
---@field MinWorldY number # esoui type: `integer`
---@field MinWorldZ number # esoui type: `integer`
---@field MaxWorldX number # esoui type: `integer`
---@field MaxWorldY number # esoui type: `integer`
---@field MaxWorldZ number # esoui type: `integer`

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureWorldBoundsPack # Packed output from *HousingEditorGetFurnitureWorldBounds*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureWorldBounds(furnitureId)
    local data = {HousingEditorGetFurnitureWorldBounds(furnitureId)}
    return {
        MinWorldX = data[1],
        MinWorldY = data[2],
        MinWorldZ = data[3],
        MaxWorldX = data[4],
        MaxWorldY = data[5],
        MaxWorldZ = data[6]
    }
end

---@class HousingEditorGetFurnitureWorldCenterPack
---@field CenterX number
---@field CenterY number
---@field CenterZ number

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureWorldCenterPack # Packed output from *HousingEditorGetFurnitureWorldCenter*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureWorldCenter(furnitureId)
    local data = {HousingEditorGetFurnitureWorldCenter(furnitureId)}
    return {
        CenterX = data[1],
        CenterY = data[2],
        CenterZ = data[3]
    }
end

---@class HousingEditorGetFurnitureWorldOffsetPack
---@field OffsetX number
---@field OffsetY number
---@field OffsetZ number

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureWorldOffsetPack # Packed output from *HousingEditorGetFurnitureWorldOffset*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureWorldOffset(furnitureId)
    local data = {HousingEditorGetFurnitureWorldOffset(furnitureId)}
    return {
        OffsetX = data[1],
        OffsetY = data[2],
        OffsetZ = data[3]
    }
end

---@class HousingEditorGetFurnitureWorldPositionPack
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@param furnitureId number # esoui type: `id64`
---@return HousingEditorGetFurnitureWorldPositionPack # Packed output from *HousingEditorGetFurnitureWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetFurnitureWorldPosition(furnitureId)
    local data = {HousingEditorGetFurnitureWorldPosition(furnitureId)}
    return {
        WorldX = data[1],
        WorldY = data[2],
        WorldZ = data[3]
    }
end

---@class HousingEditorGetPathNodeOrientationPack
---@field PitchRadians number
---@field YawRadians number
---@field RollRadians number

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return HousingEditorGetPathNodeOrientationPack # Packed output from *HousingEditorGetPathNodeOrientation*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetPathNodeOrientation(furnitureId, index)
    local data = {HousingEditorGetPathNodeOrientation(furnitureId, index)}
    return {
        PitchRadians = data[1],
        YawRadians = data[2],
        RollRadians = data[3]
    }
end

---@class HousingEditorGetPathNodeWorldPositionPack
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@param furnitureId number # esoui type: `id64`
---@param index number # esoui type: `luaindex`
---@return HousingEditorGetPathNodeWorldPositionPack # Packed output from *HousingEditorGetPathNodeWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetPathNodeWorldPosition(furnitureId, index)
    local data = {HousingEditorGetPathNodeWorldPosition(furnitureId, index)}
    return {
        WorldX = data[1],
        WorldY = data[2],
        WorldZ = data[3]
    }
end

---@class HousingEditorGetScreenPointWorldPlaneIntersectionPack
---@field AWorldX number # esoui type: `integer`
---@field AWorldY number # esoui type: `integer`
---@field AWorldZ number # esoui type: `integer`

---@param aScreenX number # esoui type: `integer`
---@param aScreenY number # esoui type: `integer`
---@param aWorldX1 number # esoui type: `integer`
---@param aWorldY1 number # esoui type: `integer`
---@param aWorldZ1 number # esoui type: `integer`
---@param aWorldX2 number # esoui type: `integer`
---@param aWorldY2 number # esoui type: `integer`
---@param aWorldZ2 number # esoui type: `integer`
---@param aWorldX3 number # esoui type: `integer`
---@param aWorldY3 number # esoui type: `integer`
---@param aWorldZ3 number # esoui type: `integer`
---@return HousingEditorGetScreenPointWorldPlaneIntersectionPack # Packed output from *HousingEditorGetScreenPointWorldPlaneIntersection*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetScreenPointWorldPlaneIntersection(aScreenX, aScreenY, aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2, aWorldX3, aWorldY3, aWorldZ3)
    local data = {HousingEditorGetScreenPointWorldPlaneIntersection(aScreenX, aScreenY, aWorldX1, aWorldY1, aWorldZ1, aWorldX2, aWorldY2, aWorldZ2, aWorldX3, aWorldY3, aWorldZ3)}
    return {
        AWorldX = data[1],
        AWorldY = data[2],
        AWorldZ = data[3]
    }
end

---@class HousingEditorGetSelectedObjectOrientationPack
---@field PitchRadians number
---@field YawRadians number
---@field RollRadians number

---@return HousingEditorGetSelectedObjectOrientationPack # Packed output from *HousingEditorGetSelectedObjectOrientation*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetSelectedObjectOrientation()
    local data = {HousingEditorGetSelectedObjectOrientation()}
    return {
        PitchRadians = data[1],
        YawRadians = data[2],
        RollRadians = data[3]
    }
end

---@class HousingEditorGetSelectedObjectWorldCenterPack
---@field CenterX number
---@field CenterY number
---@field CenterZ number

---@return HousingEditorGetSelectedObjectWorldCenterPack # Packed output from *HousingEditorGetSelectedObjectWorldCenter*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetSelectedObjectWorldCenter()
    local data = {HousingEditorGetSelectedObjectWorldCenter()}
    return {
        CenterX = data[1],
        CenterY = data[2],
        CenterZ = data[3]
    }
end

---@class HousingEditorGetSelectedObjectWorldPositionPack
---@field WorldX number # esoui type: `integer`
---@field WorldY number # esoui type: `integer`
---@field WorldZ number # esoui type: `integer`

---@return HousingEditorGetSelectedObjectWorldPositionPack # Packed output from *HousingEditorGetSelectedObjectWorldPosition*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetSelectedObjectWorldPosition()
    local data = {HousingEditorGetSelectedObjectWorldPosition()}
    return {
        WorldX = data[1],
        WorldY = data[2],
        WorldZ = data[3]
    }
end

---@class HousingEditorGetTargetInfoPack
---@field FurnitureId number # esoui type: `id64`
---@field PathIndex? number # esoui type: `luaindex:nilable`

---@return HousingEditorGetTargetInfoPack # Packed output from *HousingEditorGetTargetInfo*
function EsoAddonFramework_Framework_Eso_Pack.HousingEditorGetTargetInfo()
    local data = {HousingEditorGetTargetInfo()}
    return {
        FurnitureId = data[1],
        PathIndex = data[2]
    }
end

---@class IsEquipablePack
---@field IsEquipable boolean # esoui type: `bool`
---@field ResultErrorCodeIfFailed number # esoui type: `integer`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return IsEquipablePack # Packed output from *IsEquipable*
function EsoAddonFramework_Framework_Eso_Pack.IsEquipable(bagId, slotIndex)
    local data = {IsEquipable(bagId, slotIndex)}
    return {
        IsEquipable = data[1],
        ResultErrorCodeIfFailed = data[2]
    }
end

---@class IsItemUsablePack
---@field Usable boolean # esoui type: `bool`
---@field UsableOnlyFromActionSlot boolean # esoui type: `bool`

---@param bagId Bag
---@param slotIndex number # esoui type: `integer`
---@return IsItemUsablePack # Packed output from *IsItemUsable*
function EsoAddonFramework_Framework_Eso_Pack.IsItemUsable(bagId, slotIndex)
    local data = {IsItemUsable(bagId, slotIndex)}
    return {
        Usable = data[1],
        UsableOnlyFromActionSlot = data[2]
    }
end

---@class IsPlayerAllowedToOpenCrownCratesPack
---@field IsAllowed boolean # esoui type: `bool`
---@field ErrorStringId number # esoui type: `integer`

---@return IsPlayerAllowedToOpenCrownCratesPack # Packed output from *IsPlayerAllowedToOpenCrownCrates*
function EsoAddonFramework_Framework_Eso_Pack.IsPlayerAllowedToOpenCrownCrates()
    local data = {IsPlayerAllowedToOpenCrownCrates()}
    return {
        IsAllowed = data[1],
        ErrorStringId = data[2]
    }
end

---@class IsZoneStoryZoneAvailablePack
---@field IsZoneAvailable boolean # esoui type: `bool`
---@field ErrorString string

---@param zoneId number # esoui type: `integer`
---@return IsZoneStoryZoneAvailablePack # Packed output from *IsZoneStoryZoneAvailable*
function EsoAddonFramework_Framework_Eso_Pack.IsZoneStoryZoneAvailable(zoneId)
    local data = {IsZoneStoryZoneAvailable(zoneId)}
    return {
        IsZoneAvailable = data[1],
        ErrorString = data[2]
    }
end

---@class PlainStringFindPack
---@field Found boolean # esoui type: `bool`
---@field StartIndex number # esoui type: `integer`
---@field EndIndex number # esoui type: `integer`

---@param string string
---@param searchFor string
---@return PlainStringFindPack # Packed output from *PlainStringFind*
function EsoAddonFramework_Framework_Eso_Pack.PlainStringFind(string, searchFor)
    local data = {PlainStringFind(string, searchFor)}
    return {
        Found = data[1],
        StartIndex = data[2],
        EndIndex = data[3]
    }
end

---@class ReadLoreBookPack
---@field Body string
---@field Medium BookMedium
---@field ShowTitle boolean # esoui type: `bool`

---@param categoryIndex number # esoui type: `luaindex`
---@param collectionIndex number # esoui type: `luaindex`
---@param bookIndex number # esoui type: `luaindex`
---@return ReadLoreBookPack # Packed output from *ReadLoreBook*
function EsoAddonFramework_Framework_Eso_Pack.ReadLoreBook(categoryIndex, collectionIndex, bookIndex)
    local data = {ReadLoreBook(categoryIndex, collectionIndex, bookIndex)}
    return {
        Body = data[1],
        Medium = data[2],
        ShowTitle = data[3]
    }
end

---@class WorldPositionToGuiRender3DPositionPack
---@field RenderX number
---@field RenderY number
---@field RenderZ number

---@param worldX number # esoui type: `integer`
---@param worldY number # esoui type: `integer`
---@param worldZ number # esoui type: `integer`
---@return WorldPositionToGuiRender3DPositionPack # Packed output from *WorldPositionToGuiRender3DPosition*
function EsoAddonFramework_Framework_Eso_Pack.WorldPositionToGuiRender3DPosition(worldX, worldY, worldZ)
    local data = {WorldPositionToGuiRender3DPosition(worldX, worldY, worldZ)}
    return {
        RenderX = data[1],
        RenderY = data[2],
        RenderZ = data[3]
    }
end

---@class WouldCollectibleBeHiddenPack
---@field IsHidden boolean # esoui type: `bool`
---@field HighestPriorityVisualLayerThatIsShowing VisualLayer

---@param collectibleId number # esoui type: `integer`
---@param actorCategory GameplayActorCategory
---@return WouldCollectibleBeHiddenPack # Packed output from *WouldCollectibleBeHidden*
function EsoAddonFramework_Framework_Eso_Pack.WouldCollectibleBeHidden(collectibleId, actorCategory)
    local data = {WouldCollectibleBeHidden(collectibleId, actorCategory)}
    return {
        IsHidden = data[1],
        HighestPriorityVisualLayerThatIsShowing = data[2]
    }
end

---@class WouldEquipmentBeHiddenPack
---@field IsHidden boolean # esoui type: `bool`
---@field HighestPriorityVisualLayerThatIsShowing VisualLayer

---@param equipSlot EquipSlot
---@param actorCategory GameplayActorCategory
---@return WouldEquipmentBeHiddenPack # Packed output from *WouldEquipmentBeHidden*
function EsoAddonFramework_Framework_Eso_Pack.WouldEquipmentBeHidden(equipSlot, actorCategory)
    local data = {WouldEquipmentBeHidden(equipSlot, actorCategory)}
    return {
        IsHidden = data[1],
        HighestPriorityVisualLayerThatIsShowing = data[2]
    }
end

---@class WouldOutfitBeHiddenPack
---@field IsHidden boolean # esoui type: `bool`
---@field HighestPriorityVisualLayerThatIsShowing VisualLayer

---@param outfitIndex number # esoui type: `luaindex`
---@param actorCategory GameplayActorCategory
---@return WouldOutfitBeHiddenPack # Packed output from *WouldOutfitBeHidden*
function EsoAddonFramework_Framework_Eso_Pack.WouldOutfitBeHidden(outfitIndex, actorCategory)
    local data = {WouldOutfitBeHidden(outfitIndex, actorCategory)}
    return {
        IsHidden = data[1],
        HighestPriorityVisualLayerThatIsShowing = data[2]
    }
end

---@class WouldProcessMapClickPack
---@field WouldProcess boolean # esoui type: `bool`
---@field ResultingMapIndex? number # esoui type: `luaindex:nilable`

---@param normalizedClickX number
---@param normalizedClickY number
---@return WouldProcessMapClickPack # Packed output from *WouldProcessMapClick*
function EsoAddonFramework_Framework_Eso_Pack.WouldProcessMapClick(normalizedClickX, normalizedClickY)
    local data = {WouldProcessMapClick(normalizedClickX, normalizedClickY)}
    return {
        WouldProcess = data[1],
        ResultingMapIndex = data[2]
    }
end

